<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>P2-3 LINQ</title>
    <link href="/2024/09/05/Net%20Core2022%E6%95%99%E7%A8%8B/%E7%AC%AC2%E7%AB%A0%EF%BC%9A.NET%20Core%20%E9%87%8D%E9%9A%BE%E7%82%B9%E7%9F%A5%E8%AF%86/P2-3%20LINQ/"/>
    <url>/2024/09/05/Net%20Core2022%E6%95%99%E7%A8%8B/%E7%AC%AC2%E7%AB%A0%EF%BC%9A.NET%20Core%20%E9%87%8D%E9%9A%BE%E7%82%B9%E7%9F%A5%E8%AF%86/P2-3%20LINQ/</url>
    
    <content type="html"><![CDATA[<h1 id="LINQ"><a href="#LINQ" class="headerlink" title="LINQ"></a>LINQ</h1><hr><h2 id="为什么要学LINQ？"><a href="#为什么要学LINQ？" class="headerlink" title="为什么要学LINQ？"></a>为什么要学LINQ？</h2><ul><li>让数据处理变得简单<ul><li>有可能运行效率不是最好的，但开发效率是很快的</li><li>非常的好用</li></ul></li></ul><h2 id="Lambda表达式的学习路线"><a href="#Lambda表达式的学习路线" class="headerlink" title="Lambda表达式的学习路线"></a>Lambda表达式的学习路线</h2><blockquote><p>委托–&gt;Lambda表达式–&gt;LINQ<br>看第一种怎么变成第二种</p></blockquote><ul><li>1、</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs C#">isOK(<span class="hljs-built_in">int</span> i)<br>&#123;<br>    <span class="hljs-keyword">return</span> i&gt;<span class="hljs-number">3</span>&amp;&amp;&lt;<span class="hljs-number">10</span>;<br>&#125;<br>items.Where(isOK);<br></code></pre></td></tr></table></figure><ul><li>2、</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs C#">items.Where(i=&gt; i&gt;<span class="hljs-number">3</span>&amp;&amp;&lt;<span class="hljs-number">10</span>);<br></code></pre></td></tr></table></figure><h3 id="委托"><a href="#委托" class="headerlink" title="委托"></a>委托</h3><ul><li>1、委托是可以指向方法的类型，调用委托变量时执行的就是变量指向的方法<ul><li>例子：<figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-keyword">class</span> <span class="hljs-title">Program</span><br>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Main</span>(<span class="hljs-params"><span class="hljs-built_in">string</span>[] args</span>)</span><br>    &#123;<br>        D1 d = F1;<span class="hljs-comment">//指向方法F1</span><br>        d();<span class="hljs-comment">//运行方法</span><br><br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">F1</span>()</span><br>    &#123;<br>        Console.WriteLine(<span class="hljs-string">&quot;我是F1&quot;</span>);<br>    &#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-built_in">delegate</span> <span class="hljs-keyword">void</span> <span class="hljs-title">D1</span>()</span>;<span class="hljs-comment">//委托和类一级</span><br></code></pre></td></tr></table></figure></li></ul></li><li>2、.NET中定义了泛型委托Action(无返回值)和Func(有返回值),所以一般不同自定义委托类型</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Main</span>(<span class="hljs-params"><span class="hljs-built_in">string</span>[] args</span>)</span><br>&#123;<br>    D1 d = F1;<span class="hljs-comment">//指向方法F1</span><br>    d();<span class="hljs-comment">//运行方法</span><br>    Func&lt;<span class="hljs-built_in">int</span>,<span class="hljs-built_in">int</span>,<span class="hljs-built_in">int</span>&gt; x = F2;<span class="hljs-comment">//有返回值的</span><br>    Console.WriteLine(x(<span class="hljs-number">6</span>,<span class="hljs-number">8</span>));<br>    Action d1 = F1;<span class="hljs-comment">//没返回值的</span><br>    d1();<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">F1</span>()</span><br>&#123;<br>    Console.WriteLine(<span class="hljs-string">&quot;我是F1&quot;</span>);<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-built_in">int</span> <span class="hljs-title">F2</span>(<span class="hljs-params"><span class="hljs-built_in">int</span> i,<span class="hljs-built_in">int</span> j</span>)</span><br>&#123;<br>    <span class="hljs-keyword">return</span> i + j;<br>&#125;<br></code></pre></td></tr></table></figure><hr><h3 id="Lambda是怎么来的？"><a href="#Lambda是怎么来的？" class="headerlink" title="Lambda是怎么来的？"></a>Lambda是怎么来的？</h3><ul><li>2.委托变量不仅可以指向普通方法，还可以指向匿名方法<ul><li>匿名方法可以写成Lambda表达式<ul><li>进化1<ul><li>可以省略参数数据类型，因为编译能根据委托类型推断出参数的类型，用&#x3D;&gt;引出来方法体 </li><li>&#x3D;&gt; : goes to ；Lambda表达式的运算符</li></ul></li><li>进化2<ul><li>1.Action：如果委托没有返回值，且方法体只有一行代码，可省略{}</li><li>2.Func：如果&#x3D;&gt;之后的方法体中只有一行代码，且方法有返回值，那么可以省略方法体的{}以及return</li></ul></li><li>进化3<ul><li>如果只有一个参数，参数的()可以省略</li></ul></li></ul></li></ul></li><li>第一阶段<figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-comment">//第一阶段(完整写法)</span><br>Action f1 = <span class="hljs-built_in">delegate</span> ()<span class="hljs-comment">//没有参数和返回值的匿名方法</span><br>&#123;<br>Console.WriteLine(<span class="hljs-string">&quot;cool真帅&quot;</span>);<br>&#125;;<br><br>Action&lt;<span class="hljs-built_in">string</span>, <span class="hljs-built_in">int</span>&gt; f2 = <span class="hljs-built_in">delegate</span> (<span class="hljs-built_in">string</span> i, <span class="hljs-built_in">int</span> j)<span class="hljs-comment">//没返回值的匿名方法</span><br>&#123;<br>    Console.WriteLine(<span class="hljs-string">$&quot;n=<span class="hljs-subst">&#123;i&#125;</span>,j=<span class="hljs-subst">&#123;j&#125;</span>&quot;</span>);<br>&#125;;<br>Func&lt;<span class="hljs-built_in">int</span>, <span class="hljs-built_in">int</span>, <span class="hljs-built_in">int</span>&gt; f3 = <span class="hljs-built_in">delegate</span> (<span class="hljs-built_in">int</span> i, <span class="hljs-built_in">int</span> j)<span class="hljs-comment">//有返回值的匿名方法</span><br>&#123;<br>    <span class="hljs-keyword">return</span> i + j;<br>&#125;;<br>f1();<br>f2(<span class="hljs-string">&quot;cool&quot;</span>, <span class="hljs-number">18</span>);<br>Console.WriteLine(f3(<span class="hljs-number">3</span>, <span class="hljs-number">5</span>));<br><br></code></pre></td></tr></table></figure></li><li>第二阶段<figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-comment">//第二阶段：把delegate替换成=&gt; ；然后参数类型都可以去掉，因为编译器能根据委托类型推断出参数的类型</span><br>Action f1 =  () =&gt;&#123; Console.WriteLine(<span class="hljs-string">&quot;cool真帅&quot;</span>);&#125;; <br><br>Action&lt;<span class="hljs-built_in">string</span>, <span class="hljs-built_in">int</span>&gt; f2 =  ( i,  j) =&gt; &#123; Console.WriteLine(<span class="hljs-string">$&quot;n=<span class="hljs-subst">&#123;i&#125;</span>,j=<span class="hljs-subst">&#123;j&#125;</span>&quot;</span>);&#125;;<br><br>Func&lt;<span class="hljs-built_in">int</span>, <span class="hljs-built_in">int</span>, <span class="hljs-built_in">int</span>&gt; f3 =  ( i,  j) =&gt; &#123; <span class="hljs-keyword">return</span> i + j;&#125;;<br></code></pre></td></tr></table></figure></li><li>第三阶段<figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-comment">//第三阶段</span><br>Action f1 = () =&gt; Console.WriteLine(<span class="hljs-string">&quot;cool真帅&quot;</span>); <span class="hljs-comment">//省略&#123;&#125;</span><br><br>Action&lt;<span class="hljs-built_in">string</span>, <span class="hljs-built_in">int</span>&gt; f2 = ( i,  j) =&gt; Console.WriteLine(<span class="hljs-string">$&quot;n=<span class="hljs-subst">&#123;i&#125;</span>,j=<span class="hljs-subst">&#123;j&#125;</span>&quot;</span>); <span class="hljs-comment">//省略&#123;&#125;</span><br><br>Func&lt;<span class="hljs-built_in">int</span>, <span class="hljs-built_in">int</span>, <span class="hljs-built_in">int</span>&gt; f3 = (i, j) =&gt;  i + j; <span class="hljs-comment">//省略方法体的&#123;&#125;以及return</span><br></code></pre></td></tr></table></figure></li><li>第四阶段<figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-comment">//第四阶段</span><br>Func&lt;<span class="hljs-built_in">int</span>, <span class="hljs-built_in">bool</span>&gt; f5 = i =&gt; i &gt; <span class="hljs-number">5</span>;<span class="hljs-comment">//反推1</span><br><br>Func&lt;<span class="hljs-built_in">int</span>, <span class="hljs-built_in">bool</span>&gt; f6 = <span class="hljs-built_in">delegate</span> (<span class="hljs-built_in">int</span> i)<br>    &#123;<br>        <span class="hljs-keyword">return</span> i &gt; <span class="hljs-number">5</span>;<br>    &#125;;<br>Console.WriteLine(f5(<span class="hljs-number">6</span>));<br>Console.WriteLine(f6(<span class="hljs-number">6</span>));<br><br>---------------------------------------------------------<br><br>Action&lt;<span class="hljs-built_in">string</span>&gt; f7 = s =&gt; Console.WriteLine(s);<span class="hljs-comment">//反推2</span><br>Action&lt;<span class="hljs-built_in">string</span>&gt; f8 = <span class="hljs-built_in">delegate</span> (<span class="hljs-built_in">string</span> s)<br>&#123;<br>    Console.WriteLine(s);<br>&#125;;<br>f7(<span class="hljs-string">&quot;帅&quot;</span>);<br>f8(<span class="hljs-string">&quot;努力&quot;</span>);<br></code></pre></td></tr></table></figure></li></ul><h3 id="揭秘LINQ方法的背后"><a href="#揭秘LINQ方法的背后" class="headerlink" title="揭秘LINQ方法的背后"></a>揭秘LINQ方法的背后</h3><ul><li>LINQ中提供了很多集合的扩展方法，配合Lambda能简化数据处理</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-built_in">int</span>[] arrays = &#123; <span class="hljs-number">60</span>, <span class="hljs-number">25</span>, <span class="hljs-number">55</span>, <span class="hljs-number">80</span>, <span class="hljs-number">40</span>, <span class="hljs-number">30</span>, <span class="hljs-number">50</span>, <span class="hljs-number">90</span>, <span class="hljs-number">70</span>, <span class="hljs-number">77</span>, <span class="hljs-number">76</span>, <span class="hljs-number">66</span>, <span class="hljs-number">88</span> &#125;;<br><span class="hljs-comment">//IEnumerable&lt;int&gt; result = arrays.Where(a =&gt; a &gt; 40);//Where方法是扩展方法，using System.Linq</span><br><span class="hljs-keyword">var</span> result = arrays.Where(a =&gt; a &gt; <span class="hljs-number">40</span>);<span class="hljs-comment">//var简化</span><br></code></pre></td></tr></table></figure><ul><li>可以使用var让编译器的“类型推断”来简化类型的声明。在LINQ中常用<ul><li>C#的var和JavaScript的var不一样，在C#上它是强类型的</li><li>在JavaScript中是弱类型的，C#中的弱类型是dynamic(*)，用到了解一下即可</li></ul></li></ul><h4 id="优化上面的代码"><a href="#优化上面的代码" class="headerlink" title="优化上面的代码"></a>优化上面的代码</h4><p>1、编写自己的扩展方法MyWhere来模拟Where的实现。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-function"><span class="hljs-keyword">static</span> IEnumerable&lt;<span class="hljs-built_in">int</span>&gt; <span class="hljs-title">MyWhere</span>(<span class="hljs-params">IEnumerable&lt;<span class="hljs-built_in">int</span>&gt; items,Func&lt;<span class="hljs-built_in">int</span>,<span class="hljs-built_in">bool</span>&gt; f</span>)</span><br>    &#123;<br>        List&lt;<span class="hljs-built_in">int</span>&gt; result = <span class="hljs-keyword">new</span> List&lt;<span class="hljs-built_in">int</span>&gt;();<br>        <span class="hljs-keyword">foreach</span>(<span class="hljs-built_in">int</span> i <span class="hljs-keyword">in</span> items)<br>        &#123;<br>            <span class="hljs-keyword">if</span> (f(i)==<span class="hljs-literal">true</span>)<br>            &#123;<br>                result.Add(i);<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> result;<br>    &#125;<br></code></pre></td></tr></table></figure><p>2、通过yield return来让MyWhere“流水线”处理。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-function"><span class="hljs-keyword">static</span> IEnumerable&lt;<span class="hljs-built_in">int</span>&gt; <span class="hljs-title">MyWhere2</span>(<span class="hljs-params">IEnumerable&lt;<span class="hljs-built_in">int</span>&gt; items, Func&lt;<span class="hljs-built_in">int</span>, <span class="hljs-built_in">bool</span>&gt; f</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">foreach</span> (<span class="hljs-built_in">int</span> i <span class="hljs-keyword">in</span> items)<br>        &#123;<br>            <span class="hljs-keyword">if</span> (f(i) == <span class="hljs-literal">true</span>)<br>            &#123;<br>                <span class="hljs-keyword">yield</span> <span class="hljs-keyword">return</span> i;<br>            &#125;<br>        &#125;<br>    &#125;<br></code></pre></td></tr></table></figure><hr><h2 id="常用集合类的扩展方法"><a href="#常用集合类的扩展方法" class="headerlink" title="常用集合类的扩展方法"></a>常用集合类的扩展方法</h2><ul><li>LINQ关键的功能是提供了集合类的扩展方法。所有实现了IEnumerable<T>接口的类都可以使用这些方法。<ul><li>比如：数组、List、Set等 </li><li>LINQ中提供了大量类似Where的扩展方法，用来简化数据处理。大部分都在System.Linq命名空间中</li></ul></li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-comment">//准备初始数据</span><br><span class="hljs-keyword">class</span> <span class="hljs-title">Employee</span><br>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">long</span> Id &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> Name &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<span class="hljs-comment">//姓名</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> Age &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<span class="hljs-comment">//年龄</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">bool</span> Gender &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<span class="hljs-comment">//性别</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> Salary &#123; <span class="hljs-keyword">get</span>; <span class="hljs-keyword">set</span>; &#125;<span class="hljs-comment">//月薪</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-built_in">string</span> <span class="hljs-title">ToString</span>()</span><br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">$&quot;Id=<span class="hljs-subst">&#123;Id&#125;</span>,Name=<span class="hljs-subst">&#123;Name&#125;</span>,Age=<span class="hljs-subst">&#123;Age&#125;</span>,Gender=<span class="hljs-subst">&#123;Gender&#125;</span>,Salary=<span class="hljs-subst">&#123;Salary&#125;</span>&quot;</span>;<br>    &#125;<br><br>&#125;<br><br><br>List&lt;Employee&gt; list = <span class="hljs-keyword">new</span> List&lt;Employee&gt;();<br>list.Add(<span class="hljs-keyword">new</span> Employee &#123; Id = <span class="hljs-number">1</span>, Name = <span class="hljs-string">&quot;jerry&quot;</span>, Age = <span class="hljs-number">28</span>, Gender = <span class="hljs-literal">true</span>, Salary = <span class="hljs-number">5000</span> &#125;);<br>list.Add(<span class="hljs-keyword">new</span> Employee &#123; Id = <span class="hljs-number">2</span>, Name = <span class="hljs-string">&quot;jim&quot;</span>, Age = <span class="hljs-number">33</span>, Gender = <span class="hljs-literal">true</span>, Salary = <span class="hljs-number">3000</span> &#125;);<br>list.Add(<span class="hljs-keyword">new</span> Employee &#123; Id = <span class="hljs-number">3</span>, Name = <span class="hljs-string">&quot;lily&quot;</span>, Age = <span class="hljs-number">35</span>, Gender = <span class="hljs-literal">false</span>, Salary = <span class="hljs-number">9000</span> &#125;);<br>list.Add(<span class="hljs-keyword">new</span> Employee &#123; Id = <span class="hljs-number">4</span>, Name = <span class="hljs-string">&quot;lucy&quot;</span>, Age = <span class="hljs-number">16</span>, Gender = <span class="hljs-literal">false</span>, Salary = <span class="hljs-number">2000</span> &#125;);<br>list.Add(<span class="hljs-keyword">new</span> Employee &#123; Id = <span class="hljs-number">5</span>, Name = <span class="hljs-string">&quot;kimi&quot;</span>, Age = <span class="hljs-number">25</span>, Gender = <span class="hljs-literal">true</span>, Salary = <span class="hljs-number">1000</span> &#125;);<br>list.Add(<span class="hljs-keyword">new</span> Employee &#123; Id = <span class="hljs-number">6</span>, Name = <span class="hljs-string">&quot;nancy&quot;</span>, Age = <span class="hljs-number">35</span>, Gender = <span class="hljs-literal">false</span>, Salary = <span class="hljs-number">8000</span> &#125;);<br>list.Add(<span class="hljs-keyword">new</span> Employee &#123; Id = <span class="hljs-number">7</span>, Name = <span class="hljs-string">&quot;zack&quot;</span>, Age = <span class="hljs-number">35</span>, Gender = <span class="hljs-literal">true</span>, Salary = <span class="hljs-number">8500</span> &#125;);<br>list.Add(<span class="hljs-keyword">new</span> Employee &#123; Id = <span class="hljs-number">8</span>, Name = <span class="hljs-string">&quot;jack&quot;</span>, Age = <span class="hljs-number">33</span>, Gender = <span class="hljs-literal">true</span>, Salary = <span class="hljs-number">8000</span> &#125;);<br></code></pre></td></tr></table></figure><h3 id="Where方法：数据过滤"><a href="#Where方法：数据过滤" class="headerlink" title="Where方法：数据过滤"></a>Where方法：数据过滤</h3><ul><li><code>Where</code>方法：根据条件对数据进行过滤，类似SQL语句的where那个意思</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-keyword">var</span> items = list.Where(e=&gt;e.Age&gt;<span class="hljs-number">25</span>);<br><span class="hljs-keyword">foreach</span>(<span class="hljs-keyword">var</span> i <span class="hljs-keyword">in</span> items)<br>&#123;<br>    Console.WriteLine(i);<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="Count方法：获取数据条数"><a href="#Count方法：获取数据条数" class="headerlink" title="Count方法：获取数据条数"></a>Count方法：获取数据条数</h3><ul><li><code>Count</code>方法：获取数据条数</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs C#">list.Count(e =&gt; e.Age &gt; <span class="hljs-number">30</span>&amp;&amp;e.Salary&gt;<span class="hljs-number">5000</span>);<span class="hljs-comment">//直接计算数据条数</span><br>list.Where(e =&gt; e.Age &gt; <span class="hljs-number">30</span> &amp;&amp; e.Salary &gt; <span class="hljs-number">5000</span>).Count();<span class="hljs-comment">//先过滤，后计算</span><br></code></pre></td></tr></table></figure><h3 id="Any方法：判断是否至少有一条满足条件的数据"><a href="#Any方法：判断是否至少有一条满足条件的数据" class="headerlink" title="Any方法：判断是否至少有一条满足条件的数据"></a>Any方法：判断是否至少有一条满足条件的数据</h3><ul><li><code>Any</code>方法：判断集合中是否至少有一条满足条件的数据<ul><li>Any比Count实现效率更高</li></ul></li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs C#">list.Any();<br>list.Any(e =&gt; e.Age &gt; <span class="hljs-number">30</span> &amp;&amp; e.Salary &gt; <span class="hljs-number">30000</span>);<br>list.Where(e =&gt; e.Age &gt; <span class="hljs-number">30</span> &amp;&amp; e.Salary &gt; <span class="hljs-number">30000</span>).Any();<br></code></pre></td></tr></table></figure><h3 id="获取一条数据"><a href="#获取一条数据" class="headerlink" title="获取一条数据"></a>获取一条数据</h3><ul><li>LINQ中有4组获取一条数据的方法，选择合适的方法，进行“防御性编程”。</li><li>合理使用这些可以提高程序的正确性<blockquote><p>一个健壮的程序，不应该隐藏异常，而是有了异常要及早暴露出来，以避免引起更大的问题<br>—《ASP.NET Core 技术内幕与项目实战》</p></blockquote></li></ul><h4 id="Single方法"><a href="#Single方法" class="headerlink" title="Single方法"></a>Single方法</h4><p>使用<code>Single</code>方法时，应确认集合中有且仅有一条满足条件的数据。</p><ul><li>如果没有数据或多于一条数据满足条件，<code>Single</code>将抛出异常。</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs C#">Employee e1 = list.Single(e =&gt; e.Name == <span class="hljs-string">&quot;jim&quot;</span>);<br>Employee e2 = list.Where(e =&gt; e.Name == <span class="hljs-string">&quot;jim&quot;</span>).Single();<br></code></pre></td></tr></table></figure><h4 id="SingleOrDefault方法"><a href="#SingleOrDefault方法" class="headerlink" title="SingleOrDefault方法"></a>SingleOrDefault方法</h4><p>使用<code>SingleOrDefault</code>方法时，应确认集合中最多只有一条满足要求的数据。</p><ul><li>如果没有满足条件的数据，<code>SingleOrDefault</code>就会返回类型的默认值</li><li>如果满足条件的数据多于一条，<code>SingleOrDefault</code>就会抛出异常</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs C#">Employee e1 = list.SingleOrDefault(e =&gt; e.Name == <span class="hljs-string">&quot;jim&quot;</span>);<br>Employee e2 = list.Where(e =&gt; e.Age == <span class="hljs-number">33</span>).SingleOrDefault();<br></code></pre></td></tr></table></figure><h4 id="First方法"><a href="#First方法" class="headerlink" title="First方法"></a>First方法</h4><p>使用<code>First</code>方法时，如果集合中满足条件的数据有一条或者多条，<code>First</code>就会返回第一条数据<br>如果没有满足条件的数据，<code>First</code>就会抛出异常</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs C#">Employee e1 = list.First(e =&gt; e.Name == <span class="hljs-string">&quot;jim&quot;</span>);<br>Employee e2 = list.Where(e =&gt; e.Age == <span class="hljs-number">35</span>).First();<br></code></pre></td></tr></table></figure><h4 id="FirstOrDefault方法"><a href="#FirstOrDefault方法" class="headerlink" title="FirstOrDefault方法"></a>FirstOrDefault方法</h4><p>使用<code>FirstOrDefault</code>方法时，如果集合中满足条件的数据有一条或者多条，<code>FirstOrDefault</code>就会返回第一条数据<br>如果没有满足条件的数据，<code>FirstOrDefault</code>就会返回类型的默认值</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs C#">Employee e3 = list.FirstOrDefault(e =&gt; e.Name == <span class="hljs-string">&quot;jim&quot;</span>);<br>Employee e4 = list.Where(e =&gt; e.Age == <span class="hljs-number">33</span>).FirstOrDefault();<br></code></pre></td></tr></table></figure><h3 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h3><ul><li>使用<code>OrderBy</code>方法时，对数据进行正向排序</li><li>使用<code>OrderByDescending</code>方法时，对数据进行逆向排序</li><li>常规我们都是用某个<code>属性</code>去排序</li><li>对于简单类型排序，也许不用lambda表达式。<ul><li>特殊案例：按照最后一个字符排序；用Guid或者随机数进行随机排序</li></ul></li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-keyword">var</span> e1 = list.OrderBy(e =&gt; e.Age);<span class="hljs-comment">//正向排序</span><br><span class="hljs-keyword">var</span> e2 = list.OrderByDescending(e =&gt; e.Age);<span class="hljs-comment">//逆向排序</span><br><span class="hljs-keyword">foreach</span> ( <span class="hljs-keyword">var</span> e <span class="hljs-keyword">in</span> e2)<br>&#123;<br>    Console.WriteLine(e);<br>&#125;<br><br>------------------------------------------------<br><span class="hljs-comment">//简单类型排序</span><br><span class="hljs-built_in">int</span>[] nums = <span class="hljs-keyword">new</span> <span class="hljs-built_in">int</span>[] &#123; <span class="hljs-number">3</span>, <span class="hljs-number">6</span>, <span class="hljs-number">9</span>, <span class="hljs-number">111</span>, <span class="hljs-number">56</span>, <span class="hljs-number">2</span>, <span class="hljs-number">7</span>, <span class="hljs-number">3</span>, <span class="hljs-number">10</span> &#125;;<br><span class="hljs-keyword">var</span> nums2 = nums.OrderBy(i =&gt; i);<br><span class="hljs-keyword">foreach</span> (<span class="hljs-keyword">var</span> e <span class="hljs-keyword">in</span> nums2)<br>&#123;<br>    Console.WriteLine(e);<br>&#125;<br><br><br>------------------------------------------------<br><br><span class="hljs-keyword">var</span> e1 = list.OrderBy(e =&gt; e.Name[e.Name.Length<span class="hljs-number">-1</span>]);<span class="hljs-comment">//取名字最后一个字母进行排序</span><br><span class="hljs-keyword">var</span> e2 = list.OrderBy(e =&gt; Guid.NewGuid());<span class="hljs-comment">//Guid 随机数算法</span><br><br>Random rand = <span class="hljs-keyword">new</span> Random();<br><span class="hljs-keyword">var</span> e3 = list.OrderBy(e =&gt; rand.Next()); <span class="hljs-comment">//随机数</span><br><br><span class="hljs-keyword">foreach</span> (<span class="hljs-keyword">var</span> e <span class="hljs-keyword">in</span> e3)<br>&#123;<br>    Console.WriteLine(e);<br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="多规则排序"><a href="#多规则排序" class="headerlink" title="多规则排序"></a>多规则排序</h4><ul><li>可以在<code>OrderBy</code>、<code>OrderByDescending</code>后面继续写<code>ThenBy</code>、<code>ThenByDescending</code>用来二次筛选</li><li>案例：优先按照Age排序，如果Age相同再按照Salary排序</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-keyword">var</span> e1 = list.OrderBy(e =&gt; e.Age).ThenBy(e=&gt;e.Salary);<span class="hljs-comment">//正序</span><br><span class="hljs-keyword">var</span> e2 = list.OrderByDescending(e =&gt; e.Age).ThenByDescending(e =&gt; e.Salary);<span class="hljs-comment">//倒序</span><br></code></pre></td></tr></table></figure><h3 id="限制结果集，获取部分数据"><a href="#限制结果集，获取部分数据" class="headerlink" title="限制结果集，获取部分数据"></a>限制结果集，获取部分数据</h3><ul><li>使用<code>Skip(n)</code>方法:跳过n条数据</li><li>使用<code>Take(n)</code>方法：获取n条数据</li><li>两者可以组合使用，也可以单独使用<ul><li>案例：获取从第2条开始获取3条数据</li></ul></li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-keyword">var</span> e1 = list.Skip(<span class="hljs-number">1</span>).Take(<span class="hljs-number">3</span>);<span class="hljs-comment">//跳过一条，取3条</span><br><span class="hljs-keyword">foreach</span> (<span class="hljs-keyword">var</span> e <span class="hljs-keyword">in</span> e1)<br>&#123;<br>    Console.WriteLine(e);<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="聚合函数"><a href="#聚合函数" class="headerlink" title="聚合函数"></a>聚合函数</h3><ul><li><code>Max()</code>、<code>Min ()</code> 、<code>Average () </code>、<code>Sum ()</code> 、<code>Count ()</code>。</li><li>LINQ中所有的扩展方法几乎都是针对IEnumerable接口的，而几乎所有能返回集合的都返回IEnumerable，所以是可以把几乎所有方法用来“链式使用”的。</li><li>可以和Where、Skip、Take等方法一起使用</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-built_in">int</span> e1=list.Where(e =&gt; e.Age &gt; <span class="hljs-number">30</span>).Max(e =&gt; e.Salary);<span class="hljs-comment">//Max</span><br><br><span class="hljs-built_in">int</span> e1=list.Where(e =&gt; e.Age &gt; <span class="hljs-number">30</span>).Min(e =&gt; e.Salary);<span class="hljs-comment">//Min</span><br><br><span class="hljs-built_in">double</span> e1=list.Where(e =&gt; e.Age &gt; <span class="hljs-number">30</span>).Average(e =&gt; e.Salary);<span class="hljs-comment">//Average</span><br><br><span class="hljs-built_in">double</span> e1=list.Where(e =&gt; e.Age &gt; <span class="hljs-number">30</span>).Sum(e =&gt; e.Salary);<span class="hljs-comment">//Sum</span><br><br><span class="hljs-built_in">int</span> e1=list.Where(e =&gt; e.Age &gt; <span class="hljs-number">30</span>).Count();<span class="hljs-comment">//Count</span><br></code></pre></td></tr></table></figure><h3 id="分组"><a href="#分组" class="headerlink" title="分组"></a>分组</h3><ul><li><p>使用<code>GroupBy</code>方法:类似于SQL中group by实现的分组操作</p></li><li><p>GroupBy()方法参数是分组条件表达式，返回值为IGrouping&lt;TKey, TSource&gt;类型的泛型IEnumerable，也就是每一组以一个IGrouping对象的形式返回。-</p></li><li><p>IGrouping是一个继承自IEnumerable的接口，IGrouping中Key属性表示这一组的分组数据的值。</p></li><li><p>例子：根据年龄分组，获取每组人数、最高工资、平均工资。用var简化编程。</p></li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs C#">IEnumerable&lt;IGrouping&lt;<span class="hljs-built_in">int</span>, Employee&gt;&gt; items = list.GroupBy(e =&gt; e.Age);<span class="hljs-comment">//Groupby分组，分完后每一个都是IGrouping类型的组</span><br><span class="hljs-keyword">foreach</span> (IGrouping&lt;<span class="hljs-built_in">int</span>, Employee&gt; item <span class="hljs-keyword">in</span> items)<br>&#123;<br>    Console.WriteLine(item.Key);<br>    Console.WriteLine(<span class="hljs-string">&quot;最大工资：&quot;</span>+item.Max(e=&gt;e.Salary));<br>    <span class="hljs-keyword">foreach</span> (Employee e <span class="hljs-keyword">in</span> item)<br>    &#123;<br>        Console.WriteLine(e);<br>    &#125;<br>    Console.WriteLine(<span class="hljs-string">&quot;*************************&quot;</span>);<br>&#125;<br><br><span class="hljs-comment">//可以用var去让编译器自动推断变量类型，来简化代码</span><br><span class="hljs-keyword">var</span> items = list.GroupBy(e =&gt; e.Age);<span class="hljs-comment">//Groupby分组，分完后每一个都是IGrouping类型的组</span><br><span class="hljs-keyword">foreach</span> (<span class="hljs-keyword">var</span> item <span class="hljs-keyword">in</span> items)<br>&#123;<br>    Console.WriteLine(item.Key);<br>    Console.WriteLine(<span class="hljs-string">&quot;最大工资：&quot;</span> + item.Max(e =&gt; e.Salary));<br>    <span class="hljs-keyword">foreach</span> (Employee e <span class="hljs-keyword">in</span> item)<br>    &#123;<br>        Console.WriteLine(e);<br>    &#125;<br>    Console.WriteLine(<span class="hljs-string">&quot;*************************&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-comment">//例子：根据年龄分组，获取每组人数、最高工资、平均工资。用var简化编程。</span><br><br><span class="hljs-keyword">var</span> items = list.GroupBy(e =&gt; e.Age);<br><span class="hljs-keyword">foreach</span> (<span class="hljs-keyword">var</span> e <span class="hljs-keyword">in</span> items)<br>&#123;<br>    Console.WriteLine(<span class="hljs-string">&quot;人数为：&quot;</span>+e.Count());<br>    Console.WriteLine(<span class="hljs-string">&quot;最高工资为：&quot;</span> + e.Max(e=&gt;e.Salary));<br>    Console.WriteLine(<span class="hljs-string">&quot;平均工资为：&quot;</span> + e.Average(e =&gt; e.Salary));<br>    <span class="hljs-keyword">foreach</span> (<span class="hljs-keyword">var</span> item <span class="hljs-keyword">in</span> e)<br>    &#123;<br>        Console.WriteLine(item);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="投影"><a href="#投影" class="headerlink" title="投影"></a>投影</h3><ul><li>使用<code>Select</code>方法:类似于SQL中Select的投影查询<ul><li>把集合中的每一项逐个转换为另外一种类型</li></ul></li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs C#"><br><span class="hljs-comment">//类似于SQL中的Select操作，都是把对应的数据取出来 投影出来</span><br>IEnumerable&lt;<span class="hljs-built_in">int</span>&gt; ltems1 =  list.Select(e =&gt; e.Age);<br><span class="hljs-keyword">foreach</span> (<span class="hljs-built_in">int</span> e <span class="hljs-keyword">in</span> ltems1)<br>&#123;<br>    Console.WriteLine(e);<br>&#125;<br><br>IEnumerable&lt;<span class="hljs-built_in">string</span>&gt; items2 = list.Select(e =&gt; e.Gender ? <span class="hljs-string">&quot;男&quot;</span> : <span class="hljs-string">&quot;女&quot;</span>);<span class="hljs-comment">//把bool转换成string取出来</span><br>    <span class="hljs-keyword">foreach</span> (<span class="hljs-built_in">string</span> e <span class="hljs-keyword">in</span> items2)<br>    &#123;<br>        Console.WriteLine(e);<br>    &#125;<br><br><span class="hljs-keyword">var</span> item3 = list.Select(e =&gt; <span class="hljs-keyword">new</span> Dog &#123; NickName = e.Name, Age = e.Age &#125;);<br><span class="hljs-keyword">foreach</span> (<span class="hljs-keyword">var</span> item <span class="hljs-keyword">in</span> item3)<br>&#123;<br>    Console.WriteLine(item.NickName+<span class="hljs-string">&quot;,&quot;</span>+item.Age);<br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="投影与匿名类型"><a href="#投影与匿名类型" class="headerlink" title="投影与匿名类型"></a>投影与匿名类型</h4><ul><li>匿名类型<ul><li>可以通过反编译看匿名类型原理<ul><li>编译器自动创建一个类，里面有Name和Age的属性</li></ul></li><li>var搭配匿名类型无敌~(匿名类型因为没有名字，所以object类型也管不到，只能使用var)</li></ul></li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-keyword">var</span> e = <span class="hljs-keyword">new</span> &#123; Name = <span class="hljs-string">&quot;Cool&quot;</span>, Age = <span class="hljs-number">18</span> &#125;;<br></code></pre></td></tr></table></figure><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240902/%E5%8C%BF%E5%90%8D%E7%B1%BB%E5%9E%8B.2h88znx6xa.webp" alt="匿名类型"></p><ul><li>投影和匿名类型结合</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-keyword">var</span> items = list.Select(e =&gt; <span class="hljs-keyword">new</span> &#123; NewName = e.Name, NewAge = e.Age, XingBie = e.Gender ? <span class="hljs-string">&quot;男&quot;</span> : <span class="hljs-string">&quot;女&quot;</span>, Money=e.Salary&#125;);<br><span class="hljs-keyword">foreach</span> (<span class="hljs-keyword">var</span> item <span class="hljs-keyword">in</span> items)<br>&#123;<br>    Console.WriteLine(item.NewName);<br>    Console.WriteLine(item.NewAge);<br>    Console.WriteLine(item.XingBie);<br>    Console.WriteLine(item.Money);<br>    Console.WriteLine(<span class="hljs-string">&quot;********************&quot;</span>);<br>&#125;<br><br><span class="hljs-comment">//例子：根据年龄分组，获取每组人数、平均工资。</span><br><span class="hljs-keyword">var</span> items = list.GroupBy(e =&gt; e.Age).Select(g =&gt; <span class="hljs-keyword">new</span> &#123; Gender = g.Key, Count = g.Count(), Av = g.Average(e=&gt;e.Salary),MaxAge=g.Max(e=&gt;e.Age),MinAge=g.Min(e=&gt;e.Age) &#125;);<br><span class="hljs-keyword">foreach</span> (<span class="hljs-keyword">var</span> item <span class="hljs-keyword">in</span> items)<br>&#123;<br>    Console.WriteLine(<span class="hljs-string">$&quot;年龄：<span class="hljs-subst">&#123;item.Gender&#125;</span>+每组人数:<span class="hljs-subst">&#123;item.Count&#125;</span>+平均工资：<span class="hljs-subst">&#123;item.Av&#125;</span>&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="集合转换"><a href="#集合转换" class="headerlink" title="集合转换"></a>集合转换</h3><ul><li>有一些地方需要数组类型或者List类型的变量，我们可以用ToArray()方法和ToList()分别把IEnumerable<T>转换为数组类型和List<T>类型</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs C#">Employee[] items1 = list.Where(e =&gt; e.Salary &gt; <span class="hljs-number">3000</span>).ToArray();<br>List&lt;Employee&gt; items2 = list.Where(e =&gt; e.Salary &gt; <span class="hljs-number">3000</span>).ToList();<br></code></pre></td></tr></table></figure><h4 id="链式调用"><a href="#链式调用" class="headerlink" title="链式调用"></a>链式调用</h4><ul><li>Where、Select、OrderBy、GroupBy、Take、Skip等返回值都是IEnumerable<T>类型，所以可以链式调用。</li><li>例子：“获取Id&gt;2的数据，然后按照Age分组，并且把分组按照Age排序，然后取出前3条，最后再投影取得年龄、人数、平均工资”</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-keyword">var</span> items = list.Where(e =&gt; e.Id &gt; <span class="hljs-number">2</span>).GroupBy(e =&gt; e.Age).OrderBy(g =&gt; g.Key).Take(<span class="hljs-number">3</span>)<br>.Select(g =&gt; <span class="hljs-keyword">new</span> &#123; NewAge = g.Key, Count = g.Count(), Av = g.Average(e =&gt; e.Salary) &#125;);<br><span class="hljs-comment">//g=IGrouping&lt;int,Employee&gt; ;  e=Employee</span><br><span class="hljs-keyword">foreach</span> (<span class="hljs-keyword">var</span> item <span class="hljs-keyword">in</span> items)<br>&#123;<br>Console.WriteLine(<span class="hljs-string">$&quot;年龄：<span class="hljs-subst">&#123;item.NewAge&#125;</span>;人数:<span class="hljs-subst">&#123;item.Count&#125;</span>;平均工资：<span class="hljs-subst">&#123;item.Av&#125;</span>&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><hr><h2 id="LINQ的另一种写法"><a href="#LINQ的另一种写法" class="headerlink" title="LINQ的另一种写法"></a>LINQ的另一种写法</h2><ul><li>在上面学习的时候使用Where、OrderBy、Select等 扩展方法进行数据查询的写法叫做“LINQ的方法语法”。</li><li>除此之外，LINQ还有另外一种叫做“查询语法”的写法<ul><li>查询语法<ul><li><strong>“查询语法”看起来更酷，但是“方法语法”更实用，因此.NET开发者大部分还是用的“方法语法”</strong><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-comment">//LINQ方法语法</span><br><span class="hljs-keyword">var</span> items = list.Where(e =&gt; e.Salary &gt; <span class="hljs-number">3000</span>).OrderBy(e =&gt; e.Age)<br>    .Select(e =&gt; <span class="hljs-keyword">new</span> &#123; MZ = e.Name, NL = e.Age, XB = e.Gender ? <span class="hljs-string">&quot;男&quot;</span> : <span class="hljs-string">&quot;女&quot;</span> &#125;);<br><br><span class="hljs-comment">//查询语法</span><br><span class="hljs-keyword">var</span> items = <span class="hljs-keyword">from</span> e <span class="hljs-keyword">in</span> list<br>            <span class="hljs-keyword">where</span> e.Salary &gt; <span class="hljs-number">5000</span><br>            <span class="hljs-keyword">orderby</span> e.Age<br>            <span class="hljs-keyword">select</span> <span class="hljs-keyword">new</span> &#123; e.Name, e.Age, Gender = e.Gender ? <span class="hljs-string">&quot;男&quot;</span> : <span class="hljs-string">&quot;女&quot;</span> &#125;;<br></code></pre></td></tr></table></figure></li></ul></li></ul></li><li>两者的区别<ul><li>运行时没有区别，编译后都是一样的。<ul><li>可以从反编译中看到编译后都变成了查询语法的样子</li></ul></li></ul></li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240904/%E5%8F%8D%E7%BC%96%E8%AF%91.6t729o0yas.webp" alt="反编译"></p><h2 id="LINQ解决面试问题"><a href="#LINQ解决面试问题" class="headerlink" title="LINQ解决面试问题"></a>LINQ解决面试问题</h2><ul><li>性能与面试<ul><li>LINQ大部分时间不会影响性能(项目开发中，基本不影响)<ul><li>不过杨中科老师遇到过一个场景用LINQ影响了性能<ul><li>做抠图软件过程中，需要把绿幕扣掉，换上新背景</li><li>这就需要对每一个像素点操作，取出一个点的rgb值，然后取出它的最大值。用到了LINQ会发现很卡</li><li>换了三元运算符后就好了</li></ul></li></ul></li><li>面试的时候算法题一般尽量避免使用正则表达式、LINQ等这些高级的类库。<ul><li>例子：大饭店面试大厨的故事<ul><li>不会让你做山珍海味，就让你做蛋炒饭去考验你的技术</li><li>好比代码，你会用LINQ，不代表你厉害，因为这是框架的力量<ul><li>你能用最简单的代码达到同样的效果，这才是你自己的技术</li></ul></li></ul></li></ul></li></ul></li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-comment">//LINQ方法</span><br><span class="hljs-built_in">int</span> i = <span class="hljs-number">5</span>;<br><span class="hljs-built_in">int</span> j = <span class="hljs-number">8</span>;<br><span class="hljs-built_in">int</span> k = <span class="hljs-number">6</span>;<br><span class="hljs-built_in">int</span>[] nums = <span class="hljs-keyword">new</span> <span class="hljs-built_in">int</span>[] &#123; i, j, k &#125;; <br><span class="hljs-built_in">int</span> max = nums.Max();<br>Console.WriteLine(max);<br><br><span class="hljs-comment">//常规方法或者三元运算符</span><br><span class="hljs-built_in">int</span> i = <span class="hljs-number">5</span>;<br><span class="hljs-built_in">int</span> j = <span class="hljs-number">8</span>;<br><span class="hljs-built_in">int</span> k = <span class="hljs-number">6</span>;<br><span class="hljs-built_in">int</span> max = Math.Max(i, Math.Max(j, k));<br>Console.WriteLine(max);<br></code></pre></td></tr></table></figure><ul><li>案例1<ul><li>有一个用逗号分隔的表示成绩的字符串，如”61,90,100,99,18,22,38,66,80,93,55,50,89”，计算这些成绩的平均值。</li></ul></li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-comment">//案例1</span><br><span class="hljs-comment">//有一个用逗号分隔的表示成绩的字符串，如&quot;61,90,100,99,18,22,38,66,80,93,55,50,89&quot;，计算这些成绩的平均值。</span><br><br><span class="hljs-comment">//自己写的，没用LINQ</span><br><span class="hljs-built_in">string</span> s = <span class="hljs-string">&quot;61,90,100,99,18,22,38,66,80,93,55,50,89&quot;</span>;<br><span class="hljs-built_in">double</span> sum = <span class="hljs-number">0</span>;<br>  String[] items = s.Split(<span class="hljs-string">&quot;,&quot;</span>);<br><br>  <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; items.Length; i++)<br>  &#123;<br>      sum = sum + <span class="hljs-built_in">double</span>.Parse(items[i]);<br>      <span class="hljs-keyword">if</span> (i == items.Length<span class="hljs-number">-1</span>)<br>      &#123;<br>          <span class="hljs-built_in">double</span> CJ = sum / items.Length;<br>          Console.WriteLine(CJ);<br>      &#125;<br>  &#125;<br><span class="hljs-comment">//展开写</span><br>String[] items = s.Split(<span class="hljs-string">&quot;,&quot;</span>);<br>IEnumerable&lt;<span class="hljs-built_in">int</span>&gt; nums = items.Select(e =&gt; Convert.ToInt32(e));<br><span class="hljs-built_in">double</span> avg = nums.Average();<br>Console.WriteLine(avg);<br><span class="hljs-comment">//最简洁的写法</span><br><span class="hljs-built_in">double</span> avg = s.Split(<span class="hljs-string">&#x27;,&#x27;</span>).Select(e =&gt; Convert.ToInt32(e)).Average();<br>Console.WriteLine(avg);<br><br></code></pre></td></tr></table></figure><ul><li>案例2<ul><li>统计一个字符串中每个字母出现的频率（忽略大小写），然后按照从高到低的顺序输出出现频率高于2次的单词和其出现的频率。</li></ul></li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-comment">//案例2</span><br><span class="hljs-comment">//统计一个字符串中每个字母出现的频率（忽略大小写），然后按照从高到低的顺序输出出现频率高于2次的单词和其出现的频率。</span><br><span class="hljs-built_in">string</span> s1 = <span class="hljs-string">&quot;a,b,c,w,g,t,k,l,i,u,t,q,a,z,v,A,FG,JF,AD,TRDH,SDFDS,EAREW,SDFFSA,AFDS,N&quot;</span>;<br><span class="hljs-keyword">var</span> strs = s1.Where(c =&gt; <span class="hljs-built_in">char</span>.IsLetter(c)).Select(c =&gt; <span class="hljs-built_in">char</span>.ToLower(c)).GroupBy(c =&gt; c)<br>    .Select(g=&gt;<span class="hljs-keyword">new</span> &#123; g.Key,Count=g.Count()&#125;).OrderByDescending(g=&gt;g.Count).Where(g=&gt;g.Count&gt;<span class="hljs-number">2</span>);<br><span class="hljs-keyword">foreach</span> (<span class="hljs-keyword">var</span> item <span class="hljs-keyword">in</span> strs)<br>&#123;<br>    Console.WriteLine(item);<br>&#125;<br></code></pre></td></tr></table></figure><hr><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul><li>本章介绍了用简单的几个声明就可以完成复杂数据处理任务的LINQ技术<ul><li>委托–&gt;Lambda表达式–&gt;LINQ</li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>.NET Core</category>
      
      <category>第2章：.NET Core 重难点知识</category>
      
    </categories>
    
    
    <tags>
      
      <tag>.NET Core2022-学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P9-技术负债  程序员不想离职 请重视并尽快还清技术负债</title>
    <link href="/2024/08/29/%E7%A8%8B%E5%BA%8F%E8%BD%AF%E6%8A%80%E8%83%BD/P9-%E6%8A%80%E6%9C%AF%E8%B4%9F%E5%80%BA%20%20%E7%A8%8B%E5%BA%8F%E5%91%98%E4%B8%8D%E6%83%B3%E7%A6%BB%E8%81%8C%20%E8%AF%B7%E9%87%8D%E8%A7%86%E5%B9%B6%E5%B0%BD%E5%BF%AB%E8%BF%98%E6%B8%85%E6%8A%80%E6%9C%AF%E8%B4%9F%E5%80%BA/"/>
    <url>/2024/08/29/%E7%A8%8B%E5%BA%8F%E8%BD%AF%E6%8A%80%E8%83%BD/P9-%E6%8A%80%E6%9C%AF%E8%B4%9F%E5%80%BA%20%20%E7%A8%8B%E5%BA%8F%E5%91%98%E4%B8%8D%E6%83%B3%E7%A6%BB%E8%81%8C%20%E8%AF%B7%E9%87%8D%E8%A7%86%E5%B9%B6%E5%B0%BD%E5%BF%AB%E8%BF%98%E6%B8%85%E6%8A%80%E6%9C%AF%E8%B4%9F%E5%80%BA/</url>
    
    <content type="html"><![CDATA[<h1 id="技术负债"><a href="#技术负债" class="headerlink" title="技术负债"></a>技术负债</h1><h2 id="技术负债的定义与产生"><a href="#技术负债的定义与产生" class="headerlink" title="技术负债的定义与产生"></a>技术负债的定义与产生</h2><p>技术负债是指在编程过程中，因为时间紧迫或其他压力，选择编写难以理解、难以维护的代码，从而产生的长期问题。以下是技术负债的详细解释：</p><ul><li><p><strong>什么是技术负债</strong></p><ul><li>在时间充裕和压力较小的情况下，写出整洁、可读性强的代码。</li><li>在时间紧迫和压力大的情况下，写出无章法、难以维护的代码。</li><li>选择后者时，我们就已经背上了技术负债。<ul><li>技术负债中的债务指的是难以修改和理解的代码。</li><li>这些代码不是技术故障或者程序BUG本身这些代码，而是为故障提供条件的糟糕代码。</li><li>技术负债类似于商业中的债务，会产生”利息”。</li></ul></li></ul></li><li><p><strong>概念</strong></p><ul><li>因为商业中的负债和技术负债的结果类似，所以把代码中难以维护的情况称为技术负债。</li></ul></li><li><p><strong>技术负债的影响</strong></p><ul><li>如果不能及时重构，技术负债会像债务一样产生”利息”。</li><li>阅读和修改糟糕的代码会花费更多时间，导致软件运行不稳定。</li><li>技术负债过多时，软件将变得不稳定且难以修改，最终可能被用户淘汰。</li></ul></li></ul><h2 id="技术负债的恶性循环"><a href="#技术负债的恶性循环" class="headerlink" title="技术负债的恶性循环"></a>技术负债的恶性循环</h2><p>技术负债会导致恶性循环，原因如下：</p><ul><li>代码难以理解，添加新功能或修复故障的时间增多。</li><li>未及时偿还的技术负债会进一步膨胀。</li><li>现实世界中，公司给的时间总是仓促，导致程序员降低代码质量以满足上线要求。</li><li>持续借债开发而不重构，会让技术负债越陷越深。</li></ul><h2 id="如何偿还技术负债"><a href="#如何偿还技术负债" class="headerlink" title="如何偿还技术负债"></a>如何偿还技术负债</h2><p>偿还技术负债的方法是重构混乱的代码，让其变得整洁。以下是一些具体的建议：</p><ul><li><p><strong>方法</strong></p><ul><li>重构混乱的代码，提高代码的整洁度和可读性。</li></ul></li><li><p><strong>面临的挑战</strong></p><ul><li>很多人不愿意重构代码，原因包括：<ol><li>付出与收获不成正比，没有直接的经济激励。</li><li>认为学习新技术比重构代码更重要。</li></ol></li></ul></li><li><p><strong>正确的顺序</strong></p><ul><li>先确保当前的代码质量，再去学习新技术。</li><li>在重构过程中，可以获得宝贵的经验，对整个开发生涯都有贡献。</li></ul></li><li><p><strong>债务笔记本</strong></p><ul><li>记录需要偿还的技术债务，并在合适的时间尽快偿还。</li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>程序软技能</category>
      
    </categories>
    
    
    <tags>
      
      <tag>程序软技能</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P8-  HTML+CSS+JavaScript的练手项目</title>
    <link href="/2024/08/29/%E7%A8%8B%E5%BA%8F%E8%BD%AF%E6%8A%80%E8%83%BD/P8-HTML+CSS+JavaScript%E7%9A%84%E7%BB%83%E6%89%8B%E9%A1%B9%E7%9B%AE/"/>
    <url>/2024/08/29/%E7%A8%8B%E5%BA%8F%E8%BD%AF%E6%8A%80%E8%83%BD/P8-HTML+CSS+JavaScript%E7%9A%84%E7%BB%83%E6%89%8B%E9%A1%B9%E7%9B%AE/</url>
    
    <content type="html"><![CDATA[<h1 id="HTML-CSS-JavaScript的练手项目"><a href="#HTML-CSS-JavaScript的练手项目" class="headerlink" title="HTML+CSS+JavaScript的练手项目"></a>HTML+CSS+JavaScript的练手项目</h1><hr><p>开源库地址：<a href="https://github.com/bradtraversy/50projects50days">https://github.com/bradtraversy/50projects50days</a></p>]]></content>
    
    
    <categories>
      
      <category>程序软技能</category>
      
    </categories>
    
    
    <tags>
      
      <tag>程序软技能</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P7-作为前端程序员 花费大量时间 学的最没用的5个编程技术</title>
    <link href="/2024/08/29/%E7%A8%8B%E5%BA%8F%E8%BD%AF%E6%8A%80%E8%83%BD/P7-%E4%BD%9C%E4%B8%BA%E5%89%8D%E7%AB%AF%E7%A8%8B%E5%BA%8F%E5%91%98%20%E8%8A%B1%E8%B4%B9%E5%A4%A7%E9%87%8F%E6%97%B6%E9%97%B4%20%E5%AD%A6%E7%9A%84%E6%9C%80%E6%B2%A1%E7%94%A8%E7%9A%845%E4%B8%AA%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/"/>
    <url>/2024/08/29/%E7%A8%8B%E5%BA%8F%E8%BD%AF%E6%8A%80%E8%83%BD/P7-%E4%BD%9C%E4%B8%BA%E5%89%8D%E7%AB%AF%E7%A8%8B%E5%BA%8F%E5%91%98%20%E8%8A%B1%E8%B4%B9%E5%A4%A7%E9%87%8F%E6%97%B6%E9%97%B4%20%E5%AD%A6%E7%9A%84%E6%9C%80%E6%B2%A1%E7%94%A8%E7%9A%845%E4%B8%AA%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/</url>
    
    <content type="html"><![CDATA[<h1 id="前端程序员学的最没用的5个编程技术"><a href="#前端程序员学的最没用的5个编程技术" class="headerlink" title="前端程序员学的最没用的5个编程技术"></a>前端程序员学的最没用的5个编程技术</h1><hr><p>我的师父告诉我：程序员必须不断学习，目的是为了不要犯我犯过的错，让你少走一些弯路。</p><h2 id="技术一：AngularJs"><a href="#技术一：AngularJs" class="headerlink" title="技术一：AngularJs"></a>技术一：AngularJs</h2><ul><li>一款构建用户界面的前端框架</li><li>这个坑新人最容易踩</li></ul><h2 id="技术二：jQuery"><a href="#技术二：jQuery" class="headerlink" title="技术二：jQuery"></a>技术二：jQuery</h2><ul><li>一个快速、简洁的JavaScript框架</li><li>替代：MVVM框架</li></ul><h2 id="技术三：Flutter"><a href="#技术三：Flutter" class="headerlink" title="技术三：Flutter"></a>技术三：Flutter</h2><ul><li>开源的构建用户界面(UI)工具包</li><li>替代：ReactNative</li></ul><h2 id="技术四：PHP"><a href="#技术四：PHP" class="headerlink" title="技术四：PHP"></a>技术四：PHP</h2><ul><li>是在服务器端执行的脚本语言</li><li>如果你想快速上手后端开发，完全可以用Node.js</li><li>如果你要追求高并发和更先进的语言，完全可以使用Golang</li></ul><h2 id="技术五：低代码平台"><a href="#技术五：低代码平台" class="headerlink" title="技术五：低代码平台"></a>技术五：低代码平台</h2><ul><li>不用编写程序就可以开发应用</li><li>又臭又长的文档~</li></ul><hr><blockquote><p>《程序正在吞噬世界》<br>人们在清醒的时间里，几乎每分每秒都在使用软件。你的手机，你的笔记本电脑，你的电子邮件，你的社交媒体，你的电子游戏，你的网络电视，你呼叫的出租车，你点的外卖……无一不与软件相关。但是，还有一些不太明显的软件也充斥着你的生活：你触摸到的每一本纸质书或每一页传单都是由软件设计的，你汽车中的刹车系统也有编程的影子，你的银行利用“机器学习”算法全天候监视着你的购买行为</p></blockquote><blockquote><p>世界正在被程序改造</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>程序软技能</category>
      
    </categories>
    
    
    <tags>
      
      <tag>程序软技能</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P6-转行当程序员 先看看这份攻略 无痛转行程序员 真实案例分享</title>
    <link href="/2024/08/28/%E7%A8%8B%E5%BA%8F%E8%BD%AF%E6%8A%80%E8%83%BD/P6-%E8%BD%AC%E8%A1%8C%E5%BD%93%E7%A8%8B%E5%BA%8F%E5%91%98%20%E5%85%88%E7%9C%8B%E7%9C%8B%E8%BF%99%E4%BB%BD%E6%94%BB%E7%95%A5%20%E6%97%A0%E7%97%9B%E8%BD%AC%E8%A1%8C%E7%A8%8B%E5%BA%8F%E5%91%98%20%E7%9C%9F%E5%AE%9E%E6%A1%88%E4%BE%8B%E5%88%86%E4%BA%AB/"/>
    <url>/2024/08/28/%E7%A8%8B%E5%BA%8F%E8%BD%AF%E6%8A%80%E8%83%BD/P6-%E8%BD%AC%E8%A1%8C%E5%BD%93%E7%A8%8B%E5%BA%8F%E5%91%98%20%E5%85%88%E7%9C%8B%E7%9C%8B%E8%BF%99%E4%BB%BD%E6%94%BB%E7%95%A5%20%E6%97%A0%E7%97%9B%E8%BD%AC%E8%A1%8C%E7%A8%8B%E5%BA%8F%E5%91%98%20%E7%9C%9F%E5%AE%9E%E6%A1%88%E4%BE%8B%E5%88%86%E4%BA%AB/</url>
    
    <content type="html"><![CDATA[<h1 id="无痛转行程序员-真实案例分享"><a href="#无痛转行程序员-真实案例分享" class="headerlink" title="无痛转行程序员 真实案例分享"></a>无痛转行程序员 真实案例分享</h1><hr><h2 id="如何顺利转行当程序员"><a href="#如何顺利转行当程序员" class="headerlink" title="如何顺利转行当程序员"></a>如何顺利转行当程序员</h2><h3 id="半路出家的优势"><a href="#半路出家的优势" class="headerlink" title="半路出家的优势"></a>半路出家的优势</h3><h4 id="传统行业从业者转行当程序员的优势"><a href="#传统行业从业者转行当程序员的优势" class="headerlink" title="传统行业从业者转行当程序员的优势"></a>传统行业从业者转行当程序员的优势</h4><ul><li><strong>比科班程序员更具备优秀的人际交往能力</strong><ul><li>程序员的工作中其实有着各种的交际场景和会议交流，属于高密度的工作。所以不善于交流和缺乏软技能是科班程序员绕不开的一个劣势</li></ul></li><li><strong>可以跳出程序思维，获得独特的视角</strong></li></ul><h3 id="非科班的劣势"><a href="#非科班的劣势" class="headerlink" title="非科班的劣势"></a>非科班的劣势</h3><h4 id="转换中遇到的困难和不利因素"><a href="#转换中遇到的困难和不利因素" class="headerlink" title="转换中遇到的困难和不利因素"></a>转换中遇到的困难和不利因素</h4><ul><li><strong>科班程序员的鄙视和误解</strong><ul><li>现实是残酷的，所以在你转行的过程当中是相当艰难的，而且本身就伴随着一些不利因素.</li><li>软件开发工作的高复杂度和所需的大量知识是阻碍许多人转行成为程序员的一个最大的障碍<ul><li>因此市面上宣称通过六个月培训就能成功转行当程序员的例子，往往只是培训机构的营销手段<ul><li>宁可相信这世界上有鬼，也别相信招生老师那张破嘴</li></ul></li></ul></li><li>实际上，‌想要转行成功，‌必须完成大量的学习任务，‌并有针对性地完成实践项目，‌这样才能在编程领域成为行家。‌</li></ul></li><li><strong>工作经验</strong><ul><li>关于工作经验，‌一些培训机构可能会包装学员为具有3-5年工作经验，‌但实际上，‌很多学员在试用期就难以胜任。‌</li><li>即使你真的当了三年程序员，‌即使你的智商和才能超过一些有十年开发经验的程序员，‌但你仍然可能无法与他们相提并论。‌因为你没有经历过他们工作中所遇到并解决的问题，因此难以在短时间内弥补经验上的不足，‌从而获得超越同龄人的薪资。‌</li></ul></li><li>鄙视链会随着时间的推移慢慢消逝掉</li></ul><h3 id="转行具体实现方法"><a href="#转行具体实现方法" class="headerlink" title="转行具体实现方法"></a>转行具体实现方法</h3><blockquote><p>目的是让你尽可能的实现转行成功，并且减少你的痛苦</p></blockquote><ul><li>现实没人想雇佣一个毫无编程经验的程序员，如果你的简历上面是3-5年的木工机床经验，那你该如何得到一份不错的编程工作呢？</li></ul><h4 id="1-从原工作入手，逐步转行"><a href="#1-从原工作入手，逐步转行" class="headerlink" title="1. 从原工作入手，逐步转行"></a>1. 从原工作入手，逐步转行</h4><ul><li><strong>策略</strong>：在不放弃现有工作的情况下，通过当前岗位积累编程经验。</li><li><strong>案例</strong>：小李在做木工机床时，通过学习PLC编程，编写自动化程序提高工作效率，最终转型成为一名程序员。</li><li><strong>关键点</strong>：<ul><li>最终变成了一个既会PLC编程又对数控机床很了解的程序员。</li><li>把编程融入当前工作，写出小型项目(小程序)积累实践经验。</li><li>可以在公司内部找到编程的机会，开发自动化工具或管理软件，为转行积累实际项目经验。</li><li>当编程经验和项目积累到一定程度，转变为全职编程工作。</li></ul></li></ul><blockquote><p>扩展：如果你想转行当一名程序员，你甚至可以在当前工作的公司内部为自己创造一个软件开发角色，把一些工作实现自动化或者规范化的这样一个管理软件，你的软件有价值了就会成为你转行最好的实践经验，当你积攒了足够多的经验和小项目后，在未来的某个时间上，你可以把这份兼职开发编程一个全职工作了，<br>这样你既不用辞职承受无薪的压力，也可以慢慢增加编程经验，很有可能你都不用离开原来的公司，就成为一名专业的程序员。一旦开始从事正式的编程工作，那么在其他公司找到另一份更好的编程工作，自然也不在话下，只是时间问题</p></blockquote><h4 id="2-利用原工作行业背景，成为专属领域开发专家"><a href="#2-利用原工作行业背景，成为专属领域开发专家" class="headerlink" title="2. 利用原工作行业背景，成为专属领域开发专家"></a>2. 利用原工作行业背景，成为专属领域开发专家</h4><ul><li><strong>策略</strong>：结合行业专业知识和编程技能，开发特定领域的专属软件。</li><li><strong>案例</strong>：小王从水利工作转行，通过自学开发了一款水利管理软件，并创业成立了自己的软件公司。</li><li><strong>关键点</strong>：<ul><li>行业内的深厚知识是开发有针对性软件的宝贵优势，普通开发者难以替代。</li><li>行业内的经验可以帮助开发出更实用、符合需求的软件。</li><li>专注某个行业，结合技术和业务知识，可能带来更大的成功。</li></ul></li></ul><blockquote><p>小王原本在水利行业工作了7年，‌积累了丰富的行业经验。‌当国家开始大力推广软件和科技化时，‌他敏锐地察觉到了其中的机遇，‌决定自学编程，‌为水利工作开发一款实用的管理软件。‌经过两年的努力学习和编写，‌他终于成功研发出了一款适合水利从业者使用的管理软件。‌这款软件在原单位试用一年后，‌得到了广泛的好评，‌小王也因此看到了更大的市场前景。‌于是，‌他毅然辞去了原来的工作，‌自主创立了一家软件公司，‌专注于研发水利工作所需的软件。‌如今，‌他的公司年收入已经达到了几百万，‌实现了从水利专家到成功创业者的华丽转身。‌</p><ul><li>他能成功的秘诀就是：他不仅仅是一个软件开发者，而且他是一个水利专家。他知道什么样的软件能帮助到水利从业者减轻工作量做到规范化管理和准确预警</li><li>而普通的开发者可能技术比他高，但因为不了解行业知识，所以无法完成这样的软件开发。就算开发出来了，也许也不会让使用者有良好的使用体验。所以在开发软件的行当中，拥有领域业务的专业知识可以变成你极大的价值优势</li><li>对于软件开发公司来说，找到一个具有十年开发经验的程序员很简单，但是找到一个既会软件开发又拥有十年领域行业内专业经验的人 就太难了。这都是宝贝</li><li>所以如果你想转行当程序员，并且有着其他行业的专业经验，可以试着利用你现在有的看似与软件无关的行业内专业经验，找出方法让他变成稀世珍宝，这并不困难，基本上任何人都能做到这一点。</li><li>因为现在的软件开发已经几乎存在于每个主要行业当中了，你只要用心，一定可以找到~</li></ul></blockquote><h4 id="3-忘记过去成就，愿意从底层开始"><a href="#3-忘记过去成就，愿意从底层开始" class="headerlink" title="3. 忘记过去成就，愿意从底层开始"></a>3. 忘记过去成就，愿意从底层开始</h4><ul><li><strong>策略</strong>：转行意味着从头开始，要放下过去的成就，脚踏实地从初级开发者做起。</li><li><strong>关键点</strong>：<ul><li>与其他行业相比，程序员竞争激烈，精英众多。</li><li>需要具备从零学习的心态，接受自己是行业新人，逐步提升技能。</li></ul></li></ul><blockquote><p>如果你正在转行软件开发，这就代表你放弃了以前所有的成绩<br>  要做好心里准备：与其他行业相比，程序员高手如林，精英遍地。所以无论你之前有多优秀，你在资深开发者眼里都是青铜新手</p></blockquote><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul><li>不要轻易放弃当前工作，可以在现有工作中通过小项目积累编程经验。</li><li>将自己原有行业的知识和经验转化为编程中的优势，成为某个领域的专家型程序员。</li><li>保持谦逊的态度，从基础做起，逐步提高技术水平，最终实现转行目标。</li></ul><p>这种逐步积累经验的方式，可以大大减少转行带来的经济压力和学习压力，同时也能让自己在新的领域中逐步站稳脚跟。</p>]]></content>
    
    
    <categories>
      
      <category>程序软技能</category>
      
    </categories>
    
    
    <tags>
      
      <tag>程序软技能</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P5-程序员高强度工作后 如何高效利用下班时间学习</title>
    <link href="/2024/08/28/%E7%A8%8B%E5%BA%8F%E8%BD%AF%E6%8A%80%E8%83%BD/P5-%E7%A8%8B%E5%BA%8F%E5%91%98%E9%AB%98%E5%BC%BA%E5%BA%A6%E5%B7%A5%E4%BD%9C%E5%90%8E%20%E5%A6%82%E4%BD%95%E9%AB%98%E6%95%88%E5%88%A9%E7%94%A8%E4%B8%8B%E7%8F%AD%E6%97%B6%E9%97%B4%E5%AD%A6%E4%B9%A0/"/>
    <url>/2024/08/28/%E7%A8%8B%E5%BA%8F%E8%BD%AF%E6%8A%80%E8%83%BD/P5-%E7%A8%8B%E5%BA%8F%E5%91%98%E9%AB%98%E5%BC%BA%E5%BA%A6%E5%B7%A5%E4%BD%9C%E5%90%8E%20%E5%A6%82%E4%BD%95%E9%AB%98%E6%95%88%E5%88%A9%E7%94%A8%E4%B8%8B%E7%8F%AD%E6%97%B6%E9%97%B4%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h1 id="如何高效利用下班时间学习"><a href="#如何高效利用下班时间学习" class="headerlink" title="如何高效利用下班时间学习"></a>如何高效利用下班时间学习</h1><hr><h2 id="可用时间的分配"><a href="#可用时间的分配" class="headerlink" title="可用时间的分配"></a>可用时间的分配</h2><ul><li>可用时间&#x3D;24小时-工作时间-通勤时间-休息时间-花在必要事项上的时间<ul><li>通勤时间：尽量租在公司近一点的地方。贵是贵点，省下来的30分钟-2小时可以用来提升自己</li><li>误区一：减少休息时间<ul><li>这看似是最简单的增加可用时间的方法，就是减少睡眠时间<ul><li>这是错误的。因为睡眠减少，大脑的反应会变慢，让自己的效率降低。保持6-8小时的睡眠是最好的</li></ul></li></ul></li></ul></li><li>个人认为最简单的增加可用时间的方法就是减少刷社交媒体和玩游戏的时间</li><li>有了可用时间后，你会遇到一个棘手的问题：就是如何控制下面两个变量<ul><li>1.要学习的内容或者要做的事情</li><li>2.下班后的个人状态<ul><li>靠意志力去学习提高自己几乎是不可能的，要不然也不会有那么多人在下班的时候刷抖音了~</li></ul></li><li>唯有一种方法能驱动我们，就是去做敢兴趣的能带来快乐的事情，感兴趣和带来快乐是相辅相成的<ul><li>对一件事情感兴趣就会深入研究，在学习时带来正面的反馈和肯定，就会让自己高兴起来<ul><li>利用费曼学习法可以把学习这件事变得足够喜欢，足够开心，无论工作多累都能立马开始行动</li><li>所以如果你想在下班后做点事情，不妨从喜欢的事情开始</li><li>用这种方法，你也可以完全的戒掉网瘾和无意义的刷手机</li></ul></li></ul></li></ul></li></ul><h2 id="学习和努力的目的？"><a href="#学习和努力的目的？" class="headerlink" title="学习和努力的目的？"></a>学习和努力的目的？</h2><ul><li>第一：赚钱</li><li>第二：谋求自己的发展</li><li>只有知道自己学习的目的后，你才能获得高效，否则你背道而驰就没有任何的意义</li><li>高效学习有三因素影响：快乐&#x2F;发展&#x2F;赚钱，下图三者的焦点就是最好的地方，但一般人一生都找不到<ul><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240828/%E9%AB%98%E6%95%88%E5%AD%A6%E4%B9%A0.60u6hz9qba.webp" alt="高效学习"></li></ul></li><li>比如B站的“老戴在此”就找了这个焦点<ul><li>1.喜欢玩游戏，玩游戏就会获得快乐</li><li>2.做游戏攻略，做游戏产品推广</li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>程序软技能</category>
      
    </categories>
    
    
    <tags>
      
      <tag>程序软技能</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P4-当程序员15年后 那些后知后觉的经验教学|我踩的大坑 小伙伴们就别踩了</title>
    <link href="/2024/08/28/%E7%A8%8B%E5%BA%8F%E8%BD%AF%E6%8A%80%E8%83%BD/P4-%E5%BD%93%E7%A8%8B%E5%BA%8F%E5%91%9815%E5%B9%B4%E5%90%8E%20%E9%82%A3%E4%BA%9B%E5%90%8E%E7%9F%A5%E5%90%8E%E8%A7%89%E7%9A%84%E7%BB%8F%E9%AA%8C%E6%95%99%E5%AD%A6%EF%BC%9B%E6%88%91%E8%B8%A9%E7%9A%84%E5%A4%A7%E5%9D%91%20%E5%B0%8F%E4%BC%99%E4%BC%B4%E4%BB%AC%E5%B0%B1%E5%88%AB%E8%B8%A9%E4%BA%86/"/>
    <url>/2024/08/28/%E7%A8%8B%E5%BA%8F%E8%BD%AF%E6%8A%80%E8%83%BD/P4-%E5%BD%93%E7%A8%8B%E5%BA%8F%E5%91%9815%E5%B9%B4%E5%90%8E%20%E9%82%A3%E4%BA%9B%E5%90%8E%E7%9F%A5%E5%90%8E%E8%A7%89%E7%9A%84%E7%BB%8F%E9%AA%8C%E6%95%99%E5%AD%A6%EF%BC%9B%E6%88%91%E8%B8%A9%E7%9A%84%E5%A4%A7%E5%9D%91%20%E5%B0%8F%E4%BC%99%E4%BC%B4%E4%BB%AC%E5%B0%B1%E5%88%AB%E8%B8%A9%E4%BA%86/</url>
    
    <content type="html"><![CDATA[<h1 id="程序员的经验教学"><a href="#程序员的经验教学" class="headerlink" title="程序员的经验教学"></a>程序员的经验教学</h1><hr><h2 id="经验教学环节"><a href="#经验教学环节" class="headerlink" title="经验教学环节"></a>经验教学环节</h2><h3 id="1-对于程序员来说英语很重要，可能比逻辑能力更重要。"><a href="#1-对于程序员来说英语很重要，可能比逻辑能力更重要。" class="headerlink" title="1.对于程序员来说英语很重要，可能比逻辑能力更重要。"></a>1.对于程序员来说英语很重要，可能比逻辑能力更重要。</h3><ul><li>当你脱离了初级阶段后，你会发现你开发的东西中文资料就会变得越来越少，特殊是在Github上交流的时候，都是使用英语交流。</li><li>如果英语不好，就只能等这些技术普及后，出了中文版本后，才能开始通透的学习</li><li>如果英语好，你的编程语文化和规范化也会得到很大的提升<ul><li>用中文或拼音来起变量名的同事，这是一个非常不好的习惯。在公司开发中是明令禁止的，会给团队和搭档带来很多的困扰，所以如果想提高编程的技术，一定要把英语的门槛跨过去</li></ul></li></ul><h3 id="2-学会控制情绪，别惹程序员同事，越蔫的人爆发起来越可怕。"><a href="#2-学会控制情绪，别惹程序员同事，越蔫的人爆发起来越可怕。" class="headerlink" title="2.学会控制情绪，别惹程序员同事，越蔫的人爆发起来越可怕。"></a>2.学会控制情绪，别惹程序员同事，越蔫的人爆发起来越可怕。</h3><ul><li>学会控制情绪对于程序员来说也是一项技能<ul><li>控制情绪的小方法<ul><li>首先在遇到事情的时候，先问问自己发火对这件事到底有没有用，没有用那就不要发火了。</li><li>其次换位思考，用同理心说服自己，多站在对方的角度和立场考虑问题，</li><li>最后你需要有自己的发泄情绪的方式，比如：打游戏，看电影，练书法等</li><li>要活好，心别小；善之怒，寿无数</li></ul></li></ul></li></ul><h3 id="3-先弄清楚自己想作的事，都是程序员，但道路却千万条"><a href="#3-先弄清楚自己想作的事，都是程序员，但道路却千万条" class="headerlink" title="3.先弄清楚自己想作的事，都是程序员，但道路却千万条"></a>3.先弄清楚自己想作的事，都是程序员，但道路却千万条</h3><ul><li>比如有的人什么都会，什么python，Java，C#，前端啊 都会，但都不深，到不了专家的程度</li><li>刚进编程这个行业，尽早确定自己想做的事情，也就是你喜欢的技术，你的职业目标越早确定就意味着你获得了比其他人更多的时间去努力</li><li>首先要保持一个技术成为技术专家后，在去扩展自己的其他技能。而不要学的是“多能不专”的立好志向</li></ul><h3 id="4-别相信那些21天精通XXX语言，10000小时定律适用于程序员。"><a href="#4-别相信那些21天精通XXX语言，10000小时定律适用于程序员。" class="headerlink" title="4.别相信那些21天精通XXX语言，10000小时定律适用于程序员。"></a>4.别相信那些21天精通XXX语言，10000小时定律适用于程序员。</h3><ul><li>当你有了经验之后，你会发现所谓速成的方法都是皮毛。</li><li>10000小时定律，刻意练习</li></ul><h3 id="5-睡觉对于程序员很重要，编程不会掉头发，但熬夜肯定掉头发"><a href="#5-睡觉对于程序员很重要，编程不会掉头发，但熬夜肯定掉头发" class="headerlink" title="5.睡觉对于程序员很重要，编程不会掉头发，但熬夜肯定掉头发"></a>5.睡觉对于程序员很重要，编程不会掉头发，但熬夜肯定掉头发</h3><ul><li>注意身体健康</li></ul><blockquote><p>人活一生，什么才最重要?<br>知识?能力?人脉?金钱?<br>我觉得，都不是，健康才是最重要的。</p></blockquote><blockquote><p>我永远相信程序可以改变世界</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>程序软技能</category>
      
    </categories>
    
    
    <tags>
      
      <tag>程序软技能</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P3-程序员是吃青春饭的职业吗？如何破解国内程序员的诅咒</title>
    <link href="/2024/08/28/%E7%A8%8B%E5%BA%8F%E8%BD%AF%E6%8A%80%E8%83%BD/P3-%E7%A8%8B%E5%BA%8F%E5%91%98%E6%98%AF%E5%90%83%E9%9D%92%E6%98%A5%E9%A5%AD%E7%9A%84%E8%81%8C%E4%B8%9A%E5%90%97%EF%BC%9F%E5%A6%82%E4%BD%95%E7%A0%B4%E8%A7%A3%E5%9B%BD%E5%86%85%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E8%AF%85%E5%92%92/"/>
    <url>/2024/08/28/%E7%A8%8B%E5%BA%8F%E8%BD%AF%E6%8A%80%E8%83%BD/P3-%E7%A8%8B%E5%BA%8F%E5%91%98%E6%98%AF%E5%90%83%E9%9D%92%E6%98%A5%E9%A5%AD%E7%9A%84%E8%81%8C%E4%B8%9A%E5%90%97%EF%BC%9F%E5%A6%82%E4%BD%95%E7%A0%B4%E8%A7%A3%E5%9B%BD%E5%86%85%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E8%AF%85%E5%92%92/</url>
    
    <content type="html"><![CDATA[<h1 id="如何破解国内程序员的诅咒"><a href="#如何破解国内程序员的诅咒" class="headerlink" title="如何破解国内程序员的诅咒"></a>如何破解国内程序员的诅咒</h1><hr><h2 id="15年程序员怎么看这个问题"><a href="#15年程序员怎么看这个问题" class="headerlink" title="15年程序员怎么看这个问题"></a>15年程序员怎么看这个问题</h2><ul><li>它的回答：程序员绝对不是一个吃青春饭的职业，但也不能说每个程序员他都能干到60岁。</li><li>怎么样变成程序员领域的常青树呢？</li></ul><h3 id="为什么说程序员是吃青春饭的职业吗？"><a href="#为什么说程序员是吃青春饭的职业吗？" class="headerlink" title="为什么说程序员是吃青春饭的职业吗？"></a>为什么说程序员是吃青春饭的职业吗？</h3><ul><li>1、国内的IT公司把<strong>脑力劳动干成了体力劳动</strong>，都是以最小化功能上线，上线后不断的迭代。<ul><li>小步快跑的模式就注定了开发速度高于一切</li></ul></li><li>程序员吃青春饭的原因—(三大程序员诅咒)<ul><li>1.国内的互联网还是有泡沫的存在，而且不小</li><li>2.国内还是人多，用人推出超大型项目；拼加班，拼体力</li><li>3.互联网技术发展太快，一段时间不学习就会被淘汰</li></ul></li></ul><h3 id="打破诅咒"><a href="#打破诅咒" class="headerlink" title="打破诅咒"></a>打破诅咒</h3><ul><li><p>打破第一个诅咒：互联网泡沫开发诅咒</p><ul><li>这个大现象我们无法改变。但可以在应聘的时候找以技术为主的公司，而不是要找以模式为主的公司<ul><li>例子：两家公司，A公式是做游戏开发的公司，公司有20几款的手机小游戏在同时运行，B公司是做游戏引擎开发的，他的游戏引擎有上万个游戏在使用。<ul><li>你很幸运的都通过这两家公司，如果从技术发展和职业稳定性讲，你认为哪家公司更好呢？更值得你去入职呢</li><li>A公司就是那种以快和拼体力为主的公司；而B公司就是以技术为主的公司。所以选B公司更好</li></ul></li><li>如果你正在学习编程，也尽量选择以技术为主的编程技能；而不是看重学习以使用框架为主的技能。<ul><li>很多人一直开发的东西都是后台系统、中台系统等，开发时，不断使用开源框架和开源的库去组合进行开发，虽然看上去有三年的开发经验，但是这样的开发并不能磨炼你真正的技术，而你需要做的是开发高度可重复使用的UI库或者简化开发的前端框架，这些才是真正能磨炼你的技术的东西。而当你的技术锻炼到自己可以开发框架的程度，也就不会被轻易淘汰掉了</li></ul></li></ul></li><li>总结<ul><li>1.尽量找技术驱动发展的公司去工作，而不是追热潮的公司</li><li>2.尽量学习和开发底层的库和框架，而不是只做业务开发<blockquote><p>无论你起多早，总有人比你更早<br>无论你多努力，总有人比你更努力<br>“放弃”二字15笔，“坚持”二字16笔<br>放弃和坚持就一笔之差<br>差之毫厘 失之千里<br>一切源于你自己  —技术胖</p></blockquote></li></ul></li></ul></li><li><p>打破第二个诅咒：加班和拼体力的诅咒</p><ul><li>例子<ul><li>加班的主要原因并不是工作量太大，而是对知识不够了解，不够牢固，当我找到自己的原因后开始改变，每天必须拿出1-2小时去学习，学习工作中的开发技能。在经过四个月左右的坚持后，发现自己编写代码的速度是越来越快了。</li><li>直观区别，以前写程序是一边写一边看文档。而现在，几乎不再用看任何的文档，所以编写代码的速度自然上来了，比以前至少快了两倍，而且编写代码的质量和抽象能力都大大的提高。这样就可以封装出很多插件和库，并且在业务逻辑代码中不断的复用他们，最终解决了加班的情况</li></ul></li><li>方法就是：不是更多的加班，而是每天拿出时间去熟悉你的开发工具。工具是指语言和使用的开发框架，当你的工具用的出神入化时，开发速度就自然上来了，当你越来越熟练使用后，你甚至能感受到开发的快感</li></ul></li><li><p>打破第三个诅咒：由于技术更新而被淘汰</p><ul><li>当你选择了程序员这个行业，你就要不断的去学习。</li><li>大部分脑力为主的职业都需要不断的学习<ul><li>比如：医生，演员，律师等</li></ul></li><li><strong>如果你真的喜欢程序员这个行业，就不要因为需要学习而选择放弃</strong></li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>程序软技能</category>
      
    </categories>
    
    
    <tags>
      
      <tag>程序软技能</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P2-程序员应聘技巧 保姆级流程攻略</title>
    <link href="/2024/08/27/%E7%A8%8B%E5%BA%8F%E8%BD%AF%E6%8A%80%E8%83%BD/P2-%E7%A8%8B%E5%BA%8F%E5%91%98%E5%BA%94%E8%81%98%E6%8A%80%E5%B7%A7%20%E4%BF%9D%E5%A7%86%E7%BA%A7%E6%B5%81%E7%A8%8B%E6%94%BB%E7%95%A5/"/>
    <url>/2024/08/27/%E7%A8%8B%E5%BA%8F%E8%BD%AF%E6%8A%80%E8%83%BD/P2-%E7%A8%8B%E5%BA%8F%E5%91%98%E5%BA%94%E8%81%98%E6%8A%80%E5%B7%A7%20%E4%BF%9D%E5%A7%86%E7%BA%A7%E6%B5%81%E7%A8%8B%E6%94%BB%E7%95%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="程序员应聘技巧-保姆级流程攻略"><a href="#程序员应聘技巧-保姆级流程攻略" class="headerlink" title="程序员应聘技巧 保姆级流程攻略"></a>程序员应聘技巧 保姆级流程攻略</h1><hr><h2 id="应聘的重要性"><a href="#应聘的重要性" class="headerlink" title="应聘的重要性"></a>应聘的重要性</h2><blockquote><p>15年老程序员给你的应聘技巧(B站-技术胖)</p></blockquote><ul><li>应聘中哪个环节最重要？<ul><li>项目经验的介绍</li></ul></li></ul><h3 id="应聘中应该做好的五件事"><a href="#应聘中应该做好的五件事" class="headerlink" title="应聘中应该做好的五件事"></a>应聘中应该做好的五件事</h3><h4 id="如何准备简历"><a href="#如何准备简历" class="headerlink" title="如何准备简历"></a>如何准备简历</h4><ul><li>简历的最基本要求<ul><li>简历中没有错别字</li><li>保证简历的语句通顺</li><li>简历中有良好的逻辑性<ul><li>其次要重点打磨自己的开发经验和项目经验这个模块</li></ul></li></ul></li><li>项目经验介绍，用简练的文字描述项目背景，承担角色、参与项目的时长、用的技术和你的突出贡献<ul><li>我对当前的开发领域充满激情</li><li>我在团队中能够很好的有效沟通</li><li>我在编程的专业领域足够擅长</li><li>我会很快融入新的团队并为团队做出贡献</li><li>例子<ul><li>反例：在2021年5月—2021年12月和团队一起开发了京东物流中台系统</li><li>正确：京东公司物流中台系统开发，京东随着业务量增大和物流体系完善后，需要多套系统配合管理物流数据和信息分发，于是组成了13人的开发小组，在三个月里完成了从零到一的上线。期间我担任前端主程，使用了React+AntDesign+微服务的形式开发了数据中台的可视化部分。项目中我用Chart.js开发的大屏图表模块，可以实时显示所有接口和信息分发、物流机器人的情况，并且现在每天都显示在京东物流中心监控大屏中最大的那块屏幕上。 在加上项目照片</li><li>避免把一个项目经验介绍成了故事</li></ul></li></ul></li><li>简历中加入与编程有关的社会化活动介绍<ul><li>1.你在Github、Gitee或者其他开源社区，如果有一个超过1000Star的开源项目，你的入职成功率会大大增加</li><li>2.你在知乎、CSDN、stackoverflow、V2Ex等问答社区中给其他程序的帮助和解答</li><li>3.个人技术博客的文章和视频内容，这些都会为你加分</li></ul></li></ul><h4 id="如何应对笔试或机试环节"><a href="#如何应对笔试或机试环节" class="headerlink" title="如何应对笔试或机试环节"></a>如何应对笔试或机试环节</h4><ul><li>拿出高考前15天的刷题状态</li><li>宝藏级刷题网站介绍<ul><li>牛客网<ul><li><a href="https://www.nowcoder.com/">https://www.nowcoder.com/</a></li></ul></li><li>Github上找面试资料<ul><li><a href="https://github.com/search?q=%E9%9D%A2%E8%AF%95%E9%A2%98&type=repositories">https://github.com/search?q=%E9%9D%A2%E8%AF%95%E9%A2%98&amp;type=repositories</a></li><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240827/%E9%9D%A2%E8%AF%95%E9%A2%98.41xzqmj2gf.webp" alt="面试题"></li></ul></li><li>LeetCode 力扣网<ul><li><a href="https://leetcode.cn/">https://leetcode.cn/</a></li></ul></li></ul></li></ul><h4 id="如何应对面试"><a href="#如何应对面试" class="headerlink" title="如何应对面试"></a>如何应对面试</h4><ul><li>面试中的自我介绍环节<ul><li>正确的自我介绍包含内容(这四个方面)<ul><li>我对当前的开发领域充满激情</li><li>我在团队中能够很好的有效沟通</li><li>我在编程的专业领域足够擅长</li><li>我会很快融入新的团队并为团队做出贡献</li></ul></li><li>正确的例子<ul><li>各位面试官好，我是技术胖，我做过15年的编程，目前主要开发Web前端领域，我对这个领域充满了激情，所以我在工作之余我还编写博客，目前有259.6W人在我的博客上学习过；我还把我的编程经验录制成视频放到B站，目前每年有超过500W的播放，我在团队开发中能准确有效的沟通，所以经常主持公司的代码评审会；我目前在Github上的开源前端UI库有超过2000的Star，所以在前端组件开发上足够专业，我相信我能很快的融入公司并上手新的开发项目</li></ul></li><li>反例<ul><li>我是技术胖，做过15年编程，上份工作时在北京XXX公司。我对JavaScript非常擅长</li></ul></li></ul></li><li>面试官提问常见的四板斧<ul><li>基础技术问答</li><li>项目经验介绍</li><li>遇坑爬坑讲述</li><li>高并发海量数据处理</li></ul></li></ul><h4 id="对企业文化-团队文化的了解-应聘前"><a href="#对企业文化-团队文化的了解-应聘前" class="headerlink" title="对企业文化&#x2F;团队文化的了解(应聘前)"></a>对企业文化&#x2F;团队文化的了解(应聘前)</h4><ul><li>加班文化是否可以接受<ul><li>如果应聘前，不能接受加班，就趁早pass那些公司</li></ul></li><li>团队开放性和封闭性<ul><li>比如：电脑是否可以联网？</li></ul></li><li>其他杂项：三餐、假期、培训、宿舍和班车等福利<ul><li>通过招聘，入职前要考虑的</li></ul></li><li>单身还要考虑公司男女比例问题</li></ul><h4 id="程序员如何体现技术深度"><a href="#程序员如何体现技术深度" class="headerlink" title="程序员如何体现技术深度"></a>程序员如何体现技术深度</h4><ul><li>阅读框架源码，增加对框架的理解深度</li><li>对底层技术的了解，包括一个请求的细节熟知</li><li>自己开源项目要以框架和库为主</li><li>技术深度的同时，坚固专业方面的业务深度<ul><li>比如：MES，ERP</li></ul></li></ul><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ul><li>不是准备应聘，而是在应聘中成长</li><li>一个人的诚实和人品，往往比技术高低更重要</li><li>把你当前工作内容，当做下一次的应聘准备<ul><li>不随波逐流，不虚度年华</li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>程序软技能</category>
      
    </categories>
    
    
    <tags>
      
      <tag>程序软技能</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P1-程序员在技术之外 还要掌握的一个技能</title>
    <link href="/2024/08/27/%E7%A8%8B%E5%BA%8F%E8%BD%AF%E6%8A%80%E8%83%BD/P1-%E7%A8%8B%E5%BA%8F%E5%91%98%E5%9C%A8%E6%8A%80%E6%9C%AF%E4%B9%8B%E5%A4%96%20%E8%BF%98%E8%A6%81%E6%8E%8C%E6%8F%A1%E7%9A%84%E4%B8%80%E4%B8%AA%E6%8A%80%E8%83%BD/"/>
    <url>/2024/08/27/%E7%A8%8B%E5%BA%8F%E8%BD%AF%E6%8A%80%E8%83%BD/P1-%E7%A8%8B%E5%BA%8F%E5%91%98%E5%9C%A8%E6%8A%80%E6%9C%AF%E4%B9%8B%E5%A4%96%20%E8%BF%98%E8%A6%81%E6%8E%8C%E6%8F%A1%E7%9A%84%E4%B8%80%E4%B8%AA%E6%8A%80%E8%83%BD/</url>
    
    <content type="html"><![CDATA[<h1 id="程序员在技术之外还要掌握的一个技能"><a href="#程序员在技术之外还要掌握的一个技能" class="headerlink" title="程序员在技术之外还要掌握的一个技能"></a>程序员在技术之外还要掌握的一个技能</h1><h2 id="除了编程技术之外的独门秘籍"><a href="#除了编程技术之外的独门秘籍" class="headerlink" title="除了编程技术之外的独门秘籍"></a>除了编程技术之外的独门秘籍</h2><p>在成长过程中，程序员除了技术能力之外，还需要掌握其他技能。以下是一些例子：</p><ul><li><strong>请教大佬的问题</strong>：你是如何成长的这样快速的？<ul><li>答案通常是<strong>除了编程技术之外的独门秘籍</strong>。</li><li>例如：文档写得特别好、口才出众、PPT制作能力强、喜欢编写开源程序并与他人共同进步。</li></ul></li></ul><h2 id="“自我营销”能力"><a href="#“自我营销”能力" class="headerlink" title="“自我营销”能力"></a>“自我营销”能力</h2><h3 id="举例子"><a href="#举例子" class="headerlink" title="举例子"></a>举例子</h3><ul><li>在公司中，小张和小王两名实习生的情况：<ul><li>小张编程技术稍高，但性格内向，不善于交际。</li><li>小王编程技术扎实，性格外向。</li><li>在转正会上，小王的表达能力更胜一筹，结果小王的定级比小张高。</li></ul></li></ul><h3 id="为什么会出现这样的情况？"><a href="#为什么会出现这样的情况？" class="headerlink" title="为什么会出现这样的情况？"></a>为什么会出现这样的情况？</h3><ul><li>主要原因是小王的“自我营销”能力比小张好。</li></ul><h3 id="“自我营销”能力的锻炼"><a href="#“自我营销”能力的锻炼" class="headerlink" title="“自我营销”能力的锻炼"></a>“自我营销”能力的锻炼</h3><ol><li><p><strong>读和技术无关的书</strong></p><ul><li>多读历史、经济、人文、自传等书籍，有助于跳出程序思维框架，增加交流信心。</li></ul></li><li><p><strong>多写开发文档</strong></p><ul><li>文档的质量是衡量程序员优秀程度的重要标准之一。</li><li>优秀的文档能够提升个人声誉，质量差的文档则可能损害声誉。</li></ul></li><li><p><strong>学会自我包装</strong></p><ul><li>了解美的和优秀的标准，如简历、文档和PPT的制作。</li><li>精心制作的工作成果能够给人留下深刻印象。</li></ul></li><li><p><strong>尝试多讲多说</strong></p><ul><li>敢说多说，让说的和想的一样。</li><li>在生活中刻意锻炼讲话能力，如录视频。</li></ul></li><li><p><strong>和更多的开发者建立联系</strong></p><ul><li>优秀的程序员善于与他人交流，分享经验和想法。</li><li>通过线下分享会、编写博客、建立微信群等方式与他人建立联系。</li></ul></li></ol><p>通过以上方法，程序员可以在技术之外，提升自己的“自我营销”能力，从而在职场上获得更多的机会和认可。</p>]]></content>
    
    
    <categories>
      
      <category>程序软技能</category>
      
    </categories>
    
    
    <tags>
      
      <tag>程序软技能</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P2-2 异步编程</title>
    <link href="/2024/08/27/Net%20Core2022%E6%95%99%E7%A8%8B/%E7%AC%AC2%E7%AB%A0%EF%BC%9A.NET%20Core%20%E9%87%8D%E9%9A%BE%E7%82%B9%E7%9F%A5%E8%AF%86/P2-2%20%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B/"/>
    <url>/2024/08/27/Net%20Core2022%E6%95%99%E7%A8%8B/%E7%AC%AC2%E7%AB%A0%EF%BC%9A.NET%20Core%20%E9%87%8D%E9%9A%BE%E7%82%B9%E7%9F%A5%E8%AF%86/P2-2%20%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="异步编程"><a href="#异步编程" class="headerlink" title="异步编程"></a>异步编程</h1><hr><h2 id="为什么要用异步编程？"><a href="#为什么要用异步编程？" class="headerlink" title="为什么要用异步编程？"></a>为什么要用异步编程？</h2><blockquote><p>场景：餐馆点餐<br>客人上桌后，服务员站在旁边等待客人点餐，点餐完成后给后厨。 这叫：“同步点餐”<br>客户上桌后，服务员把菜单和点菜单给客人留下，然后就招待别的客人去了。让客人自己翻看菜单和写点菜单，写完之后呼叫服务员，让服务员把菜单给后厨。 这叫“异步点餐”</p></blockquote><ul><li>优点<ul><li>让服务员可以同时服务更多的客人</li></ul></li><li>缺点<ul><li>单个客人点餐的时间变长</li></ul></li><li>例子：同步美化图片<ul><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240823/%E4%BE%8B%E5%AD%90.58hat5ypjb.webp" alt="例子"></li><li>异步编程不会让单个请求处理效率变高，甚至有可能略有降低。</li><li>异步编程不是提高了web服务器的运行效率，只是提高了web服务器能够同时处理的这个请求的数量而已</li></ul></li></ul><hr><h2 id="轻松上手async、await"><a href="#轻松上手async、await" class="headerlink" title="轻松上手async、await"></a>轻松上手async、await</h2><ul><li>传统多线程开发太麻烦<ul><li>C#关键字：async、await</li><li>async、await 并不等于“多线程”，只是减低了编写难度而已</li></ul></li></ul><h3 id="异步方法"><a href="#异步方法" class="headerlink" title="异步方法"></a>异步方法</h3><blockquote><p>“异步方法”：用async关键字修饰的方法</p></blockquote><ul><li>异步方法的返回值一般是Task<T>，T就是真正的返回值类型.<ul><li>比如：Task<int>  这个的返回值类型就是int</li><li>惯例：<strong>异步方法名字以Async结尾</strong>(程序员的个人修养，建议这个做规范一点)<ul><li>当然了，你不写Async结尾也可以，只是建议这样做，一般只要是Async结尾的，大部分都是异步方法</li></ul></li></ul></li><li>即使方法没有返回值，也最好把返回值声明为非泛型的Task。<ul><li>比如：static async Task Main(string[] args)</li><li>不要写成 static async void Main(string[] args)，要不然会出问题</li></ul></li><li>调用泛型方法时，一般在方法前加上await，这样拿到的返回值就是泛型指定的T类型；<ul><li>比如：string s &#x3D; await File.ReadAllTextAsync(fileName);</li></ul></li><li>异步方法的“传染性”：一个方法中如果有await调用，则这个方法也必须修饰为async<ul><li>只要方法里面有一条await调用，那就必须修饰为async</li></ul></li><li>特点<ul><li>不等待</li><li>等结果出来了，我在输出它<figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs c#"><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">async</span> Task <span class="hljs-title">Main</span>(<span class="hljs-params"><span class="hljs-built_in">string</span>[] args</span>)</span><br>&#123;<br>     <span class="hljs-built_in">string</span> fileName = <span class="hljs-string">&quot;d:/1.txt&quot;</span>;<br>     File.Delete(fileName);<br>     File.WriteAllTextAsync(fileName, <span class="hljs-string">&quot;hello async&quot;</span>);<br>     <span class="hljs-built_in">string</span> s = <span class="hljs-keyword">await</span> File.ReadAllTextAsync(fileName);<br>     Console.WriteLine(s);<br>&#125;<br></code></pre></td></tr></table></figure></li></ul></li></ul><h4 id="练习例子：await"><a href="#练习例子：await" class="headerlink" title="练习例子：await"></a>练习例子：await</h4><ul><li><p>1.问题：用了await，方法就必须用async去修饰，修饰完还是报错</p><ul><li>程序不包含适合于入口点的静态“Main”方法<ul><li>把Void修改为：Task</li></ul></li><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240823/%E4%B8%8D%E9%80%82%E5%90%88Main.5q7chxs5u3.webp" alt="不适合Main"></li><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240823/%E6%B2%A1%E9%97%AE%E9%A2%98.86tkwuz1qm.webp" alt="没问题"></li></ul></li><li><p>2.报错：System.IO.IOException:“The process cannot access the file ‘D:.NET Core Test\1.txt’ because it is being used by another process.”</p><ul><li>写入方法前面不加 await。代码是可以被编译成功并且运行的。</li><li>原因：WriteAllTextAsync方法默认是独占式写入。当这个方法还没写入完成，就没办法运行下一行代码</li><li>所以前面加上await即可，<strong>不等待这个方法写完，就运行下一个代码；写入完，就开始输出</strong></li></ul></li><li><p>3.注意：调用异步方法一般前面都加await</p></li></ul><hr><h2 id="如何编写异步方法？"><a href="#如何编写异步方法？" class="headerlink" title="如何编写异步方法？"></a>如何编写异步方法？</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">async</span> Task <span class="hljs-title">Main</span>(<span class="hljs-params"><span class="hljs-built_in">string</span>[] args</span>)</span><br>&#123;<br>    <span class="hljs-built_in">int</span> i = <span class="hljs-keyword">await</span> DownloadHtmlAsync(<span class="hljs-string">&quot;https://www.youzack.com&quot;</span>, <span class="hljs-string">@&quot;D:\.NET Core Test\1.txt&quot;</span>);<br>    Console.WriteLine(<span class="hljs-string">&quot;ok&quot;</span> + i);<br>&#125;<br><span class="hljs-comment">/* 不带返回值的</span><br><span class="hljs-comment">    * static async Task DownloadHtmlAsync(string url,String filename)</span><br><span class="hljs-comment">    &#123;</span><br><span class="hljs-comment">        //因为HttpClient里面实现了IDisposable这个接口，所以用using来进行资源的回收</span><br><span class="hljs-comment">        //HttpClientFactory  一般都是搭配这个使用</span><br><span class="hljs-comment">        using (HttpClient httpClient=new HttpClient())</span><br><span class="hljs-comment">        &#123;</span><br><span class="hljs-comment">        String html = await httpClient.GetStringAsync(url);</span><br><span class="hljs-comment">        await File.WriteAllTextAsync(filename, html);</span><br><span class="hljs-comment">        &#125;</span><br><span class="hljs-comment">    &#125;*/</span><br><br><span class="hljs-comment">//带返回值的</span><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">async</span> Task&lt;<span class="hljs-built_in">int</span>&gt; <span class="hljs-title">DownloadHtmlAsync</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> url, String filename</span>)</span><br>&#123;<br>    <span class="hljs-comment">//因为HttpClient里面实现了IDisposable这个接口，所以用using来进行资源的回收</span><br>    <span class="hljs-comment">//HttpClientFactory  一般都是搭配这个使用</span><br>    <span class="hljs-keyword">using</span> (HttpClient httpClient = <span class="hljs-keyword">new</span> HttpClient())<br>    &#123;<br>        String html = <span class="hljs-keyword">await</span> httpClient.GetStringAsync(url);<br>        <span class="hljs-keyword">await</span> File.WriteAllTextAsync(filename, html);<br>        <span class="hljs-keyword">return</span> html.Length;<span class="hljs-comment">//返回长度</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li><p>如果同样的功能，既有同步方法，又有异步方法，选择用哪个呢？</p><ul><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240823/%E9%80%89%E6%8B%A91.58hatdp83u.webp" alt="选择1"></li><li>这个情况<strong>首先使用异步方法</strong>，这样能提高系统并发量</li></ul></li><li><p>对于不支持的异步方法（或者逼不得已不能写async方法时）怎么办？</p><ul><li>Result（有返回值）<ul><li>string s&#x3D;  File.ReadAllTextAsync(@”D:.NET Core Test\1.txt”).Result;</li><li>这一句分解开来，就是下面两句。<ul><li>Task t &#x3D; File.ReadAllTextAsync(@”D:.NET Core Test\1.txt”);<br>string s &#x3D; t.Result;</li></ul></li></ul></li><li>Wait()（无返回值）<ul><li>File.WriteAllTextAsync(@”D:.NET Core Test\1.txt”,”aaaaaaaaa”).Wait();</li></ul></li></ul></li><li><p>注意点：<strong>尽量不要使用。因为他有死锁的风险。</strong></p><ul><li>如果你使用了，未来运行过程中卡了，及有可能是这边出了问题</li></ul></li></ul><h3 id="异步委托"><a href="#异步委托" class="headerlink" title="异步委托"></a>异步委托</h3><h2 id=""><a href="#" class="headerlink" title=""></a><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240823/lambda.8hgeq2solu.webp" alt="lambda"><br><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs C#">ThreadPool.QueueUserWorkItem(<span class="hljs-keyword">async</span>(obj) =&gt;<br>&#123;<br><br>    <span class="hljs-keyword">while</span> (<span class="hljs-literal">true</span>)<br>    &#123;<br>        <span class="hljs-keyword">await</span> File.WriteAllTextAsync(<span class="hljs-string">@&quot;D:\.NET Core Test\1.txt&quot;</span>, <span class="hljs-string">&quot;aaaaaaaaa&quot;</span>);<br>    &#125;<br>&#125;);<br>Console.Read();<br><br></code></pre></td></tr></table></figure></h2><h2 id="async、await原理揭秘"><a href="#async、await原理揭秘" class="headerlink" title="async、await原理揭秘"></a>async、await原理揭秘</h2><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">async</span> Task <span class="hljs-title">Main</span>(<span class="hljs-params"><span class="hljs-built_in">string</span>[] args</span>)</span><br>    &#123;<br>        <span class="hljs-keyword">using</span> (HttpClient httpClient = <span class="hljs-keyword">new</span> HttpClient())<br>        &#123;<br>            <span class="hljs-built_in">string</span> html = <span class="hljs-keyword">await</span> httpClient.GetStringAsync(<span class="hljs-string">&quot;https://www.baidu.com&quot;</span>);<br>            Console.WriteLine(html);<br>        &#125;<br>        <span class="hljs-built_in">string</span> txt = <span class="hljs-string">&quot;hello cool&quot;</span>;<br>        <span class="hljs-built_in">string</span> filename = <span class="hljs-string">@&quot;D:\.NET Core Test\1.txt&quot;</span>;<br>        <span class="hljs-keyword">await</span> File.WriteAllTextAsync(filename, txt);<br>        Console.WriteLine(<span class="hljs-string">&quot;写入成功&quot;</span>);<br>        <span class="hljs-built_in">string</span> s = <span class="hljs-keyword">await</span> File.ReadAllTextAsync(filename);<br>        Console.WriteLine(<span class="hljs-string">&quot;文件内容&quot;</span>+s);<br>    &#125;<br></code></pre></td></tr></table></figure><ul><li>1.用ILSpy反编译dll(.exe只是windows下的启动器)，切换成C# 4.0版本，就能看到容易理解的底层IL代码。<ul><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240823/%E5%8F%8D%E7%BC%96%E8%AF%91.7w6r3t4pd1.webp" alt="反编译"></li></ul></li><li>2.用dnSpy反编译<ul><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240823/dnSpy1.77dhjsr93z.webp" alt="dnSpy1"></li><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240823/dnSpy2.syvo79ckg.webp" alt="dnSpy2"></li><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240823/dnSpy3.86tkwyu09t.webp" alt="dnSpy3"></li></ul></li><li>await、async是“语法糖”，最终编译成“状态机调用”<ul><li>语法糖：背后很苦，表面很甜</li></ul></li></ul><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ul><li>async的方法会被C#编译器编译成一个类，并根据await调用把方法切分为多个状态，对async方法的调用就会被拆分为若干次对MoveNext的调用。</li><li>用await看似是“等待”，经过编译后，其实没有“wait”<ul><li>只不过是把菜单给你让你自己点餐，然后先去接待其他客人，等你点好了，帮你把菜单给后厨而已</li></ul></li></ul><hr><h2 id="async背后的线程切换"><a href="#async背后的线程切换" class="headerlink" title="async背后的线程切换"></a>async背后的线程切换</h2><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><ul><li>问题1：为什么编译器要把一个async方法拆分为多个状态然后分为多次调用？</li><li>问题2：“异步的可以避免线程等待耗时操作” 但是使用await还是要等待。反正都是等待，有什么区别呢？ <ul><li>在对异步方法进行await调用的等待期间，.NET会把当前的线程返回给线程池，等异步方法调用执行完毕后，框架会从线程池再取出来一个线程，执行后续的代码。</li><li>我们把这种由不同线程执行不同代码段的行为称为“线程切换”</li></ul></li></ul><h3 id="线程切换的演示"><a href="#线程切换的演示" class="headerlink" title="线程切换的演示"></a>线程切换的演示</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-function"><span class="hljs-keyword">static</span>  <span class="hljs-keyword">async</span> Task <span class="hljs-title">Main</span>(<span class="hljs-params"><span class="hljs-built_in">string</span>[] args</span>)</span><br>&#123;<br>    Console.WriteLine(<span class="hljs-string">&quot;线程1：&quot;</span>+Thread.CurrentThread.ManagedThreadId);<span class="hljs-comment">//获取线程ID</span><br>    <span class="hljs-comment">/* StringBuilder txt = new StringBuilder();</span><br><span class="hljs-comment">      for (int i = 0; i &lt; 100000; i++)</span><br><span class="hljs-comment">      &#123;</span><br><span class="hljs-comment">          txt.Append(&quot;aaaaaa&quot;);</span><br><span class="hljs-comment">      &#125;*/</span><br>    <span class="hljs-built_in">string</span> str = <span class="hljs-keyword">new</span> <span class="hljs-built_in">string</span>(<span class="hljs-string">&#x27;a&#x27;</span>, <span class="hljs-number">1000000</span>);<br>    <span class="hljs-keyword">await</span> File.WriteAllTextAsync(<span class="hljs-string">&quot;D:/.NET Core Test/1.txt&quot;</span>, str);<br>    Console.WriteLine(<span class="hljs-string">&quot;线程2：&quot;</span> + Thread.CurrentThread.ManagedThreadId);<span class="hljs-comment">//获取线程ID</span><br>    <span class="hljs-keyword">await</span> File.WriteAllTextAsync(<span class="hljs-string">&quot;D:/.NET Core Test/2.txt&quot;</span>, str);<br>    Console.WriteLine(<span class="hljs-string">&quot;线程3：&quot;</span> + Thread.CurrentThread.ManagedThreadId);<span class="hljs-comment">//获取线程ID</span><br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240826/%E5%88%87%E6%8D%A2%E7%BA%BF%E7%A8%8B1.esg17fr6b.webp" alt="切换线程1"></p><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240826/%E7%BA%BF%E7%A8%8B%E5%88%87%E6%8D%A22.7ax3le9bdh.webp" alt="线程切换2"></p><ul><li>用餐馆点餐的例子阐述一下线程切换的过程<ul><li>1.服务员给客人安排好位置(放了菜单)后，就被放回了“空闲服务员池”</li><li>2.等客人完成看菜单和点菜的操作后，喊“服务员，菜点好了”后，餐馆会从空闲服务员池中取一个空闲的服务员出来完成帮客人把点菜单交给后厨的操作。</li></ul></li><li>图2，10次都是同一个线程，当到了10000次时，线程就不一样了。(硬件的不同，对比也不同)<ul><li>注意细节:如果写入内容少，会发现线程ID不变</li><li>优化：到要等待的时候，如果发现已经执行结束了，那就没必要再切换线程了，剩下的代码就继续在之前的线程上继续执行了。</li><li>用餐馆点餐来举例子</li><li>1.服务员给客人安排好位置后，刚准备回头到“空闲服务员池”的时候，客人已经点好了菜，喊了“服务员，菜点好了”，这个时候服务员还没走出几步呢，所以直接同一个服务员去服务不就可以了吗~ 所以线程是同一个</li></ul></li></ul><hr><h2 id="异步方法不等于多线程"><a href="#异步方法不等于多线程" class="headerlink" title="异步方法不等于多线程"></a>异步方法不等于多线程</h2><h3 id="误解：很多开发人员觉得异步方法中的代码一定是在新线程中执行的。觉得异步方法等于多线程"><a href="#误解：很多开发人员觉得异步方法中的代码一定是在新线程中执行的。觉得异步方法等于多线程" class="headerlink" title="误解：很多开发人员觉得异步方法中的代码一定是在新线程中执行的。觉得异步方法等于多线程"></a>误解：很多开发人员觉得异步方法中的代码一定是在新线程中执行的。觉得异步方法等于多线程</h3><ul><li>结论：异步方法中的代码并不会自动在新线程中执行，<strong>除非把代码放到新线程中执行</strong></li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">async</span> Task <span class="hljs-title">Main</span>(<span class="hljs-params"><span class="hljs-built_in">string</span>[] args</span>)</span><br>&#123;<br>    Console.WriteLine(<span class="hljs-string">&quot;1-Main: &quot;</span>+ Thread.CurrentThread.ManagedThreadId);<br>    Console.WriteLine(<span class="hljs-keyword">await</span> CalcAsync(<span class="hljs-number">1000</span>));<br>    Console.WriteLine(<span class="hljs-string">&quot;2-Main: &quot;</span> + Thread.CurrentThread.ManagedThreadId);<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">async</span> Task&lt;<span class="hljs-built_in">double</span>&gt; <span class="hljs-title">CalcAsync</span>(<span class="hljs-params"><span class="hljs-built_in">int</span> n</span>)</span><br>&#123;<br>    <span class="hljs-comment">/*Console.WriteLine(&quot;CalcAsync: &quot; + Thread.CurrentThread.ManagedThreadId);</span><br><span class="hljs-comment">    double result = 0;</span><br><span class="hljs-comment">    Random rand = new Random();</span><br><span class="hljs-comment">    for (var i = 0; i &lt; n*n; i++)</span><br><span class="hljs-comment">    &#123;</span><br><span class="hljs-comment">        result = result + (double)rand.NextDouble();</span><br><span class="hljs-comment">    &#125;</span><br><span class="hljs-comment">    return result;*/</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">await</span> Task.Run(() =&gt; <span class="hljs-comment">//Task.Run 新线程</span><br>    &#123;<br>        Console.WriteLine(<span class="hljs-string">&quot;CalcAsync: &quot;</span> + Thread.CurrentThread.ManagedThreadId);<br>        <span class="hljs-built_in">double</span> result = <span class="hljs-number">0</span>;<br>        Random rand = <span class="hljs-keyword">new</span> Random();<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; n * n; i++)<br>        &#123;<br>            result = result + (<span class="hljs-built_in">double</span>)rand.NextDouble();<br>        &#125;<br>        <span class="hljs-keyword">return</span> result;<br>    &#125;);<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>1.没有用Task.Run的时候,都是同一个线程，不论次数。<br><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240826/%E5%90%8C%E7%BA%BF%E7%A8%8B.6pnfz5afx3.webp" alt="同线程"></li><li>2.调用Task.Run方法后，代码就可以在新线程中执行了。所以可以证明结论时正确的。<ul><li>Task.Run就是对 Task.Factory.StartNew 方法的封装而已。</li><li>Task.Factory.StartNew 方法提供的参数更多，可以对执行的线程做更精细化的控制。<br><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240826/%E4%B8%8D%E5%90%8C%E7%BA%BF%E7%A8%8B.13lpla953q.webp" alt="不同线程"></li></ul></li></ul><hr><h2 id="为什么有的异步方法没有async"><a href="#为什么有的异步方法没有async" class="headerlink" title="为什么有的异步方法没有async"></a>为什么有的异步方法没有async</h2><h3 id="看-NET-的File-ReadAllTextAsync-代码"><a href="#看-NET-的File-ReadAllTextAsync-代码" class="headerlink" title="看.NET 的File.ReadAllTextAsync()代码"></a>看.NET 的File.ReadAllTextAsync()代码</h3><ul><li>方法名字上面没有 async 去修饰，方法里面也没有await<br><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240826/File.ReadAllTextAsync().54xozrfdt2.webp" alt="File"></li></ul><h3 id="async方法缺点"><a href="#async方法缺点" class="headerlink" title="async方法缺点"></a>async方法缺点</h3><ul><li>1、异步方法会被编译成对应的类，这不仅会加大程序集的尺寸，而且程序的运行效率没有普通方法高<ul><li>普通异步方法还需要先接收Task<string>，然后用await取出来，在装到Task<string>里面。这就是“拆开了再组装上”。</li></ul></li><li>2、可能会占用非常多的线程</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">async</span> Task <span class="hljs-title">Main</span>(<span class="hljs-params"><span class="hljs-built_in">string</span>[] args</span>)</span><br>&#123;<br>    <span class="hljs-built_in">string</span> s = <span class="hljs-keyword">await</span> ReadFileAsync(<span class="hljs-number">2</span>);<br>    Console.WriteLine(s);<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">async</span> Task&lt;<span class="hljs-built_in">string</span>&gt; <span class="hljs-title">ReadFileAsync</span>(<span class="hljs-params"><span class="hljs-built_in">int</span> num</span>)<span class="hljs-comment">//普通异步方法</span></span><br>&#123;<br>    <span class="hljs-keyword">if</span> (num==<span class="hljs-number">1</span>)<br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">await</span> File.ReadAllTextAsync(<span class="hljs-string">@&quot;D:\.NET Core Test\1.txt&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(num==<span class="hljs-number">2</span>)<br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">await</span> File.ReadAllTextAsync(<span class="hljs-string">@&quot;D:\.NET Core Test\2.txt&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> ArgumentException(<span class="hljs-string">&quot;num invalid&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><hr><h4 id="未用async修饰的方法"><a href="#未用async修饰的方法" class="headerlink" title="未用async修饰的方法"></a>未用async修饰的方法</h4><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">async</span> Task <span class="hljs-title">Main</span>(<span class="hljs-params"><span class="hljs-built_in">string</span>[] args</span>)</span><br>        &#123;<br>            <span class="hljs-built_in">string</span> s = <span class="hljs-keyword">await</span> ReadFileAsync(<span class="hljs-number">2</span>);<br>            Console.WriteLine(s);<br>        &#125;<br>        <span class="hljs-function"><span class="hljs-keyword">static</span>  Task&lt;<span class="hljs-built_in">string</span>&gt; <span class="hljs-title">ReadFileAsync</span>(<span class="hljs-params"><span class="hljs-built_in">int</span> num</span>)<span class="hljs-comment">//未用async修饰的异步方法</span></span><br>        &#123;<br>            <span class="hljs-keyword">if</span> (num == <span class="hljs-number">1</span>)<br>            &#123;<br>                <span class="hljs-keyword">return</span>  File.ReadAllTextAsync(<span class="hljs-string">@&quot;D:\.NET Core Test\1.txt&quot;</span>);<span class="hljs-comment">//返回值就是Task&lt;string&gt;类型，所以直接return</span><br>            &#125;<br>            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (num == <span class="hljs-number">2</span>)<br>            &#123;<br>                <span class="hljs-keyword">return</span>  File.ReadAllTextAsync(<span class="hljs-string">@&quot;D:\.NET Core Test\2.txt&quot;</span>);<br>            &#125;<br>            <span class="hljs-keyword">else</span><br>            &#123;<br>                <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> ArgumentException(<span class="hljs-string">&quot;num invalid&quot;</span>);<br>            &#125;<br>        &#125;<br></code></pre></td></tr></table></figure><ul><li><p>只甩手Task的数据，不“拆完了再装”。</p><ul><li>变成了普通的方法调用</li></ul></li><li><p>优点：运行效率更高，不会造成线程浪费</p></li><li><p>返回值为Task的不一定都要标注async，标注async只是让我们更方便的await而已。</p></li></ul><h3 id="什么样的方法是可以直接不写async呢"><a href="#什么样的方法是可以直接不写async呢" class="headerlink" title="什么样的方法是可以直接不写async呢"></a>什么样的方法是可以直接不写async呢</h3><ul><li>如果一个异步方法只是对别的异步方法调用的转发，并没有太多复杂的逻辑(比如等待A的结果，在调用B；把A调用的返回值拿到内部做一些处理再返回)，那么就可以去掉async关键字。</li><li>如果需要把获取异步方法的返回值后再进一步的处理，比如后面+字符串cool，或者其他逻辑时，最好的选择就是用async和await。<br><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240826/%E4%BE%8B%E5%AD%90.8hgeuauagj.webp" alt="例子"></li></ul><hr><h2 id="异步编程的几个重要问题"><a href="#异步编程的几个重要问题" class="headerlink" title="异步编程的几个重要问题"></a>异步编程的几个重要问题</h2><h3 id="异步暂停"><a href="#异步暂停" class="headerlink" title="异步暂停"></a>异步暂停</h3><ul><li>异步暂停的方法<ul><li>如果想在异步方法中暂停一段时间，不要用Thread.Sleep(),因为它会阻塞调用线程</li><li>换成 await Task.Delay() 即可。</li></ul></li><li>在控制台中看不到这两个方法的区别，但是放在WinForm程序中就难呢过看到区别了。<ul><li>ASP.NET Core中也看不到区别，但是Sleep()会降低并发</li><li>用点餐举例子<ul><li>Sleep()的时候，是服务员都卡着动不了 </li><li>Delay()的时候，是客户卡着不动，休息了</li></ul></li></ul></li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240826/%E6%9A%82%E5%81%9C.51e328tnj1.webp" alt="暂停"></p><p>作业</p><ul><li>封装一个异步方法，下载给定的网址，如果下载失败，则稍等500ms在重试，如果重试三次仍然失败，则抛异常“下载失败”</li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">async</span> Task <span class="hljs-title">Main</span>(<span class="hljs-params"><span class="hljs-built_in">string</span>[] args</span>)</span><br>&#123;<br><br>    <span class="hljs-built_in">string</span> url = <span class="hljs-string">&quot;https://www.baiu.com/&quot;</span>; <span class="hljs-comment">// 这里替换成你想要下载的URL</span><br>    <span class="hljs-keyword">try</span><br>    &#123;<br>        <span class="hljs-keyword">var</span> content =  <span class="hljs-keyword">await</span> DownloadAsync(url);<br>        Console.WriteLine(<span class="hljs-string">&quot;下载成功:&quot;</span>);<br>        Console.WriteLine(content);<br>    &#125;<br>    <span class="hljs-keyword">catch</span> (Exception ex)<br>    &#123;<br>        Console.WriteLine(<span class="hljs-string">$&quot;下载失败: <span class="hljs-subst">&#123;ex.Message&#125;</span>&quot;</span>);<br>    &#125;<br><br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">async</span> Task&lt;<span class="hljs-built_in">string</span>&gt; <span class="hljs-title">DownloadAsync</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> url</span>)</span><br>&#123;<br>    <span class="hljs-keyword">using</span>(HttpClient httpClient =<span class="hljs-keyword">new</span> HttpClient())<br>    &#123;<br>        <span class="hljs-built_in">int</span> retryCount = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">while</span>(retryCount&lt;<span class="hljs-number">4</span>)<span class="hljs-comment">//3次重试</span><br>        &#123;<br>            <span class="hljs-keyword">try</span><br>            &#123;<br>                <span class="hljs-built_in">string</span> s = <span class="hljs-keyword">await</span> httpClient.GetStringAsync(url);<span class="hljs-comment">//获取网址信息</span><br>                <span class="hljs-keyword">return</span> s;<br>            &#125;<br>            <span class="hljs-keyword">catch</span> (HttpRequestException)<span class="hljs-comment">//抓取异常</span><br>            &#123;<br>                retryCount++;<br>                <span class="hljs-keyword">if</span> (retryCount &gt;= <span class="hljs-number">4</span>)<br>                &#123;<br>                    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> Exception(<span class="hljs-string">&quot;下载失败&quot;</span>);<br>                &#125;<br><br>                Console.WriteLine(<span class="hljs-string">$&quot;尝试下载失败，‌正在重试...(<span class="hljs-subst">&#123;retryCount&#125;</span>/3)&quot;</span>);<br>                <span class="hljs-keyword">await</span> Task.Delay(<span class="hljs-number">500</span>); <span class="hljs-comment">// 等待500ms</span><br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> Exception(<span class="hljs-string">&quot;下载失败&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><hr><h3 id="提前终止执行"><a href="#提前终止执行" class="headerlink" title="提前终止执行"></a>提前终止执行</h3><ul><li><p>有时需要提前终止任务，比如：请求超时、用户取消请求</p><ul><li>很多异步方法都有CancellationToken参数，用于获得提前终止执行的信号</li></ul></li><li><p>CancellationToken结构体</p><ul><li>None：空</li><li>bool isCancellationRequested 是否取消</li><li>(*)Register(Action callback)  注册取消监听  这个了解即可~不常用</li><li>ThrowifCancellationRequested() 如果任务被取消，执行到这句话就抛异常</li><li>CancellationTokenSource</li><li>CancelAfter()超时后发出取消信号</li><li>Cancel() 发出取消信号</li><li>CancellationToken Token</li></ul></li><li><p>建议用第一种写法</p></li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">async</span> Task <span class="hljs-title">DownloadAsync</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> url,<span class="hljs-built_in">int</span> n,CancellationToken cancellationToken</span>)<span class="hljs-comment">//第一种写法</span></span><br>&#123;<br>    <span class="hljs-keyword">using</span> (HttpClient httpClient = <span class="hljs-keyword">new</span> HttpClient())<br>    &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++)<br>        &#123;<br>            <span class="hljs-built_in">string</span> html = <span class="hljs-keyword">await</span> httpClient.GetStringAsync(url);<br>            Console.WriteLine(<span class="hljs-string">$&quot;<span class="hljs-subst">&#123;DateTime.Now&#125;</span>:<span class="hljs-subst">&#123;html&#125;</span>&quot;</span>);<br>            <span class="hljs-keyword">if</span> (cancellationToken.IsCancellationRequested)<span class="hljs-comment">//自己可以控制以及如何来处理这个请求的细节</span><br>            &#123;<br>                Console.WriteLine(<span class="hljs-string">&quot;请求被取消&quot;</span>);<br>                <span class="hljs-keyword">break</span>;<br>            &#125;<br><br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240827/%E8%AF%B7%E6%B1%82%E5%BC%82%E5%B8%B81.7zqd6v79ne.webp" alt="请求异常1"></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">async</span> Task <span class="hljs-title">Download2Async</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> url, <span class="hljs-built_in">int</span> n, CancellationToken cancellationToken</span>)<span class="hljs-comment">//第二种写法</span></span><br>&#123;<br>    <span class="hljs-keyword">using</span> (HttpClient httpClient = <span class="hljs-keyword">new</span> HttpClient())<br>    &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++)<br>        &#123;<br>            <span class="hljs-built_in">string</span> html = <span class="hljs-keyword">await</span> httpClient.GetStringAsync(url);<span class="hljs-comment">//请求一分钟到了后返回，然后在处理它</span><br>            Console.WriteLine(<span class="hljs-string">$&quot;<span class="hljs-subst">&#123;DateTime.Now&#125;</span>:<span class="hljs-subst">&#123;html&#125;</span>&quot;</span>);<br>            <span class="hljs-comment">/*if (cancellationToken.IsCancellationRequested)</span><br><span class="hljs-comment">            &#123;</span><br><span class="hljs-comment">                Console.WriteLine(&quot;请求被取消&quot;);</span><br><span class="hljs-comment">                break;</span><br><span class="hljs-comment">            &#125;*/</span><br>            cancellationToken.ThrowIfCancellationRequested();<span class="hljs-comment">//发现请求取消了，就把异常抛出去</span><br><br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240827/%E8%AF%B7%E6%B1%82%E5%BC%82%E5%B8%B82.73tvrexl7f.webp" alt="请求异常2"></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">async</span> Task <span class="hljs-title">Download3Async</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> url, <span class="hljs-built_in">int</span> n, CancellationToken cancellationToken</span>)<span class="hljs-comment">//第三种写法</span></span><br>&#123;<br>    <span class="hljs-keyword">using</span> (HttpClient httpClient = <span class="hljs-keyword">new</span> HttpClient())<br>    &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++)<br>        &#123;<br>            <span class="hljs-comment">//GetAsync的实现，微软内置的。有可能请求还没到1分钟，就被请求取消5s自动处理了.这个可以在后续在手动处理</span><br>            <span class="hljs-comment">//缺点：不能自己控制cancellationToken响应的处理</span><br>            <span class="hljs-keyword">var</span> resp = <span class="hljs-keyword">await</span> httpClient.GetAsync(url, cancellationToken);<br>            <br>            <span class="hljs-built_in">string</span> html = <span class="hljs-keyword">await</span> resp.Content.ReadAsStringAsync();<br>            Console.WriteLine(<span class="hljs-string">$&quot;<span class="hljs-subst">&#123;DateTime.Now&#125;</span>:<span class="hljs-subst">&#123;html&#125;</span>&quot;</span>);<br><br><br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240827/%E8%AF%B7%E6%B1%82%E5%BC%82%E5%B8%B83.5xakit8om4.webp" alt="请求异常3"></p><ul><li><p>例子<br>为“下载一个网址N次”的方法增加取消功能。<br>分别用GetStringAsync + IsCancellationRequested、 GetStringAsync + ThrowIfCancellationRequested()、带CancellationToken的GetAsync()分别实现。取消分别用超时、用户敲按键（不能await）实现。</p></li><li><p>ASP.NET Core开发中，一般不需要自己处理CancellationToken、CancellationTokenSource这些，只要做到“<strong>能转发CancellationToken就转发</strong>”即可。</p><ul><li>ASP.NET Core会对于用户请求中断进行处理</li><li>(*)演示一下ASP.NET Core中的使用：写一个方法，Delay1000次，用Debug.WriteLine()输出，访问中间跳到放到其他网站。(等有ASP.NET Core的基础了再看)</li></ul></li></ul><h3 id="WhenAll"><a href="#WhenAll" class="headerlink" title="WhenAll"></a>WhenAll</h3><ul><li>Task类的重要方法<ul><li>1、Task<Task> WhenAny(IEnumerable<Task> tasks)等，任何一个Task完成，Task就完成<ul><li>这个用的比较少</li></ul></li><li>2、Task&lt;TResult[]&gt; WhenAll<TResult>(params Task<TResult>[] tasks)等，所有Task完成，Task才完成。用于等待多个任务执行结束，但是不在乎它们的执行顺序。<ul><li>一般都用用这个</li></ul></li><li>3、FromResult() 创建普通数值的Task对象。</li></ul></li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">async</span> Task <span class="hljs-title">Main</span>(<span class="hljs-params"><span class="hljs-built_in">string</span>[] args</span>)</span><br>&#123;<br>    Task&lt;<span class="hljs-built_in">string</span>&gt; t1 = File.ReadAllTextAsync(<span class="hljs-string">@&quot;D:\.NET Core Test\1.txt&quot;</span>);<span class="hljs-comment">//读取文件</span><br>    Task&lt;<span class="hljs-built_in">string</span>&gt; t2 = File.ReadAllTextAsync(<span class="hljs-string">@&quot;D:\.NET Core Test\2.txt&quot;</span>);<br>    Task&lt;<span class="hljs-built_in">string</span>&gt; t3 = File.ReadAllTextAsync(<span class="hljs-string">@&quot;D:\.NET Core Test\3.txt&quot;</span>);<br>    <span class="hljs-built_in">string</span>[] results = <span class="hljs-keyword">await</span> Task.WhenAll(t1, t2, t3);<span class="hljs-comment">//然后await去取，等都读取完成后，再返回值</span><br>    <span class="hljs-built_in">string</span> s1 = results[<span class="hljs-number">0</span>];<br>    <span class="hljs-built_in">string</span> s2 = results[<span class="hljs-number">1</span>];<br>    <span class="hljs-built_in">string</span> s3 = results[<span class="hljs-number">2</span>];<br>    Console.WriteLine(s1+s2+s3);<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="案例：计算一个文件夹下，所有文本文件的单词个数汇总"><a href="#案例：计算一个文件夹下，所有文本文件的单词个数汇总" class="headerlink" title="案例：计算一个文件夹下，所有文本文件的单词个数汇总"></a>案例：计算一个文件夹下，所有文本文件的单词个数汇总</h4><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">async</span> Task <span class="hljs-title">Main</span>(<span class="hljs-params"><span class="hljs-built_in">string</span>[] args</span>)</span><br>&#123;<br>  <br>    <span class="hljs-built_in">string</span>[] files = Directory.GetFiles(<span class="hljs-string">@&quot;D:\.NET Core Test&quot;</span>);<br>    Task&lt;<span class="hljs-built_in">int</span>&gt;[] countTasks = <span class="hljs-keyword">new</span> Task&lt;<span class="hljs-built_in">int</span>&gt;[files.Length];<br>    <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; files.Length; i++)<br>    &#123;<br>        <span class="hljs-built_in">string</span> filename = files[i];<br>        Task&lt;<span class="hljs-built_in">int</span>&gt; t = ReadCharsCount(filename);<br>        countTasks[i] = t;<br>    &#125;<br>    <span class="hljs-built_in">int</span>[] counts = <span class="hljs-keyword">await</span> Task.WhenAll(countTasks);<br>    <span class="hljs-built_in">int</span> c = counts.Sum();<span class="hljs-comment">//计算数组的和</span><br>    Console.WriteLine(c);<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">async</span> Task&lt;<span class="hljs-built_in">int</span>&gt; <span class="hljs-title">ReadCharsCount</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> filename</span>)</span><br>&#123;<br>    <span class="hljs-built_in">string</span> s = <span class="hljs-keyword">await</span> File.ReadAllTextAsync(filename);<br>    <span class="hljs-keyword">return</span> s.Length;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="接口中的异步方法"><a href="#接口中的异步方法" class="headerlink" title="接口中的异步方法"></a>接口中的异步方法</h3><ul><li><p>由于async用于提示编译器为异步方法中的await代码进行分段处理，而且一个异步方法是否用async修饰对于方法的调用者来讲没区别的，因此对于接口中的方法或者抽象方法不能修饰为async</p></li><li><p>接口中不能加async，但是正文中可以<br><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240827/%E5%85%B6%E4%BB%961.60u6gnisb6.webp" alt="其他1"></p></li><li><p>异步与yield</p><ul><li>复习：yield return不仅能够简化数据的返回，而且可以让数据处理“流水线化”，提升性能。</li></ul></li></ul><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Main</span>(<span class="hljs-params"><span class="hljs-built_in">string</span>[] args</span>)</span><br>&#123;<br>    <span class="hljs-keyword">foreach</span>(<span class="hljs-function"><span class="hljs-keyword">var</span> s <span class="hljs-keyword">in</span> <span class="hljs-title">Test</span>())</span><br>    &#123;<br>        Console.WriteLine(s);<br>    &#125;<br>    <br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">static</span> IEnumerable&lt;<span class="hljs-built_in">string</span>&gt; <span class="hljs-title">Test</span>()</span><br>&#123;<br>    List&lt;<span class="hljs-built_in">string</span>&gt; list = <span class="hljs-keyword">new</span> List&lt;<span class="hljs-built_in">string</span>&gt;();<br>    list.Add(<span class="hljs-string">&quot;hello&quot;</span>);<br>    list.Add(<span class="hljs-string">&quot;cool&quot;</span>);<br>    list.Add(<span class="hljs-string">&quot;youzack&quot;</span>);<br>    <span class="hljs-keyword">return</span> list;<span class="hljs-comment">//这是上述代码都执行完成后再一起返回。</span><br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">static</span> IEnumerable&lt;<span class="hljs-built_in">string</span>&gt; <span class="hljs-title">Test1</span>()</span><br>&#123;<br>    <span class="hljs-keyword">yield</span> <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;hello&quot;</span>;<span class="hljs-comment">//这种是执行完后，就返回.这样的执行效率就会更高</span><br>    <span class="hljs-keyword">yield</span> <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;cool&quot;</span>;<br>    <span class="hljs-keyword">yield</span> <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;youzack&quot;</span>;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li><p>在旧版C#中，async方法中不能用yield。</p></li><li><p>从C# 8.0 开始，把返回值声明为IAsyncEnumerable(不要带Task)，然后遍历的时候用await foreach()即可。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs C#"><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">async</span> Task <span class="hljs-title">Main</span>(<span class="hljs-params"><span class="hljs-built_in">string</span>[] args</span>)</span><br>&#123;<br>    <span class="hljs-keyword">await</span> <span class="hljs-keyword">foreach</span>(<span class="hljs-function"><span class="hljs-keyword">var</span> s <span class="hljs-keyword">in</span> <span class="hljs-title">Test2</span>())<span class="hljs-comment">//循环前面加上await</span></span><br>    &#123;<br>        Console.WriteLine(s);<br>    &#125;<br>    <br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">async</span> IAsyncEnumerable&lt;<span class="hljs-built_in">string</span>&gt; <span class="hljs-title">Test2</span>()</span><br>&#123;<br>    <span class="hljs-keyword">yield</span> <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;hello&quot;</span>;<br>    <span class="hljs-keyword">yield</span> <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;yzk&quot;</span>;<br>    <span class="hljs-keyword">yield</span> <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;youzack&quot;</span>;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>ASP.NET Core和控制台项目中没有SynchronizationContext，因此不用管ConfigureAwait(false)等。</p></li><li><p>注意：不要同步、异步方法混用。</p></li></ul>]]></content>
    
    
    <categories>
      
      <category>.NET Core</category>
      
      <category>第2章：.NET Core 重难点知识</category>
      
    </categories>
    
    
    <tags>
      
      <tag>.NET Core2022-学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>精读阅读理解精通核心必备词汇-8</title>
    <link href="/2024/08/24/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD/%E7%B2%BE%E8%AF%BB%E9%98%85%E8%AF%BB%E7%90%86%E8%A7%A3%E7%B2%BE%E9%80%9A%E6%A0%B8%E5%BF%83%E5%BF%85%E5%A4%87%E8%AF%8D%E6%B1%87-8/"/>
    <url>/2024/08/24/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD/%E7%B2%BE%E8%AF%BB%E9%98%85%E8%AF%BB%E7%90%86%E8%A7%A3%E7%B2%BE%E9%80%9A%E6%A0%B8%E5%BF%83%E5%BF%85%E5%A4%87%E8%AF%8D%E6%B1%87-8/</url>
    
    <content type="html"><![CDATA[<h1 id="精读阅读理解精通核心必备词汇-8"><a href="#精读阅读理解精通核心必备词汇-8" class="headerlink" title="精读阅读理解精通核心必备词汇-8"></a>精读阅读理解精通核心必备词汇-8</h1><hr><p>串词是手段，理解句子是核心</p><ul><li>理解句子的时候，你可以知道有些单词很重要，有些单词没那么重要。<ul><li>名词和动词是句子的核心：n 和 v</li><li>形容词，因为它是修饰名词的，所以不那么重要；表示程度的副词也是这样<ul><li>形容词只需要先记住是形容好的方面还是坏的方面即可</li></ul></li><li>副词和形容词都是起修饰作用的</li></ul></li></ul><hr><p> 原文(1)：</p><blockquote><p>Maggie Walker was born in 1867 in Richmond,Virginia. Her mother was once aslave in arich woman’s house.</p></blockquote><ul><li>参考译文：麦琪·沃克1976年出生于弗吉尼亚州里士满。她母亲曾经是一个富婆家里的奴隶。</li></ul><hr><p> 原文(2)：</p><blockquote><p>When Maggie was very young, a thief killed her father.</p></blockquote><ul><li>参考译文：麦琪很小的时候，一个小偷杀死了她的父亲。</li></ul><hr><p> 原文(3)：</p><blockquote><p>Her family was impoverished,so Maggie’s mother started doing laundry in her home.</p></blockquote><ul><li>参考译文：她的家庭很贫困，所以麦琪的母亲开始在家里洗衣服。</li></ul><hr><p> 原文(4)：</p><blockquote><p>Maggie had to help her. She washed clothes every day, but she continued to go to school.She was a very good student，especially in math.</p></blockquote><ul><li>参考译文：麦琪不得不帮助她。她每天都洗衣服，但仍继续上学。她是一个很好的学生，尤其是在数学方面。</li></ul><hr><p> 原文(5)：</p><blockquote><p>After Maggie graduated from high school, she got a job as a teacher.In 1886，she married Armistead Walker.</p></blockquote><ul><li>参考译文：麦琪高中毕业后，找到了一份教师的工作。1886年，她嫁给了阿米斯特德·沃克。</li></ul><hr><p> 原文(6)：</p><blockquote><p>They had two sons and Maggie stayed home to care for them.</p></blockquote><ul><li>参考译文:他们有两个儿子，麦琪留在家里照顾他们。</li></ul><hr><p> 原文(7)：</p><blockquote><p>She also volunteered to help a social organization called the Order of St. Luke.</p></blockquote><ul><li>参考译文:她还志愿帮助一个名为圣卢克教团的社会组织。</li></ul><hr><p> 原文(8)：</p><blockquote><p>This organization helped African Americans take care of the sick and bury the dead.</p></blockquote><ul><li>参考译文:这个组织帮助非裔美国人照顾病人和埋葬死者。</li></ul><hr><p> 原文(9)：</p><blockquote><p>Maggie Walker loved the work of the organization. The organization believed that African Americans should take care of each other.</p></blockquote><ul><li>参考译文:麦琪·沃克热爱这个组织的工作。该组织认为非裔美国人应该互相照顾。</li></ul><hr><p> 原文(10)：</p><blockquote><p>Over the years，Maggie Walker had more and more responsibilities with the organization.</p></blockquote><ul><li>参考译文:多年来，麦琪·沃克在这个组织中承担了越来越多的责任</li></ul><hr><p> 原文(11)：</p><blockquote><p>In 1895,she suggested that St. Luke begin a program for young people.</p></blockquote><ul><li>参考译文:1895年，她建议圣卢克为年轻人开设一个项目。</li></ul><hr><p> 原文(12)：</p><blockquote><p>This program became very popular with schoolchildren.</p></blockquote><ul><li>参考译文:这个项目在学生中很受欢迎。</li></ul><hr><p> 原文(13)：</p><blockquote><p>In 1899，Walk became Grand Secretary Treasurer of the St.Luke organization.</p></blockquote><ul><li>参考译文：1899年，沃克成为圣卢克组织的总秘书。</li></ul><hr><p> 原文(14)：</p><blockquote><p>However,because she was a woman,she received less than half the salary of the man who had the job before her.</p></blockquote><ul><li>参考译文:然而，因为她是女性，她得到的薪水还不到前任的一半。</li></ul><hr><p> 原文(15)：</p><blockquote><p>The Order of St. Luke had a lot of financial difficulties when Walker took over.</p></blockquote><ul><li>参考译文:沃克接手圣卢克教团时，财政困难重重。</li></ul><hr><p> 原文(16)：</p><blockquote><p>It had a lot of unpaid bills and only $3l.6l in the bank.But soon Maggie Walker changed all of that. Her idea was to get new members to join the Organization.</p></blockquote><ul><li>参考译文:它有很多未付的账单,而银行里只有31.61美元。但很快,麦琪·沃克改变了这一切。她的想法是让新成员加入这个组织。</li></ul><hr><p> 原文(17)：</p><blockquote><p>In just a few years,it grew from 3,400 members to 50,000 members.</p></blockquote><ul><li>参考译文:短短几年，会员从3400人增加到50000人。</li></ul><hr><p> 原文(18)：</p><blockquote><p>The organization bought a $100,000 office building and increased its staff to 55.</p></blockquote><ul><li>参考译文:该组织购买了一栋价值10万美元的办公楼，并将员工人数增加到了55人。</li></ul><hr><p> 原文(19)：</p><blockquote><p>Now Walker was ready for her next big step.</p></blockquote><ul><li>参考译文:现在，沃克已经准备好迈出下一大步了。</li></ul><h2 id="在都串完词后去进行-阅读理解的做题"><a href="#在都串完词后去进行-阅读理解的做题" class="headerlink" title="在都串完词后去进行 阅读理解的做题"></a>在都串完词后去进行 阅读理解的做题</h2>]]></content>
    
    
    <categories>
      
      <category>学位英语</category>
      
      <category>精读阅读理解精通核心必备词汇</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学位英语</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>精读阅读理解精通核心必备词汇-7</title>
    <link href="/2024/08/24/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD/%E7%B2%BE%E8%AF%BB%E9%98%85%E8%AF%BB%E7%90%86%E8%A7%A3%E7%B2%BE%E9%80%9A%E6%A0%B8%E5%BF%83%E5%BF%85%E5%A4%87%E8%AF%8D%E6%B1%87-7/"/>
    <url>/2024/08/24/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD/%E7%B2%BE%E8%AF%BB%E9%98%85%E8%AF%BB%E7%90%86%E8%A7%A3%E7%B2%BE%E9%80%9A%E6%A0%B8%E5%BF%83%E5%BF%85%E5%A4%87%E8%AF%8D%E6%B1%87-7/</url>
    
    <content type="html"><![CDATA[<h1 id="精读阅读理解精通核心必备词汇-7"><a href="#精读阅读理解精通核心必备词汇-7" class="headerlink" title="精读阅读理解精通核心必备词汇-7"></a>精读阅读理解精通核心必备词汇-7</h1><hr><p>串词是手段，理解句子是核心</p><ul><li>理解句子的时候，你可以知道有些单词很重要，有些单词没那么重要。<ul><li>名词和动词是句子的核心：n 和 v</li><li>形容词，因为它是修饰名词的，所以不那么重要；表示程度的副词也是这样<ul><li>形容词只需要先记住是形容好的方面还是坏的方面即可</li></ul></li><li>副词和形容词都是起修饰作用的</li></ul></li></ul><hr><p> 原文(1)：</p><blockquote><p>Babies who are breast-fed may be more likely to be successful in life, a new study published Tuesday suggests.</p></blockquote><ul><li>参考译文：周二发表的一项新研究表明，母乳喂养的婴儿可能更容易获得成功。</li></ul><hr><p> 原文(2)：</p><blockquote><p>The study followed more than 3,000 babies into adulthood in Brazil.</p></blockquote><ul><li>参考译文：这项研究跟踪调查了巴西3000多名婴儿。</li></ul><hr><p> 原文(3)：</p><blockquote><p>The researchers found those who were breast-fed scored slightly higher in intelligence tests in their 30s, stayed in schooll onger and earned more money than those who were given formula(配方奶粉).</p></blockquote><ul><li>参考译文：研究人员发现那些母乳喂养的比那些食用配方奶粉的人在30多岁的智力测试得分略高，呆在学校的时间更长，赚的钱更多。</li></ul><hr><p> 原文(4)：</p><blockquote><p>Breast-feeding not only has short-term benefits, but also “breast-feeding has long-term benefits,” says Bernardo Lessa Horta of the Federal University of Pelotas in Brazil,who led the study being published in The Lancet Global Health.</p></blockquote><ul><li>参考译文：巴西佩洛塔斯联邦大学的贝尔纳多·莱萨·奥尔塔说:“母乳喂养不仅有短期的好处，而且也有长期的好处”，他主持了这项发表在《柳叶刀全球健康》上的研究</li></ul><hr><p> 原文(5)：</p><blockquote><p>Doctors have long known that breast-feeding can be good for a baby’s health. his is especially true in poor countries, where water can be contaminated. For instance, a baby given formula in developing countries is 14 times more likely to die in the first six months than one who’s breast-fed.</p></blockquote><ul><li>参考译文：医生早就知道母乳喂养对婴儿的健康有好处。贫穷国家尤其如此，因为那里的水可能受到污染。例如，婴儿配方奶粉喂养的婴儿在六个月内死亡的可能性是母乳喂养的婴儿的14倍。</li></ul><hr><p> 原文(6)：</p><blockquote><p>In the U.S.,some research has suggested that breast-feeding may raise a baby’s IQ(智商)by a few points.</p></blockquote><ul><li>参考译文:在美国，一些研究已经表明，母乳喂养可能提高婴儿的智商的几个百分点。</li></ul><hr><p> 原文(7)：</p><blockquote><p>But a recent study with siblings(兄弟姐妹)found little advantage to breast-feeding.</p></blockquote><ul><li>参考译文:但最近一项对兄弟姐妹的研究发现，母乳喂养没有什么好处。</li></ul><hr><p> 原文(8)：</p><blockquote><p>Horta says these previous studies didn’t follow children into adulthood to see if breast-feeding had long-term effects.</p></blockquote><ul><li>参考译文:奥尔塔说，先前的研究并没有跟踪儿童至成年期，以观察母乳喂养是否有长期影响。</li></ul><hr><p> 原文(9)：</p><blockquote><p>So Horta analyzed data collected from 3,493 volunteers he and his colleagues have been following since birth.</p></blockquote><ul><li>参考译文:因此，奥尔塔分析了从3493名志愿者那里收集的数据，这些志愿者是他的同事们从出生起就一直在跟踪的</li></ul><hr><p> 原文(10)：</p><blockquote><p>They are now in their 30s.</p></blockquote><ul><li>参考译文:他们现在30多岁了。</li></ul><hr><p> 原文(11)：</p><blockquote><p>First, the researchers gave the subjects IQ tests.</p></blockquote><ul><li>参考译文:首先，研究人员对受试者进行了智商测试。</li></ul><hr><p> 原文(12)：</p><blockquote><p>Those who were breast-fed for 12 months or more had IQ test scores that were 3.76 points higher than those who were breast-fed for less than one month,the team found.</p></blockquote><ul><li>参考译文:研究小组发现，母乳喂养12个月以上的婴儿智商比母乳喂养不足一个月的婴儿高3.76分。</li></ul><hr><p> 原文(13)：</p><blockquote><p>When Horta and his colleagues looked at how much education the subjects had gotten and how much money they were making, they also found a clear difference:</p></blockquote><ul><li>参考译文：当奥尔塔和他的同事们研究这些受试者接受了多少教育，赚了多少钱时，他们也发现了一个明显的区别:</li></ul><hr><p> 原文(14)：</p><blockquote><p>Those who were breast-fed the longest stayed in school for about an extra year and had monthly salaries that were about a third higher.</p></blockquote><ul><li>参考译文:那些母乳喂养时间最长的孩子在学校多呆了一年左右，他们的月工资也高出三分之一左右。</li></ul><h2 id="在都串完词后去进行-阅读理解的做题"><a href="#在都串完词后去进行-阅读理解的做题" class="headerlink" title="在都串完词后去进行 阅读理解的做题"></a>在都串完词后去进行 阅读理解的做题</h2>]]></content>
    
    
    <categories>
      
      <category>学位英语</category>
      
      <category>精读阅读理解精通核心必备词汇</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学位英语</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>精读阅读理解精通核心必备词汇-6</title>
    <link href="/2024/08/24/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD/%E7%B2%BE%E8%AF%BB%E9%98%85%E8%AF%BB%E7%90%86%E8%A7%A3%E7%B2%BE%E9%80%9A%E6%A0%B8%E5%BF%83%E5%BF%85%E5%A4%87%E8%AF%8D%E6%B1%87-6/"/>
    <url>/2024/08/24/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD/%E7%B2%BE%E8%AF%BB%E9%98%85%E8%AF%BB%E7%90%86%E8%A7%A3%E7%B2%BE%E9%80%9A%E6%A0%B8%E5%BF%83%E5%BF%85%E5%A4%87%E8%AF%8D%E6%B1%87-6/</url>
    
    <content type="html"><![CDATA[<h1 id="精读阅读理解精通核心必备词汇-6"><a href="#精读阅读理解精通核心必备词汇-6" class="headerlink" title="精读阅读理解精通核心必备词汇-6"></a>精读阅读理解精通核心必备词汇-6</h1><hr><p>串词是手段，理解句子是核心</p><ul><li>理解句子的时候，你可以知道有些单词很重要，有些单词没那么重要。<ul><li>名词和动词是句子的核心：n 和 v</li><li>形容词，因为它是修饰名词的，所以不那么重要；表示程度的副词也是这样<ul><li>形容词只需要先记住是形容好的方面还是坏的方面即可</li></ul></li><li>副词和形容词都是起修饰作用的</li></ul></li></ul><hr><p> 原文(1)：</p><blockquote><p>Computer technology is advancing so fast that old hardware quickly becomes completely obsolete.</p></blockquote><ul><li>参考译文：计算机技术发展如此之快，旧的硬件很快就会完全过时。</li></ul><hr><p> 原文(2)：</p><blockquote><p>The electronic waster(e-waste)from this constantly growing field is polluting the environment,both here and abroad.</p></blockquote><ul><li>参考译文：来自这个不断增长的领域的电子垃圾正污染着国内外的环境。</li></ul><hr><p> 原文(3)：</p><blockquote><p>Computers contain toxic(有毒的)materials such as lead.</p></blockquote><ul><li>参考译文：计算机含有有毒物质(如铅)</li></ul><hr><p> 原文(4)：</p><blockquote><p>Despite the danger of throwing these hazardous materials in a landfill(垃圾填埋场)，that’s exactly where tons of computers end up.</p></blockquote><ul><li>参考译文：尽管把这些有害物质扔进垃圾填埋场有危险，但那正是成吨计算机的最终落脚点。</li></ul><hr><p> 原文(5)：</p><blockquote><p>Americans reuse or recycle only about 10 percent of the 50 million computers they replace each year,according to ABC News.</p></blockquote><ul><li>参考译文：据美国广播公司(ABC)新闻报道，美国人每年更换5000万台电脑，其中大约只有10%被再利用或回收。</li></ul><hr><p> 原文(6)：</p><blockquote><p>Eighty percent is being stockpiled(囤积), which could create even bigger problems in the future, and the remaining 10 percent is landfilled.</p></blockquote><ul><li>参考译文:百分之八十的垃圾被囤积，这可能在未来造成更大的问题，剩下的百分之十被填埋。</li></ul><hr><p> 原文(7)：</p><blockquote><p>Throwing e-waste in landfills creates a potential for toxic waste leak into our soil and groundwater.</p></blockquote><ul><li>参考译文:把电子垃圾扔进垃圾填埋场可能会导致有毒废物渗入我们的土壤和地下水。</li></ul><hr><p> 原文(8)：</p><blockquote><p>Because standards for landfills are tougher in the United States than in many other countries,e-waste is often exported,especially to some developing countries.</p></blockquote><ul><li>参考译文:由于美国垃圾填埋场的环境标准比许多其他国家都要严格，电子垃圾经常被出口，尤其是出口到一些发展中国家。</li></ul><hr><p> 原文(9)：</p><blockquote><p>Some countries are creating policies to deal with the growing e-waste problem.</p></blockquote><ul><li>参考译文:一些国家正在制定政策来处理日益严重的电子垃圾问题。</li></ul><hr><p> 原文(10)：</p><blockquote><p>In the Netherlands, you can bring your old computer to the  seller when buying a new one,and the seller must by law accept it  free ofcharge.</p></blockquote><ul><li>参考译文:在荷兰，你买新电脑时可以把旧电脑带给卖家，卖家必须依法免费接受。</li></ul><hr><p> 原文(11)：</p><blockquote><p>Japan passed a law in 2001 requiring producers to recycle certain parts.</p></blockquote><ul><li>参考译文:日本在2001年通过了一项法律，要求生产商回收某些零部件。</li></ul><hr><p> 原文(12)：</p><blockquote><p>In the united states,a movement called the Computer TakeBack Campaign is demanding that producers take more responsibility for disposing of(处理)old computers.</p></blockquote><ul><li>参考译文:在美国，一项名为“电脑回收运动”的运动要求生产商承担更多的责任处理旧电脑。</li></ul><hr><p> 原文(13)：</p><blockquote><p>California and Massachusetts recently prohibited certain computer parts in landfills,while Apple and IBM take back computers for about a $30 fee.</p></blockquote><ul><li>参考译文：加州和马萨诸塞州最近禁收垃圾填埋场中的某些电脑部件，而苹果和IBM则以大约30美元的费用收回电脑。</li></ul><hr><p> 原文(14)：</p><blockquote><p>Gateway is one step ahead: They will pay you $50 for recycling your old computer when you buy a new one from them.</p></blockquote><ul><li>参考译文:美格特威领先了一步:当你从它们那里买一台新电脑时其会付给你50美元来回收你的旧电脑。</li></ul><hr><p> 原文(15)：</p><blockquote><p>Lastly, many nonprofit programs accept used equipment,and services have popped up that distribute old computers to schools and other organizations.</p></blockquote><ul><li>参考译文:最后，许多非营利性项目接收二手设备，于是出现了向学校和其他组织分发旧电脑的服务。</li></ul><h2 id="在都串完词后去进行-阅读理解的做题"><a href="#在都串完词后去进行-阅读理解的做题" class="headerlink" title="在都串完词后去进行 阅读理解的做题"></a>在都串完词后去进行 阅读理解的做题</h2>]]></content>
    
    
    <categories>
      
      <category>学位英语</category>
      
      <category>精读阅读理解精通核心必备词汇</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学位英语</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>精读阅读理解精通核心必备词汇-5</title>
    <link href="/2024/08/24/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD/%E7%B2%BE%E8%AF%BB%E9%98%85%E8%AF%BB%E7%90%86%E8%A7%A3%E7%B2%BE%E9%80%9A%E6%A0%B8%E5%BF%83%E5%BF%85%E5%A4%87%E8%AF%8D%E6%B1%87-5/"/>
    <url>/2024/08/24/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD/%E7%B2%BE%E8%AF%BB%E9%98%85%E8%AF%BB%E7%90%86%E8%A7%A3%E7%B2%BE%E9%80%9A%E6%A0%B8%E5%BF%83%E5%BF%85%E5%A4%87%E8%AF%8D%E6%B1%87-5/</url>
    
    <content type="html"><![CDATA[<h1 id="精读阅读理解精通核心必备词汇-5"><a href="#精读阅读理解精通核心必备词汇-5" class="headerlink" title="精读阅读理解精通核心必备词汇-5"></a>精读阅读理解精通核心必备词汇-5</h1><hr><p>串词是手段，理解句子是核心</p><ul><li>理解句子的时候，你可以知道有些单词很重要，有些单词没那么重要。<ul><li>名词和动词是句子的核心：n 和 v</li><li>形容词，因为它是修饰名词的，所以不那么重要；表示程度的副词也是这样<ul><li>形容词只需要先记住是形容好的方面还是坏的方面即可</li></ul></li><li>副词和形容词都是起修饰作用的</li></ul></li></ul><hr><p> 原文(1)：</p><blockquote><p>Charles Dickens was born in 1812 in Portsmouth,England.</p></blockquote><ul><li>参考译文：查尔斯·狄更斯1812年出生于英国朴茨茅斯。</li></ul><hr><p> 原文(2)：</p><blockquote><p>He was the second of eight children. His father always had problems with money.</p></blockquote><ul><li>参考译文：他在八个孩子中排行老二。他父亲在钱这方面总是出问题</li></ul><hr><p> 原文(3)：</p><blockquote><p>When Charles was 12 years old, his father went to prison because he was in debt.</p></blockquote><ul><li>参考译文：查尔斯12岁的时候，他父亲因为欠债而进了监狱。</li></ul><hr><p> 原文(4)：</p><blockquote><p>Charles had to leave school to help his family. He got a jobin a dirty, old factory.</p></blockquote><ul><li>参考译文：查尔斯不得不离开学校去帮助他的家人。他在一家又脏又旧的工厂找到了一份工资</li></ul><hr><p> 原文(5)：</p><blockquote><p>Charles Dickens never forgot his difficult childhood</p></blockquote><ul><li>参考译文：查尔斯·狄更斯从未忘记他艰难的童年。</li></ul><hr><p> 原文(6)：</p><blockquote><p>Many of his stories and books were about poor people and their problems.</p></blockquote><ul><li>参考译文:他的许多故事和著作都是关于穷人及穷人问题的。</li></ul><hr><p> 原文(7)：</p><blockquote><p>Later,Charles went back to school for two more years.</p></blockquote><ul><li>参考译文:后来，查尔斯又回到学校学习了两年。</li></ul><hr><p> 原文(8)：</p><blockquote><p>He left school when he was 15 years old to become a newspaper reporter.</p></blockquote><ul><li>参考译文:他15岁时离开学校，成为一名报社记者。</li></ul><hr><p> 原文(9)：</p><blockquote><p>In 1836,he began to write The Pickwick Papers. It was published as a series and was a huge success.</p></blockquote><ul><li>参考译文:1836年，他开始写《匹克威克外传》。它作为一个系列出版，取得了巨大的成功。</li></ul><hr><p> 原文(10)：</p><blockquote><p>By age 24,Dickens was a prominent writer in both GreatBritain and the United States.</p></blockquote><ul><li>参考译文:24岁时,狄更斯在英国和美国都是一位享有盛名的作家。</li></ul><hr><p> 原文(11)：</p><blockquote><p>Many people bought his books, but they also paid to hear him read his stories aloud.</p></blockquote><ul><li>参考译文:许多人买了他的书，但他们也花钱听他朗读他的故事。</li></ul><hr><p> 原文(12)：</p><blockquote><p>Because there was no radio or television,people liked to hear famous writers read in public.</p></blockquote><ul><li>参考译文:因为没有广播或电视，人们喜欢听著名作家在公共场合朗读。</li></ul><hr><p> 原文(13)：</p><blockquote><p>Dickens read his works like he was acting in a play,</p></blockquote><ul><li>参考译文：狄更斯读他的作品就像在演戏一样。</li></ul><hr><p> 原文(14)：</p><blockquote><p>He went on very successful reading tours and earned a lot of money.</p></blockquote><ul><li>参考译文:他进行了非常成功的阅读之旅，赚了很多钱。</li></ul><hr><p> 原文(15)：</p><blockquote><p>Dickens was meticulous(过分注意琐事的).Everything had to be just right.</p></blockquote><ul><li>参考译文:狄更斯一丝不苟。一切都必须恰到好处</li></ul><hr><p> 原文(16)：</p><blockquote><p>When he worked at home, everything had to be in its place.</p></blockquote><ul><li>参考译文:当他在家里工作时，一切都必须井然有序</li></ul><hr><p> 原文(17)：</p><blockquote><p>He worked at a desk by a window that always had a vase(花瓶)of flowers and same ornaments(装饰物)on it.</p></blockquote><ul><li>参考译文:他在一张靠窗的桌子旁工作，桌子上总是放着一个插着鲜花的花瓶和同样的装饰物。</li></ul><hr><p> 原文(18)：</p><blockquote><p>He wrote 2,000 words a day and he required complete quiet while he wrote.</p></blockquote><ul><li>参考译文:他每天写2000字，写作时要求完全安静</li></ul><hr><p> 原文(19)：</p><blockquote><p>He divided his page into three parts,and on each side he had notes in difficult colors.</p></blockquote><ul><li>参考译文:他把书页分成三部分,每一面都有用不同颜色写的笔记。</li></ul><hr><p> 原文(20)：</p><blockquote><p>The main writing was in middle, the story notes were in the right margin, and the chapter notes were in the left margin.</p></blockquote><ul><li>参考译文:主要的文章在中间，故事笔记在右边的空白处，章节笔记在左边的空白处。</li></ul><hr><p> 原文(21)：</p><blockquote><p>He also cared a lot about his appearance.</p></blockquote><ul><li>参考译文:他也很在意自己的外表。</li></ul><h2 id="在都串完词后去进行-阅读理解的做题"><a href="#在都串完词后去进行-阅读理解的做题" class="headerlink" title="在都串完词后去进行 阅读理解的做题"></a>在都串完词后去进行 阅读理解的做题</h2>]]></content>
    
    
    <categories>
      
      <category>学位英语</category>
      
      <category>精读阅读理解精通核心必备词汇</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学位英语</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>精读阅读理解精通核心必备词汇-4</title>
    <link href="/2024/08/24/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD/%E7%B2%BE%E8%AF%BB%E9%98%85%E8%AF%BB%E7%90%86%E8%A7%A3%E7%B2%BE%E9%80%9A%E6%A0%B8%E5%BF%83%E5%BF%85%E5%A4%87%E8%AF%8D%E6%B1%87-4/"/>
    <url>/2024/08/24/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD/%E7%B2%BE%E8%AF%BB%E9%98%85%E8%AF%BB%E7%90%86%E8%A7%A3%E7%B2%BE%E9%80%9A%E6%A0%B8%E5%BF%83%E5%BF%85%E5%A4%87%E8%AF%8D%E6%B1%87-4/</url>
    
    <content type="html"><![CDATA[<h1 id="精读阅读理解精通核心必备词汇-4"><a href="#精读阅读理解精通核心必备词汇-4" class="headerlink" title="精读阅读理解精通核心必备词汇-4"></a>精读阅读理解精通核心必备词汇-4</h1><hr><p>串词是手段，理解句子是核心</p><ul><li>理解句子的时候，你可以知道有些单词很重要，有些单词没那么重要。<ul><li>名词和动词是句子的核心：n 和 v</li><li>形容词，因为它是修饰名词的，所以不那么重要；表示程度的副词也是这样<ul><li>形容词只需要先记住是形容好的方面还是坏的方面即可</li></ul></li><li>副词和形容词都是起修饰作用的</li></ul></li></ul><hr><p> 原文(1)：</p><blockquote><p>Jarden Zinc(锌)Products,a large zinc plant a few miles outside Greeneville,Tennessee,has a special claim.</p></blockquote><ul><li>参考译文：贾登锌制品公司是田纳西州格林维尔市郊几英里外的一家大型锌厂，有着特殊的诉求。</li></ul><hr><p> 原文(2)：</p><blockquote><p>Since 1982,it has been the only supplier of penny blanksfor the U.S. Mint(铸币厂)</p></blockquote><ul><li>参考译文：自1982年以来，它一直是美国造币厂唯一的硬币坯料供应商</li></ul><hr><p> 原文(3)：</p><blockquote><p>It’s a good business for Jarden-since 2000,the company has earned more than $800 million.</p></blockquote><ul><li>参考译文：自2000年以来，这对贾来说是一笔不错的生意，公司已经赚了8亿多美元。</li></ul><hr><p> 原文(4)：</p><blockquote><p>But it may not be a good deal for the U.S.</p></blockquote><ul><li>参考译文：但对美国来说，这可能不是一个好交易。</li></ul><hr><p> 原文(5)：</p><blockquote><p>The value of the penny has been dropping for years.</p></blockquote><ul><li>参考译文：硬币的价值多年来一直在下降。</li></ul><hr><p> 原文(6)：</p><blockquote><p>In 2006，it began to cost more than a penny to make a penny.</p></blockquote><ul><li>参考译文:2006年，铸造1美分要花费超过1美分。</li></ul><hr><p> 原文(7)：</p><blockquote><p>It now costs 2 C to produce a l C coin.</p></blockquote><ul><li>参考译文:现在生产一枚1美分的硬币需要2美分。</li></ul><hr><p> 原文(8)：</p><blockquote><p>Many countries have stopped using pennies. Is it time for the U.S. to do the same?</p></blockquote><ul><li>参考译文:许多国家已经停止使用硬币。美国也该这么做吗?</li></ul><hr><p> 原文(9)：</p><blockquote><p>Jarden and the zinc industry are fighting to keep the penny.Since 2006,Jarden has given $l.2 million to Americans for Common Cents (ACC).</p></blockquote><ul><li>参考译文:贾登和锌工业正努力保住这笔钱。自2006年以来，贾登已经给“普通美分支持者”团体(ACC)资助了120万美元。</li></ul><hr><p> 原文(10)：</p><blockquote><p>The group’s mission is to keep the penny in use. Mark Weller is ACC’s executive director.</p></blockquote><ul><li>参考译文:这个团体的任务就是保留1美分的使用。马克·韦勒是ACC的执行董事。</li></ul><hr><p> 原文(11)：</p><blockquote><p>He argues that there are three main reasons for keeping the penny:</p></blockquote><ul><li>参考译文:他认为，保留1美分硬币有三个主要原因:</li></ul><hr><p> 原文(12)：</p><blockquote><p>Without it, we would become more reliant on the five-cent coin,which also has problems; charities(慈善机构)that depend on penny drives would not be able to raise as much money; and a 2012 survey shows that 67% of Americans want to keep the penny.</p></blockquote><ul><li>参考译文:没有它，我们将更加依赖5美分硬币，而5美分硬币也有问题;依靠美分驱动的慈善机构将无法筹集资金;2012年的一项调查显示，67%的美国人希望保留1美分。</li></ul><hr><p> 原文(13)：</p><blockquote><p>Many people surveyed said they feared they would end up paying more for products.</p></blockquote><ul><li>参考译文：许多受访者表示，他们担心最终会为产品支付更高的价格</li></ul><hr><p> 原文(14)：</p><blockquote><p>Many experts disagree with ACC.They point to the dozens of countries that have gotten rid of their lowest-value coins without raising prices for consumers.</p></blockquote><ul><li>参考译文：许多专家不同意ACC的观点。他们指出，有几十个国家已经在不提高消费价格的情况下处理掉了它们的低价值硬币。</li></ul><hr><p> 原文(15)：</p><blockquote><p>And charities don’t seem too concerned either.</p></blockquote><ul><li>参考译文：慈善机构似乎也不太关心。</li></ul><hr><p> 原文(16)：</p><blockquote><p>President Barack Obama says the mint could explore using cheaper metals to make pennies. Steel is less expensive than zinc.</p></blockquote><ul><li>参考译文：美国总统贝拉克·奥巴马表示，铸币厂可以探索使用更便宜的金属制造硬币。钢比锌便宜。</li></ul><hr><p> 原文(17)：</p><blockquote><p>Pennies are 97.5% zinc and 2.5% copper. But no matter what it is made of, the penny’s days may be numbered.</p></blockquote><ul><li>参考译文：硬币由97.5%的锌和2.5%的铜组成。但不管它是什么做的，硬币的日子可能屈指可数了。</li></ul><hr><p> 原文(18)：</p><blockquote><p>Most in-store purchases are now made with credit cards,not cash. Is it time for a change?</p></blockquote><ul><li>参考译文：现在大多数的店内购物都是用信用卡，而不是现金。是时候改变了吗?</li></ul><h2 id="在都串完词后去进行-阅读理解的做题"><a href="#在都串完词后去进行-阅读理解的做题" class="headerlink" title="在都串完词后去进行 阅读理解的做题"></a>在都串完词后去进行 阅读理解的做题</h2>]]></content>
    
    
    <categories>
      
      <category>学位英语</category>
      
      <category>精读阅读理解精通核心必备词汇</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学位英语</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>精读阅读理解精通核心必备词汇-3</title>
    <link href="/2024/08/24/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD/%E7%B2%BE%E8%AF%BB%E9%98%85%E8%AF%BB%E7%90%86%E8%A7%A3%E7%B2%BE%E9%80%9A%E6%A0%B8%E5%BF%83%E5%BF%85%E5%A4%87%E8%AF%8D%E6%B1%87-3/"/>
    <url>/2024/08/24/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD/%E7%B2%BE%E8%AF%BB%E9%98%85%E8%AF%BB%E7%90%86%E8%A7%A3%E7%B2%BE%E9%80%9A%E6%A0%B8%E5%BF%83%E5%BF%85%E5%A4%87%E8%AF%8D%E6%B1%87-3/</url>
    
    <content type="html"><![CDATA[<h1 id="精读阅读理解精通核心必备词汇-3"><a href="#精读阅读理解精通核心必备词汇-3" class="headerlink" title="精读阅读理解精通核心必备词汇-3"></a>精读阅读理解精通核心必备词汇-3</h1><hr><p>串词是手段，理解句子是核心</p><ul><li>理解句子的时候，你可以知道有些单词很重要，有些单词没那么重要。<ul><li>名词和动词是句子的核心：n 和 v</li><li>形容词，因为它是修饰名词的，所以不那么重要；表示程度的副词也是这样<ul><li>形容词只需要先记住是形容好的方面还是坏的方面即可</li></ul></li><li>副词和形容词都是起修饰作用的</li></ul></li></ul><hr><p> 原文(1)：</p><blockquote><p>When the United States Congress created Yellowstone National Park in 1872,the goal was to set aside a place where Americans could enjoy the beauty of nature for years to come.</p></blockquote><ul><li>参考译文：当美国国会在1872年建立黄石国家公园时，它的目标是在未来的岁月里为美国人留出一个可以欣赏大自然美景的地方。</li></ul><hr><p> 原文(2)：</p><blockquote><p>Now,142 years later,there are hundreds of national parks across the country,and technology is changing the way people experience them.</p></blockquote><ul><li>参考译文：现在，142年过去了，全国有数百个国家公园，科技正在改变人们体验它们的方式。</li></ul><hr><p> 原文(3)：</p><blockquote><p>Should park visitors be able to use cell phones, or should their use be restricted?</p></blockquote><ul><li>参考译文：公园游客可以使用手机吗?还是应该限制他们使用手机?</li></ul><hr><p> 原文(4)：</p><blockquote><p>“Connectivity presents a real challenge to all of us.”Al<br>Nash says.</p></blockquote><ul><li>参考译文：网络连接对我们所有人来说都是一个真正的挑战。阿尔·纳什说。</li></ul><hr><p> 原文(5)：</p><blockquote><p>He is a public affairs officer at Yellowstone National Park.</p></blockquote><ul><li>参考译文：他是黄石国家公园的公共事务官员。</li></ul><hr><p> 原文(6)：</p><blockquote><p>He says cell phone service at Yellowstone is available in parts of the park with stores and campgrounds.</p></blockquote><ul><li>参考译文:他说黄石公园部分地区的商店和露营地都提供手机服务。</li></ul><hr><p> 原文(7)：</p><blockquote><p>This makes it easy for visitors to share photos of their trip on social networking sites and to stay in touch with friends and family members</p></blockquote><ul><li>参考译文:这使得游客很容易在社交网站上分享他们旅行的照片，并与朋友和家人保持联系</li></ul><hr><p> 原文(8)：</p><blockquote><p>If a park visitor is hurt or in danger,cell phones make it easier to get help</p></blockquote><ul><li>参考译文:如果公园游客受伤或处于危险中，手机可以使他们更容易得到帮助。</li></ul><hr><p> 原文(9)：</p><blockquote><p>Some say the ability to download applications that provide information about plants and animals in the park can enrich a visitors experience.</p></blockquote><ul><li>参考译文:有人说，下载提供公园动植物信息的应用程序可以丰富游客的体验。</li></ul><hr><p> 原文(10)：</p><blockquote><p>Others say cell phones disturb people’s enjoyment of our national parks.</p></blockquote><ul><li>参考译文:另一些人说手机干扰了人们对国家公园的享受</li></ul><hr><p> 原文(11)：</p><blockquote><p>In their view, cell phone towers are an eyesore, and they’d rather hear the sound of birds than the ring of an incoming call.</p></blockquote><ul><li>参考译文:在他们看来，手机信号塔很碍眼，他们宁愿听到鸟鸣声，也不愿听到来电铃声。</li></ul><hr><p> 原文(12)：</p><blockquote><p>Can you imagine looking out a peaceful lake or field of grass only to be disturbed by a person shouting into their phone,“ Can you hear me now?”</p></blockquote><ul><li>参考译文:你能想象当你望向一片宁静的湖泊或草地时，突然有人对着手机大喊:“你现在能听到我说话吗?”</li></ul><hr><p> 原文(13)：</p><blockquote><p>Nash says Yellowstone tries to strike a balance.</p></blockquote><ul><li>参考译文：纳什说，黄石公园试图找到一种平衡。</li></ul><hr><p> 原文(14)：</p><blockquote><p>“Ultimately, our job is to let visitors understand and enjoy nature better while protecting what people find special about Yellowstone,and one of those things that’s special is the ability to get away from the hustle and bustle(喧嚣) of one’s daily life.”</p></blockquote><ul><li>参考译文：最终，我们的工作是让游客更好的了解和享受自然同时保护黄石国家公园,人们发现特别之处,特别的一件事是远离喧嚣一个人的日常生活。”</li></ul><h2 id="在都串完词后去进行-阅读理解的做题"><a href="#在都串完词后去进行-阅读理解的做题" class="headerlink" title="在都串完词后去进行 阅读理解的做题"></a>在都串完词后去进行 阅读理解的做题</h2>]]></content>
    
    
    <categories>
      
      <category>学位英语</category>
      
      <category>精读阅读理解精通核心必备词汇</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学位英语</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P2-1 NuGet</title>
    <link href="/2024/08/23/Net%20Core2022%E6%95%99%E7%A8%8B/%E7%AC%AC2%E7%AB%A0%EF%BC%9A.NET%20Core%20%E9%87%8D%E9%9A%BE%E7%82%B9%E7%9F%A5%E8%AF%86/P2-1%20NuGet/"/>
    <url>/2024/08/23/Net%20Core2022%E6%95%99%E7%A8%8B/%E7%AC%AC2%E7%AB%A0%EF%BC%9A.NET%20Core%20%E9%87%8D%E9%9A%BE%E7%82%B9%E7%9F%A5%E8%AF%86/P2-1%20NuGet/</url>
    
    <content type="html"><![CDATA[<h1 id="NuGet"><a href="#NuGet" class="headerlink" title="NuGet"></a>NuGet</h1><hr><h2 id="下载DLL的方式"><a href="#下载DLL的方式" class="headerlink" title="下载DLL的方式"></a>下载DLL的方式</h2><ul><li>以前传统的手工下载dll<ul><li>缺点：不好找;版本不匹配;依赖复杂</li><li>所以后面就出现了应用商店(360软件管家等)自动根据你的系统和配置下载合适的软件</li></ul></li><li>软件包<ul><li>之前都是自己引用dll或者第三方包去使用<ul><li>下载–&gt;安装–&gt;匹配</li><li>.NET Core用的是：NuGet</li><li>VS里面也有应用商城，但是功能不是非常的完善</li></ul></li><li>比如其他软件都有类似的操作<ul><li>Linux：apt、yum</li><li>Javascript：npm</li><li>Java：Maven、Gradle</li><li>Python：pip</li></ul></li></ul></li></ul><h2 id="NuGet的搜索"><a href="#NuGet的搜索" class="headerlink" title="NuGet的搜索"></a>NuGet的搜索</h2><p>官网：<a href="https://www.nuget.org/">https://www.nuget.org/</a></p><blockquote><p>这个网址大多数都是欧美地区人再用，所以都是英语</p></blockquote><ul><li>功能<ul><li>精确搜索(Zack.EFCore.Batch)<ul><li>知道自己需要用哪个包，可以直接使用精确搜索</li><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240822/%E7%B2%BE%E7%A1%AE%E6%90%9C%E7%B4%A2.6t71rk7yxt.webp" alt="精确搜索"></li></ul></li><li>模糊搜索<ul><li>建议使用英文去搜索，下面是例子<ul><li>subtitle parser—解析器</li><li>ftp—文件传输</li><li>hotkey—热键</li></ul></li><li>中文一般搜索不到</li></ul></li><li>详细页讲解<ul><li>Dependencies —查看支持什么程序<ul><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240822/%E6%9F%A5%E7%9C%8B%E6%94%AF%E6%8C%81%E7%A8%8B%E5%BA%8F.5tqyee57ry.webp" alt="查看支持程序"></li><li>如果是This package has no dependencies 没有依赖<ul><li>默认都是.NETFramework</li><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240822/%E6%97%A0%E4%BE%9D%E8%B5%96.pf9p45ajp.webp" alt="无依赖"></li></ul></li></ul></li><li>Used By—查看这个包被哪些库类引用<ul><li>如果被引用的多，就说明这个包非常的流行，经过很多人的验证</li><li>很多人用这个包，就说明这个包比较靠谱；如果没人用，相对来讲可能就不靠谱一点</li><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240822/%E8%A2%AB%E5%BC%95%E7%94%A8.1ovd2a81p9.webp" alt="被引用"></li></ul></li><li>Versions—更新的频次越多，更新的时间越近，说明这个项目非常的活跃，一直在更新，有了新的bug，新的功能，这个作者一直在往里面加<ul><li>那么这个项目就属于一个比较靠谱的项目</li><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240822/%E7%89%88%E6%9C%AC%E8%BF%AD%E4%BB%A3.7zqd05wviv.webp" alt="版本迭代"></li></ul></li><li>downloads—下载量<ul><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240822/%E4%B8%8B%E8%BD%BD%E9%87%8F.2dommavkpy.webp" alt="下载量"></li></ul></li><li>Project website —官网<ul><li>有的是直接指向了GitHub上面</li></ul></li><li>MIT license—协议</li><li>Package Manager(一般都使用这个)<ul><li>安装命令</li></ul></li></ul></li><li>因为NuGet上面的包不都是微软提供的<ul><li>有少数是微软提供的，但大部分的包都是像杨中科老师这样的第三方开发者或者说有一些公司来提供的</li><li>这只是微软构建的一个第三方开发包的一个应用商城而已，里面的软件包的质量有好有坏，参差不齐.</li><li>有的只发布了一个版本，放上去就没人在管了，里边一大堆bug；也有一些比较优秀的人做的项目一直在更新。所以说你要自己去甄别</li></ul></li></ul></li></ul><h3 id="挑选包的原则"><a href="#挑选包的原则" class="headerlink" title="挑选包的原则"></a>挑选包的原则</h3><ul><li><p>1、先查看这个包支不支持你的.NET的版本</p></li><li><p>2、被别人类库引用的多不多</p></li><li><p>3、下载量大不大</p></li><li><p>4、更新的频次是不是频繁</p></li><li><p>5、官网看看是否收费</p></li><li><p>包的介绍</p><ul><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240822/%E5%8C%85%E7%9A%84%E4%BB%8B%E7%BB%8D.1zi6vfn9ui.webp" alt="包的介绍"></li></ul></li><li><p>有一些项目下载少，引用少，不代表说他一定不靠谱，可能这个功能很简单，就发布了一个版本就没啥可维护的。毕竟有些比较冷门的功能</p></li><li><p>还可以打开官网看看</p><ul><li>有些官网里面会显示 price—价格或者purchase，那就说明这个包它不是免费的，不是开源的<ul><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240822/%E6%94%B6%E8%B4%B9.6bh02z6lcz.webp" alt="收费"></li></ul></li><li>NuGet上面不是所有的包都是免费的，也有一部分是收费的<ul><li>有一部分属于商业使用，需要收费</li><li>或者说是试用版</li><li>收费的慎用，因为是需要花钱的</li></ul></li></ul></li></ul><hr><h2 id="NuGet使用方式"><a href="#NuGet使用方式" class="headerlink" title="NuGet使用方式"></a>NuGet使用方式</h2><ul><li>NuGet CLI</li><li>VS图形界面<ul><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240823/%E5%9B%BE%E5%BD%A2%E5%8C%96%E7%95%8C%E9%9D%A2.5tqyfextu6.webp" alt="图形化界面"></li></ul></li><li>VS命令行【程序包管理器控制台】(推荐)<ul><li>安装<ul><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240823/%E5%AE%89%E8%A3%85.67xe6agpow.webp" alt="安装"></li></ul></li><li>卸载<ul><li>常规<ul><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240823/%E5%8D%B8%E8%BD%BD.4uav297b2p.webp" alt="卸载"></li></ul></li><li>非常规<ul><li>直接在配置文件中把那一行是删除保存即可。</li><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240823/%E9%9D%9E%E5%B8%B8%E8%A7%84.4xugzza4wl.webp" alt="非常规"></li></ul></li></ul></li><li>更新<ul><li>Update-Package XXX 跟上包名即可</li></ul></li><li>注意<ul><li>注意：【默认项目】为目标项目。</li><li>1）安装：Install-Package XXX。-Version 指定版本。<ul><li>可以看到把依赖组件都下载了。</li><li>版本检测：尝试 把项目改为.NET core 1.0，然后再安装Zack.EFCore.Batch试试。</li></ul></li><li>2）卸载：Uninstall-Package XXX</li><li>3）更新到最新版：Update-Package XXX</li></ul></li></ul></li></ul><h3 id="其他方面"><a href="#其他方面" class="headerlink" title="其他方面"></a>其他方面</h3><ul><li>1、NuGet你也可以贡献，就三步。<ul><li>能力的锻炼，增加社区的影响力</li></ul></li><li>2、和.NET Framework不同，.NET core绝大部分官方程序集也要到NuGet下载。模块化！<ul><li>.NET Framework的一些部分功能都是默认集成了，到了.NET Core就把这些功能都剥离出来放在NuGet上面了，变成模块化~ 需要就装，不需要就不用安装</li></ul></li><li>3、少部分是收费的，如搜索“word file”。</li><li>4、参差不齐，如何分辨质量。</li><li>5、内部部署NuGet服务器。<ul><li>通用的包，不方便放在NuGet上面。方便团队使用，可以内部去搭建NuGet服务器，如果需要微软的包，也可以映射过来。</li></ul></li></ul><h3 id="小技巧"><a href="#小技巧" class="headerlink" title="小技巧"></a>小技巧</h3><ul><li>项目中的包太多了，想更新版本，如果使用VS命令行，需要一个一个更新太麻烦了<ul><li>可以使用VS图形界面去更新(选需要更新的包即可)</li><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240823/%E6%9B%B4%E6%96%B0.ic1upbr65.webp" alt="更新"></li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>.NET Core</category>
      
      <category>第2章：.NET Core 重难点知识</category>
      
    </categories>
    
    
    <tags>
      
      <tag>.NET Core2022-学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P1-2 .NET Core 开发环境的搭建</title>
    <link href="/2024/08/21/Net%20Core2022%E6%95%99%E7%A8%8B/%E7%AC%AC1%E7%AB%A0%EF%BC%9A.NET%20Core%E5%85%A5%E9%97%A8-%E7%AC%94%E8%AE%B0/P1-2%20.NET%20Core%20%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E7%9A%84%E6%90%AD%E5%BB%BA/"/>
    <url>/2024/08/21/Net%20Core2022%E6%95%99%E7%A8%8B/%E7%AC%AC1%E7%AB%A0%EF%BC%9A.NET%20Core%E5%85%A5%E9%97%A8-%E7%AC%94%E8%AE%B0/P1-2%20.NET%20Core%20%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E7%9A%84%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<h1 id="NET-Core-开发环境的搭建"><a href="#NET-Core-开发环境的搭建" class="headerlink" title=".NET Core 开发环境的搭建"></a>.NET Core 开发环境的搭建</h1><hr><h2 id="用什么开发工具开发"><a href="#用什么开发工具开发" class="headerlink" title="用什么开发工具开发"></a>用什么开发工具开发</h2><h3 id="NET-5-开发工具"><a href="#NET-5-开发工具" class="headerlink" title=".NET 5 开发工具"></a>.NET 5 开发工具</h3><ul><li>1、.NET CLI：命令行</li><li>2、Visual Studio：Windows-Only(推荐)</li><li>3、Visual Studio for Mac：是微软收购的公司，然后改的，但使用方式和Visual Studio 肯定会有一些不一样</li><li>4、Jetbrains Rider：收费</li><li>5、VS Code：跨平台，一般都是前端来使用</li></ul><h3 id="NET-SDK、运行时、文档…"><a href="#NET-SDK、运行时、文档…" class="headerlink" title=".NET SDK、运行时、文档….."></a>.NET SDK、运行时、文档…..</h3><ul><li>微软官网：<a href="https://dotnet.microsoft.com/">https://dotnet.microsoft.com/</a><ul><li>可能VS自带，但是在服务器上需要单独安装</li></ul></li><li>不做文档的搬运工</li><li>需要会搜索文档<ul><li>可以自由进行中英文切换</li><li>中文：zh-cn<ul><li>例如：<a href="https://dotnet.microsoft.com/zh-cn/">https://dotnet.microsoft.com/zh-cn/</a></li></ul></li><li>英文：en-us<ul><li>例如：<a href="https://dotnet.microsoft.com/en-us/">https://dotnet.microsoft.com/en-us/</a></li></ul></li></ul></li></ul><h3 id="NET-CLI-了解和使用"><a href="#NET-CLI-了解和使用" class="headerlink" title=".NET CLI 了解和使用"></a>.NET CLI 了解和使用</h3><ul><li>.NET CLI：不用单独装</li><li>只需要知道就行，不需要精通</li></ul><blockquote><p>dotnet –version   查看版本<br>dotnet new console 当前文件夹下创建控制台项目<br>dotnet run 构建并运行<br>详细见官方文档“.NET CLI” 部分</p></blockquote><p>注意：VS中创建项目的时候注意用的框架</p><ul><li>新建一个控制台程序，确保目标框架为 .NET 5<br><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240821/%E6%A1%86%E6%9E%B6%E9%80%89%E6%8B%A9.4g4f8pqhzz.webp" alt="框架选择"></li></ul><hr><h2 id="NET-Core-项目结构的创新"><a href="#NET-Core-项目结构的创新" class="headerlink" title=".NET Core 项目结构的创新"></a>.NET Core 项目结构的创新</h2><h3 id="一样的csproj，不一样的借口"><a href="#一样的csproj，不一样的借口" class="headerlink" title="一样的csproj，不一样的借口"></a>一样的csproj，不一样的借口</h3><ul><li>1、csproj文件的包含与排除(两者相反)<ul><li>Framework的包含都在csproj中显示出来，而排除不会显示<ul><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240821/Framework-csproj.58haqmtwgb.webp" alt="Framework-csproj"></li></ul></li><li>.NET Core是默认包含所有项目的，只有排除了才会在csproj显示<ul><li>这种做法很Cool，很大的减少了项目中协同会冲突的问题</li><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240821/Core-csproj.1seyyjk9e2.webp" alt="Core-csproj"></li><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240821/%E6%8E%92%E9%99%A4.60u68dai6k.webp" alt="排除"></li></ul></li></ul></li><li>2、*.config</li></ul><h3 id="程序的发布"><a href="#程序的发布" class="headerlink" title="程序的发布"></a>程序的发布</h3><ul><li>1、部署模式<ul><li>依赖框架<ul><li>依赖框架的优点：小型部署，文件小</li><li>缺点：要求预先安装运行时。因为没有内置运行时，所以 .NET 运行时和库由用户安装，所有应用共享运行时。</li><li>可移植是哪个平台都可以使用</li><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240821/%E4%BE%9D%E8%B5%96%E6%A1%86%E6%9E%B6.8z6gbwlq0m.webp" alt="依赖框架"></li></ul></li><li>独立(推荐)<ul><li>独立优点是：内置了运行时，应用的用户无需下载和安装 .NET。</li><li>缺点：大型部署(文件大一点)</li><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240821/%E7%8B%AC%E7%AB%8B.6f0lz9lrec.webp" alt="独立"></li></ul></li></ul></li><li>2、目标运行时</li><li>3、生成单个文件</li><li>4、ReadyToRun：Aot(ahead-of-time)、JIT；缺点看文档<ul><li>文档：<a href="https://learn.microsoft.com/zh-cn/dotnet/core/deploying/ready-to-run">https://learn.microsoft.com/zh-cn/dotnet/core/deploying/ready-to-run</a></li></ul></li><li>5、剪裁为使用的程序集；缺点看文档<ul><li>文档：<a href="https://learn.microsoft.com/zh-cn/dotnet/core/deploying/trimming/incompatibilities">https://learn.microsoft.com/zh-cn/dotnet/core/deploying/trimming/incompatibilities</a></li></ul></li><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240821/%E5%8A%9F%E8%83%BD%E6%89%80%E5%9C%A8.3uurmmu4v9.webp" alt="功能所在"></li><li>发布过程<ul><li>①<img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240821/%E5%8F%91%E5%B8%831.ic1s958fp.webp" alt="发布1"></li><li>②<img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240821/%E5%8F%91%E5%B8%832.syvlekgl2.webp" alt="发布2"></li></ul></li></ul><blockquote><p>自学就要养成把相关文档“翻一翻”的意识</p></blockquote><h3 id="小技巧"><a href="#小技巧" class="headerlink" title="小技巧"></a>小技巧</h3><ul><li>1、快速查看文本内容<ul><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240821/%E5%B0%8F%E6%8A%80%E5%B7%A71.5fkim2jhju.webp" alt="小技巧1"></li></ul></li><li>2、.NET Core项目可以点击上方，直接查看或修改csproj文件内容<ul><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240821/%E5%B0%8F%E6%8A%80%E5%B7%A72.b8twslchf.webp" alt="小技巧2"></li></ul></li><li>3、微软的虚拟机 Sandbox  和WSl：Windows subsystem for linux<ul><li>3.1 尝试把文件拷贝到另一台Windows(SandBox)中运行</li><li>3.2 尝试把文件拷贝到一台Linux(用WSL)中运行<ul><li>WSL中到&#x2F;mnt目录下访问主机磁盘</li><li>Linux中执行可执行程序： .&#x2F;文件名</li></ul></li><li>3.3 WinForm&#x2F;WPF(.NET Core)也可以用这个(Windows-only)</li></ul></li></ul><h2 id="本章小结"><a href="#本章小结" class="headerlink" title="本章小结"></a>本章小结</h2><ul><li>本章首先介绍了开源且跨平台的开发技术 .NET Core</li><li>然后介绍了因为 .NET Framework的局限性，所以微软重新开发了 .NET Core</li><li>最后讲解了 .NET Core开发环境的搭建方法，并且讲解了 .NET Core项目结构的创新之处  —《ASP .NET Core技术内幕与项目实战-13页》</li></ul>]]></content>
    
    
    <categories>
      
      <category>.NET Core</category>
      
      <category>第1章：.NET Core入门</category>
      
    </categories>
    
    
    <tags>
      
      <tag>.NET Core2022-学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P1-1 .NET Core概述</title>
    <link href="/2024/08/21/Net%20Core2022%E6%95%99%E7%A8%8B/%E7%AC%AC1%E7%AB%A0%EF%BC%9A.NET%20Core%E5%85%A5%E9%97%A8-%E7%AC%94%E8%AE%B0/P1-1%20.NET%20Core%E6%A6%82%E8%BF%B0/"/>
    <url>/2024/08/21/Net%20Core2022%E6%95%99%E7%A8%8B/%E7%AC%AC1%E7%AB%A0%EF%BC%9A.NET%20Core%E5%85%A5%E9%97%A8-%E7%AC%94%E8%AE%B0/P1-1%20.NET%20Core%E6%A6%82%E8%BF%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="NET-Core概述"><a href="#NET-Core概述" class="headerlink" title=".NET Core概述"></a>.NET Core概述</h1><hr><blockquote><p>听课前提说明</p><ul><li>1、不讲C#基础语法和.NET基础类库(不需要学过ASP.NET等)<ul><li>需要懂HTML、JavaScript、数据库等</li></ul></li><li>2、上课尽量与老师用的Visual Studio 版本保持一致，杨中科老师是2019<ul><li>VS2019支持.NET SDK-5</li><li>VS2022和VS2019的区别就是需要手动选择一下5.0的SDK版本</li></ul></li><li>SDK6 以上最好用VS2022版本以上的 </li><li>3、程序员的自主学习能力<ul><li>记录笔记</li><li>不依靠老师的课件、代码</li></ul></li></ul></blockquote><h2 id="什么是-NET-Core"><a href="#什么是-NET-Core" class="headerlink" title="什么是.NET Core"></a>什么是.NET Core</h2><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><blockquote><p>.NET是开发平台<br>.NET是.NET Framework、.NET Core、Xamarin&#x2F;Mono的统称</p></blockquote><ul><li>.NET Framework<ul><li>近20年历史，.NET简称的最早拥有者，用于开发Windows程序</li></ul></li><li>Xamarin&#x2F;Mono<ul><li>主要做移动开发</li><li>Xamarin、Unity。Mono也能做Web等跨平台开发，但主要专注移动端</li></ul></li><li>.NET Core<ul><li>免费、跨平台、开源<ul><li>跨平台：程序可以运行在Windows、Linux、Mac等操作系统下</li></ul></li><li>事件：社区的 <strong>微软 love Linux</strong></li></ul></li></ul><h3 id="为什么程序要跨平台运行？"><a href="#为什么程序要跨平台运行？" class="headerlink" title="为什么程序要跨平台运行？"></a>为什么程序要跨平台运行？</h3><ul><li>因为微软最早是没有开源，直到.NET Core 才开源，真正的跨平台的开始<ul><li>像.NET Framework 只支持Windows系统，太狭义了。</li></ul></li><li>微软的发展转折–&gt; 云计算(Microsoft Azure—全球第二大云计算厂商)<ul><li>按需付费</li></ul></li><li>.NET Core为云而生<ul><li>不止于云，不止于Azure</li></ul></li></ul><hr><h2 id="NET-Core的重要问题"><a href="#NET-Core的重要问题" class="headerlink" title="NET Core的重要问题"></a>NET Core的重要问题</h2><h3 id="什么是C-？"><a href="#什么是C-？" class="headerlink" title="什么是C#？"></a>什么是C#？</h3><ul><li>.NET中主要的开发语言</li></ul><h3 id="NET-Core是-NET-Framework的升级版吗？"><a href="#NET-Core是-NET-Framework的升级版吗？" class="headerlink" title=".NET Core是.NET Framework的升级版吗？"></a>.NET Core是.NET Framework的升级版吗？</h3><ul><li><p>尽管绝大部分用法没变，但是.NET Core不是.NET Framework的升级版，无法直接升级</p></li><li><p>有人会觉得又被微软坑了？</p><ul><li>.NET Framework白学了？ 那倒没有，因为绝大多数用法没变</li></ul></li><li><p>之前可以用Mono让.NET Framework程序可以直接运行在LInux下。但有了Mono，为啥微软还搞了.NET Core呢？</p><ul><li>.NET Framework历史包袱<ul><li>1.带着手铐脚镣长大的ASP.NET—MVC<ul><li>因为这是在这个底层逻辑上的MVC框架而已，底层太过于臃肿</li></ul></li><li>2.ASP.NET底层不支持很好的单元测试</li></ul></li><li>Mono在移动端可以，但是现在服务器端几乎不用</li></ul></li></ul><blockquote><p>.NET Framework的缺点<br>1、系统级别的安装，互相影响(比如补丁升级)<br>2、无法独立部署<br>3、ASP.NET和IIS 深度耦合<br>4、ASP.NET资源消耗大<br>5、非云原生  </p></blockquote><blockquote><p>.NET Core的优点<br>1、支撑独立部署，不互相影响<br>2、彻底模块化<br>3、没有历史包袱，运行效率高<br>4、不依赖与IIS<br>5、跨平台<br>6、符合现代开发理念：依赖注入，单元测试等</p></blockquote><p>不同之处</p><ul><li>1、不支持：ASP.NET WebForms、WCF服务器端、WF、.NET Remoting、Appdomain</li><li>2、部分Windows-Only的特性 .NET Core，但是无法跨平台：WinForm、WPF、注册表、Event Log、AD等。</li></ul><h3 id="项目应该使用-NET-Core开发吗？"><a href="#项目应该使用-NET-Core开发吗？" class="headerlink" title="项目应该使用.NET Core开发吗？"></a>项目应该使用.NET Core开发吗？</h3><ul><li>1、旧的.NET Framework项目没必要动</li><li>2、用到了.NET Core中不支持的特性的不能动</li><li>3、其他新项目都可以用.NET Core，已经足够成熟，社区也在全面转向.NET Core</li></ul><hr><h2 id="NET-Standard是什么"><a href="#NET-Standard是什么" class="headerlink" title=".NET Standard是什么"></a>.NET Standard是什么</h2><h3 id="NET-Standard介绍"><a href="#NET-Standard介绍" class="headerlink" title=".NET Standard介绍"></a>.NET Standard介绍</h3><ul><li>它是一个标准规范</li><li>图解<ul><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240821/%E5%9B%BE%E8%A7%A31.2h88i65700.webp" alt="图解1"></li></ul></li></ul><h3 id="验证：-NET-Standard只是标准，不是实现"><a href="#验证：-NET-Standard只是标准，不是实现" class="headerlink" title="验证：.NET Standard只是标准，不是实现"></a>验证：.NET Standard只是标准，不是实现</h3><ul><li>1、建.NET Standard类库项目，确认版本是2.0，建一个类，方法中打印typeof(FileStream).Assembly.Location<ul><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240821/Standard.73tviycrrs.webp" alt="Standard"></li></ul></li><li>2、分别建.NET Standard和.NET Core的控制台项目，添加对类库项目引用，并且调用</li><li>3、用反编译工具ILSpy分别反编译VS中FileStream、.NET Framework和.NET Core运行中的。BeginRead方法实现以及定义有不同<ul><li>反编译：程序集–&gt;源代码</li><li>ILSpy不会默认展开方法细节<ul><li>所以可以在选项中打开</li><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240821/%E5%B1%95%E5%BC%80%E7%BB%86%E8%8A%821.6ik7wngacf.webp" alt="展开细节1"></li></ul></li></ul></li></ul><h4 id="Core-BeginRead和Framework-BeginRead的不同"><a href="#Core-BeginRead和Framework-BeginRead的不同" class="headerlink" title="Core-BeginRead和Framework-BeginRead的不同"></a>Core-BeginRead和Framework-BeginRead的不同</h4><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240821/%E4%B8%8D%E5%90%8C1.5q7cexi68q.webp" alt="不同1"></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs C#">Core<br><span class="hljs-comment">//在Standard规范的前提下，实现各自的方法逻辑</span><br>C:\Program Files\dotnet\shared\Microsoft.NETCore.App\<span class="hljs-number">5.0</span><span class="hljs-number">.17</span>\System.Private.CoreLib.dll<br>E:\Projects\C-sharp\.NET Core2022 Study\CoreConsole1\bin\Debug\net5<span class="hljs-number">.0</span>\TestLib1.dll<br><br><br>Framework<br><span class="hljs-comment">//在Standard规范的前提下，实现各自的方法逻辑</span><br>C:\Windows\Microsoft.NET\Framework\v4<span class="hljs-number">.0</span><span class="hljs-number">.30319</span>\mscorlib.dll<br>E:\Projects\C-sharp\.NET Core2022 Study\FrameworkConsole1\bin\Debug\TestLib1.dll<br><br>NET Standard<br><span class="hljs-comment">//方法都是只有定义，但没有实现</span><br>C:\Users\Administrator\.nuget\packages\netstandard.library\<span class="hljs-number">2.0</span><span class="hljs-number">.3</span>\build\netstandard2<span class="hljs-number">.0</span>\<span class="hljs-keyword">ref</span>\netstandard.dll<br></code></pre></td></tr></table></figure><h5 id="遇到的报错"><a href="#遇到的报错" class="headerlink" title="遇到的报错"></a>遇到的报错</h5><ul><li>1、FrameworkConsole1 引用Standard类库时，框架版本不能低于4.7.2，要不然引用会出错</li><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240821/%E7%89%88%E6%9C%AC1.8vmuduebes.webp" alt="版本1"></li></ul><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ul><li>.NET Standard只是规范，一个.NET Standard类库可以被支持其版本的.NET Framework、.NET Core、Xamarin等引用。</li><li>而.NET Core类库、.NET Framework类库则不可以被.NET Standard引用。<ul><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240821/Standard%E7%89%88%E6%9C%AC%E6%94%AF%E6%8C%81.7i0b9vk9vd.webp" alt="Standard版本支持"></li></ul></li><li>如果编写一个公用的类库，尽量选择.NET Standard，并且尽量用低版本</li><li>.NET Framework支持到.NET Standard 2.0为止<ul><li>从.NET5开始，微软开始淡化其他叫法，统一为.NET。<ul><li>后续默认.NET就是指的.NET Core</li></ul></li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>.NET Core</category>
      
      <category>第1章：.NET Core入门</category>
      
    </categories>
    
    
    <tags>
      
      <tag>.NET Core2022-学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P4-16 在Word中创建图表</title>
    <link href="/2024/08/20/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part4-%E7%AC%94%E8%AE%B0/P4-16%20%E5%9C%A8Word%E4%B8%AD%E5%88%9B%E5%BB%BA%E5%9B%BE%E8%A1%A8/"/>
    <url>/2024/08/20/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part4-%E7%AC%94%E8%AE%B0/P4-16%20%E5%9C%A8Word%E4%B8%AD%E5%88%9B%E5%BB%BA%E5%9B%BE%E8%A1%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="在Word中创建图表"><a href="#在Word中创建图表" class="headerlink" title="在Word中创建图表"></a>在Word中创建图表</h1><hr><h2 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h2><p>Word中创建图表的方式是一样的</p><p>XWPFChart和XSSFChart 一样都是继承自XDDFChart的,因此同样可以用chartBuilder构建数据,然后填充.<br>ChartFromArrayBuilder等都可以用</p><p>案例:把Excel中的那两个案例再用Word实现一遍</p><p>1.疫情统计</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs java">String[] lines = IOHelpers.readAllLines(<span class="hljs-string">&quot;D:/JavaTest1/疫情/疫情.txt&quot;</span>);<br>String[] countries=<span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>[lines.length];<span class="hljs-comment">//用来存放国家的数组</span><br>Double[] 确诊数量 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Double</span>[lines.length];<span class="hljs-comment">//用来存放确诊数量的数组</span><br>Double[] 死亡数量 =<span class="hljs-keyword">new</span> <span class="hljs-title class_">Double</span>[lines.length];<span class="hljs-comment">//用来存放死亡数量的数组</span><br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span><span class="hljs-number">0</span>;i&lt; lines.length;i++)<br>&#123;<br>    <span class="hljs-type">String</span> <span class="hljs-variable">line</span> <span class="hljs-operator">=</span>lines[i];<br>    String[] datas = line.split(<span class="hljs-string">&quot;\\s&quot;</span>);<span class="hljs-comment">//\\s 是正则表达式,代表了空格和Tab, 只要是空,就算</span><br>    <span class="hljs-comment">//System.out.println(Arrays.toString(datas));//先输出一下看看正确不</span><br>    String 国家 =datas[<span class="hljs-number">0</span>];<br>    Double 确诊 = Double.parseDouble(datas[<span class="hljs-number">1</span>]);<br>    Double 死亡 = Double.parseDouble(datas[<span class="hljs-number">2</span>]);<br>    countries[i]=国家;<br>    确诊数量[i]=确诊;<br>    死亡数量[i]=死亡;<br>&#125;<br><span class="hljs-type">XWPFDocument</span> <span class="hljs-variable">doc</span> <span class="hljs-operator">=</span> WordHelpers.createDocxDocument();<br><span class="hljs-type">XWPFChart</span> <span class="hljs-variable">chart</span> <span class="hljs-operator">=</span> WordHelpers.createChart(doc, <span class="hljs-number">400</span>, <span class="hljs-number">400</span>);<br>ChartFromArrayBuilder&lt;Double&gt; chartBuilder = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ChartFromArrayBuilder</span>&lt;&gt;(ChartTypes.BAR);<br>chart.setTitleText(<span class="hljs-string">&quot;疫情统计&quot;</span>);<span class="hljs-comment">//图表标题</span><br>chart.getOrAddLegend().setPosition(LegendPosition.LEFT);<br>chartBuilder.setCategoryNames(countries);<br>chartBuilder.putValues(<span class="hljs-string">&quot;确诊数量&quot;</span>,确诊数量);<br>chartBuilder.putValues(<span class="hljs-string">&quot;死亡数量&quot;</span>,死亡数量);<br>chartBuilder.build(chart);<br>WordHelpers.saveToFile(doc,<span class="hljs-string">&quot;D:/JavaTest1/疫情/疫情.docx&quot;</span>);<br>WordHelpers.close(doc);<br></code></pre></td></tr></table></figure><p>2.收入统计</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">Workbook</span> <span class="hljs-variable">wb</span> <span class="hljs-operator">=</span> ExcelHelpers.openFile(<span class="hljs-string">&quot;D:/JavaTest1/公司账目2021年.xlsx&quot;</span>);<br><span class="hljs-type">int</span> <span class="hljs-variable">sheetCount</span> <span class="hljs-operator">=</span> wb.getNumberOfSheets();<br>String[] monthNames = <span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>[sheetCount];<span class="hljs-comment">//用来给波动图的指标</span><br>Double[] sales = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Double</span>[sheetCount];<span class="hljs-comment">//用来给波动图的数据</span><br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">sheetIndex</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;sheetIndex&lt;sheetCount;sheetIndex++)<br>&#123;<br>    <span class="hljs-type">Sheet</span> <span class="hljs-variable">sheet</span> <span class="hljs-operator">=</span> wb.getSheetAt(sheetIndex);<br>    <span class="hljs-type">String</span> <span class="hljs-variable">month</span> <span class="hljs-operator">=</span> sheet.getSheetName();<br>    monthNames[sheetIndex]=month;<br>    <span class="hljs-type">double</span> 学费总额=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">rowIndex</span> <span class="hljs-operator">=</span><span class="hljs-number">1</span>;rowIndex&lt;=sheet.getLastRowNum();rowIndex++)<br>    &#123;<br>        String 收支类别 = ExcelHelpers.getCellStringValue(sheet,rowIndex,<span class="hljs-number">2</span>);<br>        <span class="hljs-comment">//System.out.println(收支类别);</span><br>        <span class="hljs-keyword">if</span>(收支类别.equals(<span class="hljs-string">&quot;学费收入&quot;</span>))<br>        &#123;<br>            <span class="hljs-type">double</span> 金额= ExcelHelpers.getCellDoubleValue(sheet,rowIndex,<span class="hljs-number">3</span>);<br>            学费总额+=金额;<br>        &#125;<br>    &#125;<br>    sales[sheetIndex] = 学费总额;<br>    System.out.println(month+<span class="hljs-string">&quot;:&quot;</span>+学费总额);<br>&#125;<br><br><span class="hljs-type">XWPFDocument</span> <span class="hljs-variable">doc</span> <span class="hljs-operator">=</span> WordHelpers.createDocxDocument();<br><span class="hljs-type">XWPFChart</span> <span class="hljs-variable">chart</span> <span class="hljs-operator">=</span> WordHelpers.createChart(doc, <span class="hljs-number">400</span>, <span class="hljs-number">400</span>);<br>ChartFromArrayBuilder&lt;Double&gt; chartBuilder = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ChartFromArrayBuilder</span>&lt;&gt;(ChartTypes.LINE);<br>chartBuilder.setCategoryNames(monthNames);<br>chartBuilder.putValues(<span class="hljs-string">&quot;学费收入&quot;</span>,sales);<br>chartBuilder.build(chart);<br><br>WordHelpers.saveToFile(doc,<span class="hljs-string">&quot;D:/JavaTest1/学费收入/1.docx&quot;</span>);<br>WordHelpers.close(doc);<br><br>ExcelHelpers.close(wb);<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part4</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P4-15 案例：计算公司财务报表</title>
    <link href="/2024/08/20/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part4-%E7%AC%94%E8%AE%B0/P4-15%20%E6%A1%88%E4%BE%8B%EF%BC%9A%E8%AE%A1%E7%AE%97%E5%85%AC%E5%8F%B8%E8%B4%A2%E5%8A%A1%E6%8A%A5%E8%A1%A8/"/>
    <url>/2024/08/20/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part4-%E7%AC%94%E8%AE%B0/P4-15%20%E6%A1%88%E4%BE%8B%EF%BC%9A%E8%AE%A1%E7%AE%97%E5%85%AC%E5%8F%B8%E8%B4%A2%E5%8A%A1%E6%8A%A5%E8%A1%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="案例：计算公司财务报表"><a href="#案例：计算公司财务报表" class="headerlink" title="案例：计算公司财务报表"></a>案例：计算公司财务报表</h1><hr><h2 id="需求说明"><a href="#需求说明" class="headerlink" title="需求说明"></a>需求说明</h2><ul><li>“公司账目2021年.xlsx”,计算每个月的学费收入的波动图</li></ul><p>思路</p><ul><li>1.打开xlsx</li><li>2.先按照日期月份去算,然后再看收支类别是否为”学费收入” , </li><li>3.然后相加 赋值给变量</li><li>4.制作波动图</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * - &quot;公司账目2021年.xlsx&quot;,计算每个月的学费收入的波动图</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * 思路</span><br><span class="hljs-comment"> * - 1.打开xlsx</span><br><span class="hljs-comment"> * - 2.先按照日期月份去算,然后再看收支类别是否为&quot;学费收入&quot; ,</span><br><span class="hljs-comment"> * - 3.然后相加 赋值给变量</span><br><span class="hljs-comment"> * - 4.制作波动图</span><br><span class="hljs-comment"> */</span><br><span class="hljs-type">Workbook</span> <span class="hljs-variable">workbook</span> <span class="hljs-operator">=</span> ExcelHelpers.openFile(<span class="hljs-string">&quot;D:/JavaTest1/公司账目2021年.xlsx&quot;</span>);<br><span class="hljs-type">int</span> <span class="hljs-variable">sheetmax</span> <span class="hljs-operator">=</span> workbook.getNumberOfSheets();<br><span class="hljs-type">double</span> one=<span class="hljs-number">0</span>;<br><span class="hljs-type">double</span> two=<span class="hljs-number">0</span>;<br><span class="hljs-type">double</span> three=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> sheetIndex=<span class="hljs-number">0</span>;sheetIndex&lt;sheetmax;sheetIndex++) <span class="hljs-comment">//循环读取页签中的内容 sheet</span><br>&#123;<br>    <span class="hljs-type">Sheet</span> <span class="hljs-variable">sheet</span> <span class="hljs-operator">=</span> workbook.getSheetAt(sheetIndex);<span class="hljs-comment">//获取第x页签</span><br>    <span class="hljs-type">int</span> rowNumber=sheet.getLastRowNum();<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">rowIndex</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span>;rowIndex&lt;=rowNumber;rowIndex++)<span class="hljs-comment">//跳过表头</span><br>    &#123;<br>        String 收支类别 =ExcelHelpers.getCellStringValue(sheet,rowIndex,<span class="hljs-number">2</span>);<br>        <span class="hljs-type">double</span> 金额 =ExcelHelpers.getCellDoubleValue(sheet,rowIndex,<span class="hljs-number">3</span>);<br>        <span class="hljs-keyword">if</span> (!收支类别.equals(<span class="hljs-string">&quot;学费收入&quot;</span>))<br>        &#123;<br>            <span class="hljs-keyword">continue</span>;<br>        &#125;<br>        <span class="hljs-keyword">else</span><br>        &#123;<br>            <span class="hljs-keyword">if</span> (sheetIndex==<span class="hljs-number">0</span>)<br>            &#123;<br>                one=one+金额;<br>            &#125;<br>            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (sheetIndex==<span class="hljs-number">1</span>)<br>            &#123;<br>                two=two+金额;<br>            &#125;<br>            <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (sheetIndex==<span class="hljs-number">2</span>)<br>            &#123;<br>                three=three+金额;<br>            &#125;<br>            <span class="hljs-keyword">else</span><br>            &#123;<br>                System.out.println(<span class="hljs-string">&quot;没有的表&quot;</span>);<br>            &#125;<br>        &#125;<br><br>    &#125;<br>&#125;<br><span class="hljs-type">XSSFWorkbook</span> <span class="hljs-variable">workbooks</span> <span class="hljs-operator">=</span>ExcelHelpers.createXLSX();<span class="hljs-comment">//创建xlsx</span><br><span class="hljs-type">XSSFSheet</span> <span class="hljs-variable">sheet</span> <span class="hljs-operator">=</span> workbooks.createSheet();<span class="hljs-comment">//创建页签</span><br><span class="hljs-type">XSSFChart</span> <span class="hljs-variable">chart</span> <span class="hljs-operator">=</span> ExcelHelpers.createChart(sheet, <span class="hljs-number">0</span>, <span class="hljs-number">5</span>, <span class="hljs-number">7</span>, <span class="hljs-number">26</span>);<span class="hljs-comment">//在sheet上创建一个图表对象，显示到左上角坐标为(coll，row)、右下角坐标为(col2，row2)这个位置</span><br>chart.setTitleText(<span class="hljs-string">&quot;每月收入波动图&quot;</span>);<br>chart.getOrAddLegend().setPosition(LegendPosition.LEFT);<br><br>ChartFromArrayBuilder&lt;Double&gt; chartBuilder = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ChartFromArrayBuilder</span>&lt;&gt;(ChartTypes.LINE);<span class="hljs-comment">//设置显示的图像:折线图  3D图等</span><br>String[] monthNames = <span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>[]&#123;<span class="hljs-string">&quot;一月份&quot;</span>,<span class="hljs-string">&quot;二月份&quot;</span>,<span class="hljs-string">&quot;三月份&quot;</span>&#125;;<br>Double[] sales1 =&#123;one,two,three&#125;;<br>chartBuilder.setCategoryNames(monthNames);<span class="hljs-comment">//横坐标用哪个数组</span><br>chartBuilder.putValues(<span class="hljs-string">&quot;月份&quot;</span>,sales1);<br>chartBuilder.build(chart);<br><br>ExcelHelpers.saveToFile(workbooks,<span class="hljs-string">&quot;D:/JavaTest1/学费收入/1.xlsx&quot;</span>);<span class="hljs-comment">//保存文件</span><br>ExcelHelpers.close(workbooks);<span class="hljs-comment">//关闭文件</span><br>ExcelHelpers.close(workbooks);<br><span class="hljs-comment">//DesktopHelpers.openFile(&quot;D:/JavaTest1/学费收入/1.xlsx&quot;);//用默认方式去打开文件</span><br></code></pre></td></tr></table></figure><ul><li>1.上面这个代码是自己没有看大佬的视频时,写出来的.</li><li>分析一下<ul><li>1.自己写的太固定了,不好换</li><li>2.其他思路和大佬的都差不多</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//大佬写的</span><br><span class="hljs-type">Workbook</span> <span class="hljs-variable">wb</span> <span class="hljs-operator">=</span> ExcelHelpers.openFile(<span class="hljs-string">&quot;d:/公司账目2021年.xlsx&quot;</span>);<br><span class="hljs-type">int</span> <span class="hljs-variable">sheetCount</span> <span class="hljs-operator">=</span> wb.getNumberOfSheets();<br>String[] monthNames = <span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>[sheetCount];<span class="hljs-comment">//用来给波动图的指标</span><br>Double[] sales = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Double</span>[sheetCount];<span class="hljs-comment">//用来给波动图的数据</span><br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">sheetIndex</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;sheetIndex&lt;sheetCount;sheetIndex++)<br>&#123;<br>    <span class="hljs-type">Sheet</span> <span class="hljs-variable">sheet</span> <span class="hljs-operator">=</span> wb.getSheetAt(sheetIndex);<br>    <span class="hljs-type">String</span> <span class="hljs-variable">month</span> <span class="hljs-operator">=</span> sheet.getSheetName();<br>    monthNames[sheetIndex]=month;<br>    <span class="hljs-type">double</span> 学费总额=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> <span class="hljs-variable">rowIndex</span> <span class="hljs-operator">=</span><span class="hljs-number">1</span>;rowIndex&lt;=sheet.getLastRowNum();rowIndex++)<br>    &#123;<br>        String 收支类别 = ExcelHelpers.getCellStringValue(sheet,rowIndex,<span class="hljs-number">2</span>);<br>        <span class="hljs-comment">//System.out.println(收支类别);</span><br>        <span class="hljs-keyword">if</span>(收支类别.equals(<span class="hljs-string">&quot;学费收入&quot;</span>))<br>        &#123;<br>            <span class="hljs-type">double</span> 金额= ExcelHelpers.getCellDoubleValue(sheet,rowIndex,<span class="hljs-number">3</span>);<br>            学费总额+=金额;<br>        &#125;<br>    &#125;<br>    sales[sheetIndex] = 学费总额;<br>    System.out.println(month+<span class="hljs-string">&quot;:&quot;</span>+学费总额);<br>&#125;<br><br><span class="hljs-type">XSSFWorkbook</span> <span class="hljs-variable">wbChart</span> <span class="hljs-operator">=</span> ExcelHelpers.createXLSX();<br><span class="hljs-type">XSSFSheet</span> <span class="hljs-variable">sheet</span> <span class="hljs-operator">=</span> wbChart.createSheet();<br><span class="hljs-type">XSSFChart</span> <span class="hljs-variable">chart</span> <span class="hljs-operator">=</span> ExcelHelpers.createChart(sheet, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">10</span>, <span class="hljs-number">20</span>);<br>ChartFromArrayBuilder&lt;Double&gt; chartBuilder = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ChartFromArrayBuilder</span>&lt;&gt;(ChartTypes.LINE);<br>chartBuilder.setCategoryNames(monthNames);<br>chartBuilder.putValues(<span class="hljs-string">&quot;学费收入&quot;</span>,sales);<br>chartBuilder.build(chart);<br><br>ExcelHelpers.saveToFile(wbChart,<span class="hljs-string">&quot;d:/学费波动.xlsx&quot;</span>);<br>ExcelHelpers.close(wbChart);<br><br>ExcelHelpers.close(wb);<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part4</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P4-14 案例：各国疫情排行</title>
    <link href="/2024/08/20/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part4-%E7%AC%94%E8%AE%B0/P4-14%20%E6%A1%88%E4%BE%8B%EF%BC%9A%E5%90%84%E5%9B%BD%E7%96%AB%E6%83%85%E6%8E%92%E8%A1%8C/"/>
    <url>/2024/08/20/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part4-%E7%AC%94%E8%AE%B0/P4-14%20%E6%A1%88%E4%BE%8B%EF%BC%9A%E5%90%84%E5%9B%BD%E7%96%AB%E6%83%85%E6%8E%92%E8%A1%8C/</url>
    
    <content type="html"><![CDATA[<h1 id="案例：各国疫情排行"><a href="#案例：各国疫情排行" class="headerlink" title="案例：各国疫情排行"></a>案例：各国疫情排行</h1><hr><h2 id="需求说明"><a href="#需求说明" class="headerlink" title="需求说明"></a>需求说明</h2><ul><li>从网上找到各国疫情数据，保存到Excel、txt等，然后分析10个主要国家的疫情，分别形成条形图、饼状图。<ul><li>目前用到的页面: <a href="https://www.bitpush.news/covid19/">https://www.bitpush.news/covid19/</a>  如果访问不了，就找别的数据源</li><li>以后还可以学习爬虫技术自己抓取数据</li></ul></li></ul><p>txt文件内容</p><blockquote><p>美国59031556835815<br>印度35226386483178<br>巴西22328252619654<br>英国14279775150222<br>法国11618224126195<br>俄罗斯10437471308258<br>土耳其985245883388<br>德国7458433113717<br>意大利7083762138697<br>西班牙692246689837<br>伊朗6204224131821<br>阿根廷6025303117386<br>哥伦比亚5242672130191</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs java">String[] lines = IOHelpers.readAllLines(<span class="hljs-string">&quot;D:/JavaTest1/疫情/疫情.txt&quot;</span>);<br>String[] countries=<span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>[lines.length];<span class="hljs-comment">//用来存放国家的数组</span><br>Integer[] 确诊数量 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Integer</span>[lines.length];<span class="hljs-comment">//用来存放确诊数量的数组</span><br>Integer[] 死亡数量 =<span class="hljs-keyword">new</span> <span class="hljs-title class_">Integer</span>[lines.length];<span class="hljs-comment">//用来存放死亡数量的数组</span><br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span><span class="hljs-number">0</span>;i&lt; lines.length;i++)<br>&#123;<br>    <span class="hljs-type">String</span> <span class="hljs-variable">line</span> <span class="hljs-operator">=</span>lines[i];<br>    String[] datas = line.split(<span class="hljs-string">&quot;\\s&quot;</span>);<span class="hljs-comment">//\\s 是正则表达式,代表了空格和Tab, 只要是空,就算</span><br>    <span class="hljs-comment">//System.out.println(Arrays.toString(datas));//先输出一下看看正确不</span><br>    String 国家 =datas[<span class="hljs-number">0</span>];<br>    <span class="hljs-type">int</span> 确诊 = Integer.parseInt(datas[<span class="hljs-number">1</span>]);<br>    <span class="hljs-type">int</span> 死亡 = Integer.parseInt(datas[<span class="hljs-number">2</span>]);<br>    countries[i]=国家;<br>    确诊数量[i]=确诊;<br>    死亡数量[i]=死亡;<br>    <span class="hljs-comment">//System.out.println(国家+确诊+死亡);</span><br>&#125;<br><span class="hljs-type">XSSFWorkbook</span> <span class="hljs-variable">workbook</span> <span class="hljs-operator">=</span> ExcelHelpers.createXLSX();<span class="hljs-comment">//创建xlsx</span><br><span class="hljs-type">XSSFSheet</span> <span class="hljs-variable">sheet</span> <span class="hljs-operator">=</span> workbook.createSheet();<span class="hljs-comment">//创建页签</span><br><span class="hljs-type">XSSFChart</span> <span class="hljs-variable">chart</span> <span class="hljs-operator">=</span> ExcelHelpers.createChart(sheet, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">20</span>, <span class="hljs-number">26</span>);<span class="hljs-comment">//在sheet上创建一个图表对象，显示到左上角坐标为(coll，row)、右下角坐标为(col2，row2)这个位置</span><br>chart.setTitleText(<span class="hljs-string">&quot;疫情统计&quot;</span>);<span class="hljs-comment">//图表标题</span><br>chart.getOrAddLegend().setPosition(LegendPosition.LEFT);<br>ChartFromArrayBuilder&lt;Integer&gt; chartBuilder = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ChartFromArrayBuilder</span>&lt;&gt;(ChartTypes.BAR);<span class="hljs-comment">//设置显示的图像:折线图  3D图等</span><br>chartBuilder.setCategoryNames(countries);<br>chartBuilder.putValues(<span class="hljs-string">&quot;确诊数量&quot;</span>,确诊数量);<br>chartBuilder.putValues(<span class="hljs-string">&quot;死亡数量&quot;</span>,死亡数量);<br>chartBuilder.build(chart);<br>ExcelHelpers.saveToFile(workbook,<span class="hljs-string">&quot;D:/JavaTest1/疫情/疫情.xlsx&quot;</span>);<br>ExcelHelpers.close(workbook);<br>DesktopHelpers.openFile(<span class="hljs-string">&quot;D:/JavaTest1/疫情/疫情.xlsx&quot;</span>);<span class="hljs-comment">//用默认方式去打开文件</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part4</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P4-12 案例：从数组数据创建Excel图表</title>
    <link href="/2024/08/19/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part4-%E7%AC%94%E8%AE%B0/P4-12%20%E6%A1%88%E4%BE%8B%EF%BC%9A%E4%BB%8E%E6%95%B0%E7%BB%84%E6%95%B0%E6%8D%AE%E5%88%9B%E5%BB%BAExcel%E5%9B%BE%E8%A1%A8/"/>
    <url>/2024/08/19/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part4-%E7%AC%94%E8%AE%B0/P4-12%20%E6%A1%88%E4%BE%8B%EF%BC%9A%E4%BB%8E%E6%95%B0%E7%BB%84%E6%95%B0%E6%8D%AE%E5%88%9B%E5%BB%BAExcel%E5%9B%BE%E8%A1%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="案例：从数组数据创建Excel图表"><a href="#案例：从数组数据创建Excel图表" class="headerlink" title="案例：从数组数据创建Excel图表"></a>案例：从数组数据创建Excel图表</h1><hr><h2 id="主要概念"><a href="#主要概念" class="headerlink" title="主要概念"></a>主要概念</h2><ul><li>XSSFChart是代表Excel中的图表对象。</li><li>ChartBuilder是用于向XSSFChart中填充数据的构建器，有很多子类：<ul><li>ChartFromArrayBuilder用于从一个固定的数组来创建数据；</li><li>ChartFromCellRangeBuilder用于从一个Excel表指定范围来创建数据；</li></ul></li></ul><h3 id="创建Chart"><a href="#创建Chart" class="headerlink" title="创建Chart"></a>创建Chart</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">XSSFChart</span> <span class="hljs-variable">chart</span> <span class="hljs-operator">=</span> ExcelHelpers.createChart(sheet, <span class="hljs-number">0</span>, <span class="hljs-number">5</span>, <span class="hljs-number">7</span>, <span class="hljs-number">26</span>);<span class="hljs-comment">//在sheet上创建一个图表对象，显示到左上角坐标为(coll，row)、右下角坐标为(col2，row2)这个位置</span><br>chart.setTitleText(<span class="hljs-string">&quot;销售榜&quot;</span>);<br>chart.getOrAddLegend().setPosition(LegendPosition.LEFT);<br></code></pre></td></tr></table></figure><h3 id="Builder"><a href="#Builder" class="headerlink" title="Builder"></a>Builder</h3><ul><li>ChartFromArrayBuilder<Double> chartBuilder &#x3D; new ChartFromArrayBuilder&lt;&gt;(ChartTypes.LINE);</li><li>泛型的类型为数据的类型， ChartTypes为图表的类型：LINE 折线图； LINE3D立体 折线图；BAR条形图；BAR3D 立体条形图；PIE 饼状图；PIE3D立体饼状图；RADAR 雷达图；SCATTER散点图等。</li></ul><h3 id="填充数据"><a href="#填充数据" class="headerlink" title="填充数据"></a>填充数据</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java">String[] monthNames = <span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>[]&#123;<span class="hljs-string">&quot;语文&quot;</span>,<span class="hljs-string">&quot;数学&quot;</span>,<span class="hljs-string">&quot;英语&quot;</span>&#125;;<br>Double[] sales1 =&#123;<span class="hljs-number">99.0</span>,<span class="hljs-number">99.8</span>,<span class="hljs-number">66.6</span>&#125;;<br>Double[] sales2 =&#123;<span class="hljs-number">99.8</span>,<span class="hljs-number">99.9</span>,<span class="hljs-number">88.8</span>&#125;;<br>chartBuilder.setCategoryNames(monthNames);<span class="hljs-comment">//横坐标用哪个数组</span><br>chartBuilder.putValues(<span class="hljs-string">&quot;张三&quot;</span>,sales1);<br>chartBuilder.putValues(<span class="hljs-string">&quot;李四&quot;</span>,sales2);<br>chartBuilder.setCategoryAxisTitle(<span class="hljs-string">&quot;科目&quot;</span>);<span class="hljs-comment">//分类的标题</span><br>chartBuilder.setValueAxisTitle(<span class="hljs-string">&quot;姓名&quot;</span>);<span class="hljs-comment">//数据的标题</span><br>chartBuilder.build(chart);<br></code></pre></td></tr></table></figure><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><ul><li>1、创建Chart，准备数据，使用Builder构建数据，然后build到chart上。</li><li>2、演示：创建一个excel表，填充数据，保存到excel中。</li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240819/%E6%95%88%E6%9E%9C.8z6g8vukeo.webp" alt="效果"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">XSSFWorkbook</span> <span class="hljs-variable">workbook</span> <span class="hljs-operator">=</span>ExcelHelpers.createXLSX();<span class="hljs-comment">//创建xlsx</span><br><span class="hljs-type">XSSFSheet</span> <span class="hljs-variable">sheet</span> <span class="hljs-operator">=</span> workbook.createSheet();<span class="hljs-comment">//创建页签</span><br><span class="hljs-type">XSSFChart</span> <span class="hljs-variable">chart</span> <span class="hljs-operator">=</span> ExcelHelpers.createChart(sheet, <span class="hljs-number">0</span>, <span class="hljs-number">5</span>, <span class="hljs-number">7</span>, <span class="hljs-number">26</span>);<span class="hljs-comment">//在sheet上创建一个图表对象，显示到左上角坐标为(coll，row)、右下角坐标为(col2，row2)这个位置</span><br>chart.setTitleText(<span class="hljs-string">&quot;销售榜&quot;</span>);<br>chart.getOrAddLegend().setPosition(LegendPosition.LEFT);<br><br>ChartFromArrayBuilder&lt;Double&gt; chartBuilder = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ChartFromArrayBuilder</span>&lt;&gt;(ChartTypes.LINE);<span class="hljs-comment">//设置显示的图像:折线图  3D图等</span><br>String[] monthNames = <span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>[]&#123;<span class="hljs-string">&quot;语文&quot;</span>,<span class="hljs-string">&quot;数学&quot;</span>,<span class="hljs-string">&quot;英语&quot;</span>&#125;;<br>Double[] sales1 =&#123;<span class="hljs-number">99.0</span>,<span class="hljs-number">99.8</span>,<span class="hljs-number">66.6</span>&#125;;<br>Double[] sales2 =&#123;<span class="hljs-number">99.8</span>,<span class="hljs-number">99.9</span>,<span class="hljs-number">88.8</span>&#125;;<br>chartBuilder.setCategoryNames(monthNames);<span class="hljs-comment">//横坐标用哪个数组</span><br>chartBuilder.putValues(<span class="hljs-string">&quot;张三&quot;</span>,sales1);<br>chartBuilder.putValues(<span class="hljs-string">&quot;李四&quot;</span>,sales2);<br>chartBuilder.setCategoryAxisTitle(<span class="hljs-string">&quot;科目&quot;</span>);<span class="hljs-comment">//分类的标题</span><br>chartBuilder.setValueAxisTitle(<span class="hljs-string">&quot;姓名&quot;</span>);<span class="hljs-comment">//数据的标题</span><br>chartBuilder.build(chart);<br><br>ExcelHelpers.saveToFile(workbook,<span class="hljs-string">&quot;D:/JavaTest1/1.xlsx&quot;</span>);<span class="hljs-comment">//保存文件</span><br>ExcelHelpers.close(workbook);<span class="hljs-comment">//关闭文件</span><br>DesktopHelpers.openFile(<span class="hljs-string">&quot;D:/JavaTest1/1.xlsx&quot;</span>);<span class="hljs-comment">//用默认方式去打开文件</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part4</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P4-11 案例：统计视频播放量</title>
    <link href="/2024/08/19/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part4-%E7%AC%94%E8%AE%B0/P4-11%20%E6%A1%88%E4%BE%8B%EF%BC%9A%E7%BB%9F%E8%AE%A1%E8%A7%86%E9%A2%91%E6%92%AD%E6%94%BE%E9%87%8F/"/>
    <url>/2024/08/19/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part4-%E7%AC%94%E8%AE%B0/P4-11%20%E6%A1%88%E4%BE%8B%EF%BC%9A%E7%BB%9F%E8%AE%A1%E8%A7%86%E9%A2%91%E6%92%AD%E6%94%BE%E9%87%8F/</url>
    
    <content type="html"><![CDATA[<h1 id="案例：统计视频播放量"><a href="#案例：统计视频播放量" class="headerlink" title="案例：统计视频播放量"></a>案例：统计视频播放量</h1><hr><h2 id="需求说明"><a href="#需求说明" class="headerlink" title="需求说明"></a>需求说明</h2><ul><li>微博上面的专辑视频是没有总播放量的，所以现在需要统计出视频的总播放量</li></ul><p>思路</p><ul><li>1、读取txt文件</li><li>2、然后遍历每一行，如果每一行中含有“次观看”的话 就提取出来数字</li><li>3、然后把数字相加，得出所有视频的总播放量</li></ul><p>代码分析</p><ul><li>1、我用的是把后面多余的部分替换成空字符串，然后转换成int，在相加<ul><li>杨中科老师用的是 substring去截取，然后转换，在相加</li></ul></li><li>2、变量名称应该换成line</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * - 1、读取txt文件</span><br><span class="hljs-comment"> * - 2、然后遍历每一行，如果每一行中含有“次观看”的话 就提取出来数字</span><br><span class="hljs-comment"> * - 3、然后把数字相加，得出所有视频的总播放量</span><br><span class="hljs-comment"> */</span><br>String[] txtFiles = IOHelpers.readAllLines(<span class="hljs-string">&quot;D:/JavaTest1/视频量/Test.txt&quot;</span>);<br><span class="hljs-type">int</span> sum=<span class="hljs-number">0</span>;<span class="hljs-comment">//总播放量</span><br><span class="hljs-keyword">for</span> (String txtFile:txtFiles)<br>&#123;<br>    <span class="hljs-type">int</span> txtNumber=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">if</span> (txtFile.contains(<span class="hljs-string">&quot;次观看&quot;</span>))<span class="hljs-comment">//判断字符串中是否含有“次观看”</span><br>    &#123;<br>        <span class="hljs-keyword">if</span> (txtFile.contains(<span class="hljs-string">&quot;万&quot;</span>))<br>        &#123;<br>            txtNumber = Integer.valueOf(txtFile.replace(<span class="hljs-string">&quot;万次观看&quot;</span>,<span class="hljs-string">&quot;0000&quot;</span>));<br>            System.out.println(txtNumber);<br>            sum= sum+txtNumber;<br>        &#125;<br>        <span class="hljs-keyword">else</span><br>        &#123;<br>            txtNumber = Integer.valueOf(txtFile.replace(<span class="hljs-string">&quot;次观看&quot;</span>,<span class="hljs-string">&quot;&quot;</span>));<span class="hljs-comment">//String转换成int</span><br>            System.out.println(txtNumber);<br>            sum= sum+txtNumber;<br>        &#125;<br><br>    &#125;<br>&#125;<br>System.out.println(<span class="hljs-string">&quot;视频总播放为：&quot;</span>+sum);<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">int</span> <span class="hljs-variable">indexofci</span> <span class="hljs-operator">=</span>line.indexOf(<span class="hljs-string">&quot;次观看&quot;</span>);<span class="hljs-comment">// 找到次观看的位置</span><br><span class="hljs-type">String</span> <span class="hljs-variable">s</span> <span class="hljs-operator">=</span>line.substring(<span class="hljs-number">0</span>,indexofci);<span class="hljs-comment">//从0提取到次观看</span><br><span class="hljs-type">int</span> <span class="hljs-variable">count</span> <span class="hljs-operator">=</span>Integer.valueOf(s);<span class="hljs-comment">//转换成int</span><br>sum = sum+count;<span class="hljs-comment">//相加</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part4</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P4-10 案例：Excel文件合并</title>
    <link href="/2024/08/18/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part4-%E7%AC%94%E8%AE%B0/P4-10%20%E6%A1%88%E4%BE%8B%EF%BC%9AExcel%E6%96%87%E4%BB%B6%E5%90%88%E5%B9%B6/"/>
    <url>/2024/08/18/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part4-%E7%AC%94%E8%AE%B0/P4-10%20%E6%A1%88%E4%BE%8B%EF%BC%9AExcel%E6%96%87%E4%BB%B6%E5%90%88%E5%B9%B6/</url>
    
    <content type="html"><![CDATA[<h1 id="案例：Excel文件合并"><a href="#案例：Excel文件合并" class="headerlink" title="案例：Excel文件合并"></a>案例：Excel文件合并</h1><hr><h2 id="需求说明"><a href="#需求说明" class="headerlink" title="需求说明"></a>需求说明</h2><ul><li>有多个部门的人员信息表，每个部门一个Excel文件，要求合并成一个Excel文件。</li><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240818/%E9%9C%80%E6%B1%82%E8%AF%B4%E6%98%8E1.2veo5dh1zc.webp" alt="需求说明1"></li></ul><p>思路</p><blockquote><p>读取这个文件下所有xlsx的表<br>然后一个表一个表的复制粘贴到一个新表<br>然后保存</p></blockquote><p>分析自己写的时候不足的地方</p><ul><li>1、变量名最好都转成英文，这样更加规范</li><li>2、写这块的code的时候，没想象到新建一个xlsx文件，需要默认新建一个row内容。<ul><li>一开始自己的想法是 直接在0,0之前插入部门。 为什么会卡在这呢？ 因为我没想到新建的文件还需要再创建 姓名&#x2F;电话&#x2F;性别。所以掉进了误区</li></ul></li><li>3、新建的xlsx文件的保存动作和关闭动作，要在for循环都完成后再进行。需要想到for循环之外</li><li>4、<strong>先把自己会的代码写出来，不会的再去查询搜索去进行定点突破，没必要非得想全面了，在去执行。</strong><ul><li>别提前设想结果。 <strong>先落地，在优化</strong></li><li>一有想法<strong>立马具象化</strong></li><li>这就是超级执行力~entj与intj</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">XSSFWorkbook</span> <span class="hljs-variable">newworkbook</span> <span class="hljs-operator">=</span>ExcelHelpers.createXLSX();<span class="hljs-comment">//创建xlsx</span><br>    <span class="hljs-type">XSSFSheet</span> <span class="hljs-variable">newsheet</span> <span class="hljs-operator">=</span> newworkbook.createSheet();<span class="hljs-comment">//创建页签</span><br>    ExcelHelpers.setCellValue(newsheet,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-string">&quot;部们&quot;</span>);<span class="hljs-comment">//第0列增加内容  没有这个格就会自动创建</span><br>    ExcelHelpers.setCellValue(newsheet,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-string">&quot;姓名&quot;</span>);<br>    ExcelHelpers.setCellValue(newsheet,<span class="hljs-number">0</span>,<span class="hljs-number">2</span>,<span class="hljs-string">&quot;电话&quot;</span>);<br>    ExcelHelpers.setCellValue(newsheet,<span class="hljs-number">0</span>,<span class="hljs-number">3</span>,<span class="hljs-string">&quot;性别&quot;</span>);<br>    <span class="hljs-type">int</span> <span class="hljs-variable">newrow</span> <span class="hljs-operator">=</span><span class="hljs-number">1</span>;<br>    String[] yFile = IOHelpers.getFilesRecursively(<span class="hljs-string">&quot;D:/JavaTest/10&quot;</span>, <span class="hljs-string">&quot;xlsx&quot;</span>);<span class="hljs-comment">//先找出xlsx文件</span><br>    <span class="hljs-keyword">for</span> (String file :yFile)<br>    &#123;<br>        <span class="hljs-type">Workbook</span> <span class="hljs-variable">workbook</span> <span class="hljs-operator">=</span> ExcelHelpers.openFile(file);<span class="hljs-comment">//读取xlsx文件</span><br>        <span class="hljs-type">int</span> <span class="hljs-variable">sheetIndex</span> <span class="hljs-operator">=</span><span class="hljs-number">0</span>;<span class="hljs-comment">//避免魔法值</span><br>        <span class="hljs-type">Sheet</span> <span class="hljs-variable">sheet</span> <span class="hljs-operator">=</span> workbook.getSheetAt(sheetIndex);<br>        <span class="hljs-type">String</span> <span class="hljs-variable">fileName</span> <span class="hljs-operator">=</span> IOHelpers.getFileNameWithoutExtension(file);<span class="hljs-comment">//获得xlsx名称，去除后缀名</span><br>        <span class="hljs-type">int</span> rowNumber=sheet.getLastRowNum();<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">rowIndex</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span>;rowIndex&lt;=rowNumber;rowIndex++)<span class="hljs-comment">//跳过表头</span><br>        &#123;<br>            <span class="hljs-comment">//获取对应的数据</span><br>            String 姓名 =ExcelHelpers.getCellStringValue(sheet,rowIndex,<span class="hljs-number">0</span>);<br>            String 电话=ExcelHelpers.getCellStringValue(sheet,rowIndex,<span class="hljs-number">1</span>);<br>            String 性别=ExcelHelpers.getCellStringValue(sheet,rowIndex,<span class="hljs-number">2</span>);<br><br>            <span class="hljs-comment">//然后插入到新的一列去添加</span><br>            ExcelHelpers.setCellValue(newsheet,newrow,<span class="hljs-number">0</span>,fileName);<br>            ExcelHelpers.setCellValue(newsheet,newrow,<span class="hljs-number">1</span>,姓名);<br>            ExcelHelpers.setCellValue(newsheet,newrow,<span class="hljs-number">2</span>,电话);<br>            ExcelHelpers.setCellValue(newsheet,newrow,<span class="hljs-number">3</span>,性别);<br>            newrow++;<span class="hljs-comment">//自增，防止在同一行重复覆盖数据</span><br>        &#125;<br><br>        ExcelHelpers.close(workbook);<br><br>    &#125;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 这两句为什么要写到下面呢？</span><br><span class="hljs-comment">     * 因为只有等这个for循环都写完了才能保存，并且关闭</span><br><span class="hljs-comment">     */</span><br>    ExcelHelpers.saveToFile(newworkbook,<span class="hljs-string">&quot;D:/JavaTest1/Excel Test1/1.xlsx&quot;</span>);<span class="hljs-comment">//保存到新文件</span><br>    ExcelHelpers.close(newworkbook);<span class="hljs-comment">//关闭xlsx</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part4</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P4-9 案例：根据Excel工资表生成工资条</title>
    <link href="/2024/08/16/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part4-%E7%AC%94%E8%AE%B0/P4-9%20%E6%A1%88%E4%BE%8B%EF%BC%9A%E6%A0%B9%E6%8D%AEExcel%E5%B7%A5%E8%B5%84%E8%A1%A8%E7%94%9F%E6%88%90%E5%B7%A5%E8%B5%84%E6%9D%A1/"/>
    <url>/2024/08/16/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part4-%E7%AC%94%E8%AE%B0/P4-9%20%E6%A1%88%E4%BE%8B%EF%BC%9A%E6%A0%B9%E6%8D%AEExcel%E5%B7%A5%E8%B5%84%E8%A1%A8%E7%94%9F%E6%88%90%E5%B7%A5%E8%B5%84%E6%9D%A1/</url>
    
    <content type="html"><![CDATA[<h1 id="案例：根据Excel工资表生成工资条"><a href="#案例：根据Excel工资表生成工资条" class="headerlink" title="案例：根据Excel工资表生成工资条"></a>案例：根据Excel工资表生成工资条</h1><hr><h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><ul><li>1、一个Excel工资文件，每个Sheet是一个部门，每个部门都有员工的姓名、编号、基本工资、考勤扣款、奖金，然后生成每个员工一个工资条word文件，文件名为【部门名+姓名+员工编号】</li><li>2、允许用户选择文字文件以及保存文件夹</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//自己第一次没看杨中科大佬写之前，自己琢磨的</span><br><span class="hljs-type">Workbook</span> <span class="hljs-variable">workbook</span> <span class="hljs-operator">=</span> ExcelHelpers.openFile(<span class="hljs-string">&quot;D:/JavaTest1/WordTest2/2024年8月工资表.xlsx&quot;</span>);<span class="hljs-comment">//获取对应文件</span><br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> sheetIndex=<span class="hljs-number">0</span>;sheetIndex&lt;workbook.getNumberOfSheets();sheetIndex++) <span class="hljs-comment">//循环读取页签中的内容 sheet</span><br>    &#123;<br>        <span class="hljs-type">Sheet</span> <span class="hljs-variable">sheet</span> <span class="hljs-operator">=</span> workbook.getSheetAt(sheetIndex);<span class="hljs-comment">//获取第x页签</span><br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">rowIndex</span> <span class="hljs-operator">=</span> sheet.getFirstRowNum();rowIndex&lt;=sheet.getLastRowNum();rowIndex++)<span class="hljs-comment">//循环读取有效的第一行到有效的最后一行</span><br>        &#123;<br>            <span class="hljs-type">Row</span> <span class="hljs-variable">row</span> <span class="hljs-operator">=</span> sheet.getRow(rowIndex+<span class="hljs-number">1</span>);<span class="hljs-comment">//获取第2行，忽略姓名，工号。基本工资。奖金。考勤</span><br>            <span class="hljs-keyword">if</span> (row==<span class="hljs-literal">null</span>)<br>            &#123;<br>                <span class="hljs-keyword">continue</span>;<br>            &#125;<br>            LinkedList&lt;String&gt; Lists =<span class="hljs-keyword">new</span> <span class="hljs-title class_">LinkedList</span>&lt;&gt;();<br>            <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">cellIndex</span> <span class="hljs-operator">=</span> row.getFirstCellNum(); cellIndex&lt;=row.getLastCellNum();cellIndex++)<br>            &#123;<br>                <span class="hljs-type">Cell</span> <span class="hljs-variable">cell</span> <span class="hljs-operator">=</span> row.getCell(cellIndex);<span class="hljs-comment">//获取第x格</span><br>                <span class="hljs-keyword">if</span> (cell==<span class="hljs-literal">null</span>)<br>                &#123;<br>                    <span class="hljs-keyword">continue</span>;<br>                &#125;<br>                String value= ExcelHelpers.getCellStringValue(cell);<span class="hljs-comment">//推荐用这个，封装的这个傻瓜化，自带类型转换</span><br>                <span class="hljs-keyword">if</span> (value==<span class="hljs-literal">null</span>)<br>                &#123;<br>                    <span class="hljs-keyword">continue</span>;<br>                &#125;<br>                Lists.add(value);<br>            &#125;<br>                LocalDate d1=LocalDate.now();<span class="hljs-comment">//获取当前日期 年/月/日</span><br>                String yFile=<span class="hljs-string">&quot;D:/JavaTest1/WordTest2/工资条模板.docx&quot;</span>;<br>                HashMap&lt;String,Object&gt; data =<span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>&lt;&gt;();<br>                String 员工姓名=Lists.get(<span class="hljs-number">0</span>);<br>                String 工号=Lists.get(<span class="hljs-number">1</span>);<br>                <span class="hljs-type">double</span> 基本工资=Double.parseDouble(Lists.get(<span class="hljs-number">2</span>));<br>                <span class="hljs-type">double</span> 奖金=Double.parseDouble(Lists.get(<span class="hljs-number">3</span>));<br>                <span class="hljs-type">double</span> 考勤罚款=Double.parseDouble(Lists.get(<span class="hljs-number">4</span>));<br>                <span class="hljs-type">double</span> 实发工资=基本工资+奖金+考勤罚款;<br><br><br>                <span class="hljs-comment">/*System.out.println(员工姓名);</span><br><span class="hljs-comment">                System.out.println(工号);</span><br><span class="hljs-comment">                System.out.println(基本工资);</span><br><span class="hljs-comment">                System.out.println(奖金);</span><br><span class="hljs-comment">                System.out.println(考勤罚款);</span><br><span class="hljs-comment">                System.out.println(实发工资);</span><br><span class="hljs-comment">                System.out.println(&quot;一个员工完成&quot;);*/</span><br><br>                data.put(<span class="hljs-string">&quot;&#123;员工姓名&#125;&quot;</span>,员工姓名);<br>                data.put(<span class="hljs-string">&quot;&#123;工号&#125;&quot;</span>,工号);<br>                data.put(<span class="hljs-string">&quot;&#123;基本工资&#125;&quot;</span>,基本工资);<br>                data.put(<span class="hljs-string">&quot;&#123;奖金&#125;&quot;</span>,奖金);<br>                data.put(<span class="hljs-string">&quot;&#123;考勤罚款&#125;&quot;</span>,考勤罚款);<br>                data.put(<span class="hljs-string">&quot;&#123;实发工资&#125;&quot;</span>,实发工资);<br>                data.put(<span class="hljs-string">&quot;&#123;部门&#125;&quot;</span>,sheet.getSheetName());<br>                data.put(<span class="hljs-string">&quot;&#123;日期&#125;&quot;</span>,d1.toString());<br>                WordTemplateRenderer.render(yFile, data,<span class="hljs-string">&quot;D:/JavaTest1/WordTest2/&quot;</span>+sheet.getSheetName()+员工姓名+工号+<span class="hljs-string">&quot;.docx&quot;</span>);<br>        &#125;<br><br>    &#125;<br>    ExcelHelpers.close(workbook);<br></code></pre></td></tr></table></figure><p>分析不足</p><ul><li>1、多写了一层cell循环，可以用ExcelHelpers.getCellStringValue()这个方法直接取对应的值</li><li>2、int cellIndex &#x3D; row.getFirstCellNum()  for循环中的条件，最好在外面用变量命名后在使用，要不然浪费性能</li><li>3、LinkedList<String> Lists &#x3D;new LinkedList&lt;&gt;(); 这个可以去掉</li><li>4、rowIndex+1  可以在for循环的条件中是限制  比如：int i &#x3D;1；</li></ul><h3 id="完善后"><a href="#完善后" class="headerlink" title="完善后"></a>完善后</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs java">String yFile=<span class="hljs-string">&quot;D:/JavaTest1/WordTest2/工资条模板.docx&quot;</span>;<br><span class="hljs-type">Workbook</span> <span class="hljs-variable">workbook</span> <span class="hljs-operator">=</span> ExcelHelpers.openFile(<span class="hljs-string">&quot;D:/JavaTest1/WordTest2/2024年8月工资表.xlsx&quot;</span>);<span class="hljs-comment">//获取对应文件</span><br><span class="hljs-type">int</span> <span class="hljs-variable">sheetmax</span> <span class="hljs-operator">=</span> workbook.getNumberOfSheets();<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> sheetIndex=<span class="hljs-number">0</span>;sheetIndex&lt;sheetmax;sheetIndex++) <span class="hljs-comment">//循环读取页签中的内容 sheet</span><br>&#123;<br>    <span class="hljs-type">Sheet</span> <span class="hljs-variable">sheet</span> <span class="hljs-operator">=</span> workbook.getSheetAt(sheetIndex);<span class="hljs-comment">//获取第x页签</span><br>    String 部门=sheet.getSheetName();<br>    <span class="hljs-type">int</span> rowNumber=sheet.getLastRowNum();<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">rowIndex</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span>;rowIndex&lt;=rowNumber;rowIndex++)<span class="hljs-comment">//跳过表头</span><br>    &#123;<br>        String 员工姓名=ExcelHelpers.getCellStringValue(sheet,rowIndex,<span class="hljs-number">0</span>);<br>        String 工号=ExcelHelpers.getCellStringValue(sheet,rowIndex,<span class="hljs-number">1</span>);<br>        <span class="hljs-type">double</span> 基本工资=ExcelHelpers.getCellDoubleValue(sheet,rowIndex,<span class="hljs-number">2</span>);<br>        <span class="hljs-type">double</span> 奖金=ExcelHelpers.getCellDoubleValue(sheet,rowIndex,<span class="hljs-number">3</span>);<br>        <span class="hljs-type">double</span> 考勤罚款=ExcelHelpers.getCellDoubleValue(sheet,rowIndex,<span class="hljs-number">4</span>);<br>        <span class="hljs-type">double</span> 实发工资=基本工资+奖金+考勤罚款;<br><br>        HashMap&lt;String,Object&gt; data =<span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>&lt;&gt;();<br>        data.put(<span class="hljs-string">&quot;&#123;员工姓名&#125;&quot;</span>,员工姓名);<br>        data.put(<span class="hljs-string">&quot;&#123;工号&#125;&quot;</span>,工号);<br>        data.put(<span class="hljs-string">&quot;&#123;基本工资&#125;&quot;</span>,基本工资);<br>        data.put(<span class="hljs-string">&quot;&#123;奖金&#125;&quot;</span>,奖金);<br>        data.put(<span class="hljs-string">&quot;&#123;考勤罚款&#125;&quot;</span>,考勤罚款);<br>        data.put(<span class="hljs-string">&quot;&#123;实发工资&#125;&quot;</span>,实发工资);<br>        data.put(<span class="hljs-string">&quot;&#123;部门&#125;&quot;</span>,部门);<br>        data.put(<span class="hljs-string">&quot;&#123;日期&#125;&quot;</span>,LocalDate.now());<span class="hljs-comment">//获取当前日期 年/月/日</span><br>        String newFile=<span class="hljs-string">&quot;D:/JavaTest1/WordTest2/&quot;</span>+部门+<span class="hljs-string">&quot;-&quot;</span>+员工姓名+<span class="hljs-string">&quot;-&quot;</span>+工号+<span class="hljs-string">&quot;.docx&quot;</span>;<br>        WordTemplateRenderer.render(yFile, data,newFile);<br>    &#125;<br>&#125;<br>ExcelHelpers.close(workbook);<br></code></pre></td></tr></table></figure><hr><h3 id="在此基础上增加功能"><a href="#在此基础上增加功能" class="headerlink" title="在此基础上增加功能"></a>在此基础上增加功能</h3><ul><li>允许用户选择文字文件以及保存文件夹<ul><li>添加了两个窗口，让用户自己选择，但是模板是我内置的。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs java">String yFile=<span class="hljs-string">&quot;D:/JavaTest1/WordTest2/工资条模板.docx&quot;</span>;<br><span class="hljs-type">String</span> <span class="hljs-variable">xlsxFile</span> <span class="hljs-operator">=</span>GUI.fileOpenBox(<span class="hljs-string">&quot;请选择工资表&quot;</span>,<span class="hljs-string">&quot;xlsx&quot;</span>);<span class="hljs-comment">//选择xlsx文件</span><br><span class="hljs-type">String</span> <span class="hljs-variable">fileName</span> <span class="hljs-operator">=</span> GUI.dirOpenBox(<span class="hljs-string">&quot;请选择要保存到的文件夹&quot;</span>).replace(<span class="hljs-string">&quot;\\&quot;</span>,<span class="hljs-string">&quot;/&quot;</span>);<span class="hljs-comment">//获取文件夹路径,然后把\\都换成/ 来兼容其他系统</span><br><span class="hljs-type">Workbook</span> <span class="hljs-variable">workbook</span> <span class="hljs-operator">=</span> ExcelHelpers.openFile(xlsxFile);<span class="hljs-comment">//获取对应文件</span><br><span class="hljs-type">int</span> <span class="hljs-variable">sheetmax</span> <span class="hljs-operator">=</span> workbook.getNumberOfSheets();<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> sheetIndex=<span class="hljs-number">0</span>;sheetIndex&lt;sheetmax;sheetIndex++) <span class="hljs-comment">//循环读取页签中的内容 sheet</span><br>&#123;<br>    <span class="hljs-type">Sheet</span> <span class="hljs-variable">sheet</span> <span class="hljs-operator">=</span> workbook.getSheetAt(sheetIndex);<span class="hljs-comment">//获取第x页签</span><br>    String 部门=sheet.getSheetName();<br>    <span class="hljs-type">int</span> rowNumber=sheet.getLastRowNum();<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">rowIndex</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span>;rowIndex&lt;=rowNumber;rowIndex++)<span class="hljs-comment">//跳过表头</span><br>    &#123;<br>        String 员工姓名=ExcelHelpers.getCellStringValue(sheet,rowIndex,<span class="hljs-number">0</span>);<br>        String 工号=ExcelHelpers.getCellStringValue(sheet,rowIndex,<span class="hljs-number">1</span>);<br>        <span class="hljs-type">double</span> 基本工资=ExcelHelpers.getCellDoubleValue(sheet,rowIndex,<span class="hljs-number">2</span>);<br>        <span class="hljs-type">double</span> 奖金=ExcelHelpers.getCellDoubleValue(sheet,rowIndex,<span class="hljs-number">3</span>);<br>        <span class="hljs-type">double</span> 考勤罚款=ExcelHelpers.getCellDoubleValue(sheet,rowIndex,<span class="hljs-number">4</span>);<br>        <span class="hljs-type">double</span> 实发工资=基本工资+奖金+考勤罚款;<br><br>        HashMap&lt;String,Object&gt; data =<span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>&lt;&gt;();<br>        data.put(<span class="hljs-string">&quot;&#123;员工姓名&#125;&quot;</span>,员工姓名);<br>        data.put(<span class="hljs-string">&quot;&#123;工号&#125;&quot;</span>,工号);<br>        data.put(<span class="hljs-string">&quot;&#123;基本工资&#125;&quot;</span>,基本工资);<br>        data.put(<span class="hljs-string">&quot;&#123;奖金&#125;&quot;</span>,奖金);<br>        data.put(<span class="hljs-string">&quot;&#123;考勤罚款&#125;&quot;</span>,考勤罚款);<br>        data.put(<span class="hljs-string">&quot;&#123;实发工资&#125;&quot;</span>,实发工资);<br>        data.put(<span class="hljs-string">&quot;&#123;部门&#125;&quot;</span>,部门);<br>        data.put(<span class="hljs-string">&quot;&#123;日期&#125;&quot;</span>,LocalDate.now());<span class="hljs-comment">//获取当前日期 年/月/日</span><br>        <span class="hljs-comment">//System.out.println(fileName);</span><br>        String newFile=fileName+<span class="hljs-string">&quot;/&quot;</span>+部门+<span class="hljs-string">&quot;-&quot;</span>+员工姓名+<span class="hljs-string">&quot;-&quot;</span>+工号+<span class="hljs-string">&quot;.docx&quot;</span>;<br>        WordTemplateRenderer.render(yFile, data,newFile);<br>    &#125;<br>&#125;<br>ExcelHelpers.close(workbook);<br></code></pre></td></tr></table></figure></li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part4</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P4-8 使用Word模板简化文件创建</title>
    <link href="/2024/08/16/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part4-%E7%AC%94%E8%AE%B0/P4-8%20%E4%BD%BF%E7%94%A8Word%E6%A8%A1%E6%9D%BF%E7%AE%80%E5%8C%96%E6%96%87%E4%BB%B6%E5%88%9B%E5%BB%BA/"/>
    <url>/2024/08/16/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part4-%E7%AC%94%E8%AE%B0/P4-8%20%E4%BD%BF%E7%94%A8Word%E6%A8%A1%E6%9D%BF%E7%AE%80%E5%8C%96%E6%96%87%E4%BB%B6%E5%88%9B%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<h1 id="使用Word模板简化文件创建"><a href="#使用Word模板简化文件创建" class="headerlink" title="使用Word模板简化文件创建"></a>使用Word模板简化文件创建</h1><hr><h2 id="Word格式说明"><a href="#Word格式说明" class="headerlink" title="Word格式说明"></a>Word格式说明</h2><ul><li>1、研究WordTemplateRenderer的使用</li><li>2、Word中其实有更专业的“模板”功能，但是对于普通Word用户来讲操作太复杂了。所以这个类使用的普通占位符</li><li>3、演示基本使用</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>String yFile=<span class="hljs-string">&quot;D:/JavaTest1/WordTest1/通知书模板.docx&quot;</span>;<br><span class="hljs-type">String</span> <span class="hljs-variable">newFile</span> <span class="hljs-operator">=</span><span class="hljs-string">&quot;D:/JavaTest1/WordTest1/Test.docx&quot;</span>;<br>HashMap&lt;String,Object&gt; data =<span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>&lt;&gt;();<br>data.put(<span class="hljs-string">&quot;&#123;姓名&#125;&quot;</span>,<span class="hljs-string">&quot;张三&quot;</span>);<br>data.put(<span class="hljs-string">&quot;&#123;专业名称&#125;&quot;</span>,<span class="hljs-string">&quot;飞天学&quot;</span>);<br>data.put(<span class="hljs-string">&quot;[照片]&quot;</span>,<span class="hljs-string">&quot;无敌&quot;</span>);<br>WordTemplateRenderer.render(yFile, data,newFile);<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240816/%E6%88%90%E5%8A%9F.1hs4y3mps5.webp" alt="成功"></p>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part4</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P4-7 案例：PDF转Word</title>
    <link href="/2024/08/16/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part4-%E7%AC%94%E8%AE%B0/P4-7%20%E6%A1%88%E4%BE%8B%EF%BC%9APDF%E8%BD%ACWord/"/>
    <url>/2024/08/16/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part4-%E7%AC%94%E8%AE%B0/P4-7%20%E6%A1%88%E4%BE%8B%EF%BC%9APDF%E8%BD%ACWord/</url>
    
    <content type="html"><![CDATA[<h1 id="案例：PDF转Word"><a href="#案例：PDF转Word" class="headerlink" title="案例：PDF转Word"></a>案例：PDF转Word</h1><hr><h2 id="程序员的工作"><a href="#程序员的工作" class="headerlink" title="程序员的工作"></a>程序员的工作</h2><p>程序员的工作其无非就是把一堆零件，有读写的PDF零件，有读写Word的零件，有读写Excel的零件等等，然后根据不同的项目把这些零件组装起来，按照不同的项目需求进行不同的拼装，从而就能够开发出来千变万化的程序</p><h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><ul><li>1.把一个普通的PDF文件(可能含有图片)转换为Word格式</li></ul><p>思路</p><blockquote><p>1.打开PDF文件<br>2.遍历每一页的文本和图片，写入到Word格式，比如XWPFRun、XWPFParagraph(段落)、XWPFDocument<br>3.然后保存到Word</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br><span class="hljs-type">PDDocument</span> <span class="hljs-variable">PDF</span> <span class="hljs-operator">=</span> PDFHelpers.openFile(<span class="hljs-string">&quot;D:/JavaTest1/PDFTest3/03 1.1 提升信息敏感度的三种方法，成为信息收集的「有心人」.pdf&quot;</span>);<br><span class="hljs-type">XWPFDocument</span> <span class="hljs-variable">docx</span> <span class="hljs-operator">=</span> WordHelpers.createDocxDocument();<span class="hljs-comment">//创建docx文件</span><br><span class="hljs-type">int</span> PDFNumber=PDF.getNumberOfPages();<span class="hljs-comment">//获取pdf多少页</span><br>System.out.println(PDFNumber);<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span><span class="hljs-number">0</span>;i&lt;PDFNumber;i++)<br>&#123;<br>    <span class="hljs-type">PDPage</span> <span class="hljs-variable">page</span> <span class="hljs-operator">=</span> PDF.getPage(i);<span class="hljs-comment">//获取页数</span><br>    String s= parseText(page);<span class="hljs-comment">//提取文本</span><br>    <span class="hljs-type">XWPFRun</span> <span class="hljs-variable">run</span> <span class="hljs-operator">=</span> WordHelpers.createRun(docx, s);<span class="hljs-comment">//文本插入word</span><br>    <span class="hljs-comment">//run.setFontSize(30);</span><br>    <span class="hljs-comment">//run.setItalic(true);</span><br>    List&lt;<span class="hljs-type">byte</span>[]&gt; bytes = PDFHelpers.parseImages(page,<span class="hljs-string">&quot;png&quot;</span>);<span class="hljs-comment">//获取当前页的图片信息</span><br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">byte</span>[] bytes1 :bytes)<br>    &#123;<br>            WordHelpers.addPicture(docx,bytes1);<span class="hljs-comment">//在run里面写入图片</span><br>    &#125;<br>&#125;<br>WordHelpers.saveToFile(docx,<span class="hljs-string">&quot;D:/JavaTest1/PDFTest3/666.docx&quot;</span>);<span class="hljs-comment">//保存docx文件</span><br>WordHelpers.close(docx);<br>PDFHelpers.close(PDF);<span class="hljs-comment">//关闭PDF</span><br>&#125;<br></code></pre></td></tr></table></figure><h3 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h3><ul><li>问题1.String s&#x3D; parseText(page);&#x2F;&#x2F;提取文本   提取文件报错。<ul><li>分析：1.代码和杨中科老师一模一样，但是就是运行出错，</li><li>2.前几天写的代码运行还正常，但今天去运行就报错。</li><li>3.百度上查结果也找不到</li><li>最后我想 前几天和今天哪里有变化，我想起来中间有加过PDFBox的库，然后尝试去掉后，就可以了。</li><li>总结：有可能是封装的库和PDFBox的库冲突了。</li></ul></li><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240816/to%E6%8A%A5%E9%94%991.pf9g4r0eu.webp" alt="to报错1"></li><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240816/%E5%BA%93%E5%86%B2%E7%AA%81.7sn4vqwfyv.webp" alt="库冲突"></li></ul>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part4</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P4-6 Word文件的读写</title>
    <link href="/2024/08/16/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part4-%E7%AC%94%E8%AE%B0/P4-6%20Word%E6%96%87%E4%BB%B6%E7%9A%84%E8%AF%BB%E5%86%99/"/>
    <url>/2024/08/16/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part4-%E7%AC%94%E8%AE%B0/P4-6%20Word%E6%96%87%E4%BB%B6%E7%9A%84%E8%AF%BB%E5%86%99/</url>
    
    <content type="html"><![CDATA[<h1 id="Word文件的读写"><a href="#Word文件的读写" class="headerlink" title="Word文件的读写"></a>Word文件的读写</h1><hr><h2 id="Word格式说明"><a href="#Word格式说明" class="headerlink" title="Word格式说明"></a>Word格式说明</h2><ul><li>1、Word有doc、docx两种格式，推荐使用docx</li><li>2、整个Word文件是一个XWPFDocument，由多给段落(XWPFParagraph)组成，每个XWPFParagraph由多个XWPFRun组成。</li><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240815/Word.45lsrkwiw.webp" alt="Word"><ul><li>字体，颜色，背景；只要变了样式，就会开启一个新的run，不变样式，那整体都是一个run</li></ul></li></ul><h3 id="WordHelpers使用"><a href="#WordHelpers使用" class="headerlink" title="WordHelpers使用"></a>WordHelpers使用</h3><ul><li>1、看文档研究WordHelpers。它是对poi库的简单封装，更多功能看poi的文档</li><li>2、案例：调用poi的方法完成Word文件提取文本以及图片的功能。类似PDF的那个</li><li>3、练习：实现类似PDF的那个词频分析</li></ul><h3 id="案例：调用poi的方法完成Word文件提取文本以及图片的功能"><a href="#案例：调用poi的方法完成Word文件提取文本以及图片的功能" class="headerlink" title="案例：调用poi的方法完成Word文件提取文本以及图片的功能"></a>案例：调用poi的方法完成Word文件提取文本以及图片的功能</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">XWPFDocument</span> <span class="hljs-variable">docx</span> <span class="hljs-operator">=</span> WordHelpers.openDocx(<span class="hljs-string">&quot;D:/JavaTest1/ExcelTest2/1.docx&quot;</span>);<br>String str=  WordHelpers.readAllText(<span class="hljs-string">&quot;D:/JavaTest1/ExcelTest2/1.docx&quot;</span>);<br>System.out.println(str);<br><span class="hljs-keyword">for</span> (XWPFPictureData docxs : docx.getAllPictures())<br>&#123;<br>    <span class="hljs-type">byte</span>[] date = docxs.getData();<br>    IOHelpers.writeAllBytes(<span class="hljs-string">&quot;D:/JavaTest1/ExcelTest2/pic/&quot;</span>+docxs.getFileName(),date);<span class="hljs-comment">//保存到本地</span><br>&#125;<br>WordHelpers.clone(docx);<span class="hljs-comment">//关闭docx</span><br></code></pre></td></tr></table></figure><h3 id="练习：实现类似PDF的那个词频分析"><a href="#练习：实现类似PDF的那个词频分析" class="headerlink" title="练习：实现类似PDF的那个词频分析"></a>练习：实现类似PDF的那个词频分析</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        LinkedHashMap&lt;String,Integer&gt; map =<span class="hljs-keyword">new</span> <span class="hljs-title class_">LinkedHashMap</span>&lt;&gt;();<br>        String[] docxFiles= IOHelpers.getFilesRecursively(<span class="hljs-string">&quot;D:/JavaTest1/ExcelTest2&quot;</span>,<span class="hljs-string">&quot;docx&quot;</span>);<span class="hljs-comment">//获取文件夹下所有的pdf文件</span><br>        <span class="hljs-keyword">for</span> (String docxFile:docxFiles)<br>        &#123;<br>           <span class="hljs-type">String</span> <span class="hljs-variable">str</span> <span class="hljs-operator">=</span> WordHelpers.readAllText(docxFile);<br>           String[] texts = str.toLowerCase().split(<span class="hljs-string">&quot;\\s|\\.|\\,|\\:|\\!|\\?|;|\\(|\\)&quot;</span>);<span class="hljs-comment">//符号转成小写并分割</span><br>            <span class="hljs-keyword">for</span> (String text :texts)<br>            &#123;<br>                <span class="hljs-keyword">if</span> (!isEnglishWord(text))<span class="hljs-comment">//如果这个word不是英语单词，则跳过</span><br>                &#123;<br>                    <span class="hljs-keyword">continue</span>;<span class="hljs-comment">//处理下一个单词</span><br>                &#125;<br><br>                <span class="hljs-keyword">if</span> (text.equals(<span class="hljs-string">&quot;&quot;</span>))<br>                &#123;<br>                    <span class="hljs-keyword">continue</span>;<br>                &#125;<br>                <span class="hljs-type">Integer</span> <span class="hljs-variable">frqe</span> <span class="hljs-operator">=</span>map.get(text);<span class="hljs-comment">//获得当前的词频</span><br>                <span class="hljs-keyword">if</span> (frqe==<span class="hljs-literal">null</span>)<span class="hljs-comment">//如果为null就证明不存在</span><br>                &#123;<br>                    map.put(text,<span class="hljs-number">1</span>);<br>                &#125;<br>                <span class="hljs-keyword">else</span><br>                &#123;<br>                    map.put(text,frqe+<span class="hljs-number">1</span>);<span class="hljs-comment">//存在就词频+1</span><br><br>                &#125;<br><br><br>            &#125;<br>            <span class="hljs-type">String</span> <span class="hljs-variable">outputString</span> <span class="hljs-operator">=</span><span class="hljs-string">&quot;&quot;</span>;<br>            <span class="hljs-keyword">for</span> (String word:map.keySet())<span class="hljs-comment">//keyset()是map中所有key的集合</span><br>            &#123;<br>                <span class="hljs-type">int</span> <span class="hljs-variable">freq</span> <span class="hljs-operator">=</span>map.get(word);<br>                outputString =outputString+word+<span class="hljs-string">&quot;=&quot;</span>+freq+<span class="hljs-string">&quot;\r\n&quot;</span>;<br><br>            &#125;<br>            <span class="hljs-comment">//System.out.println(outputString);</span><br>            IOHelpers.writeAllText(<span class="hljs-string">&quot;D:/JavaTest1/ExcelTest2/1.txt&quot;</span>,outputString);<br><br><br>        &#125;<br><br>    &#125;<br>    <span class="hljs-comment">//判断字符串中是否是一个英文单词(全部由英文字母组成)</span><br>    <span class="hljs-keyword">public</span>  <span class="hljs-keyword">static</span>  <span class="hljs-type">boolean</span> <span class="hljs-title function_">isEnglishWord</span><span class="hljs-params">(String s)</span><br>    &#123;<br>        <span class="hljs-type">int</span> numbers=s.length();<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span><span class="hljs-number">0</span>;i&lt;numbers;i++)<br>        &#123;<br>            <span class="hljs-type">char</span> <span class="hljs-variable">ch</span> <span class="hljs-operator">=</span>s.charAt(i);<br>            <span class="hljs-keyword">if</span> (Character.isLowerCase(ch)==<span class="hljs-literal">false</span>)<span class="hljs-comment">//只要碰到一个非字母，函数就返回false</span><br>            &#123;<br>                <span class="hljs-keyword">return</span>  <span class="hljs-literal">false</span>;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span>  <span class="hljs-literal">true</span>;<span class="hljs-comment">//如果运行到这里，就说明每个都是字母</span><br>    &#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part4</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P4-5 Excel多文件的搜索</title>
    <link href="/2024/08/15/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part4-%E7%AC%94%E8%AE%B0/P4-5%20Excel%E5%A4%9A%E6%96%87%E4%BB%B6%E7%9A%84%E6%90%9C%E7%B4%A2/"/>
    <url>/2024/08/15/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part4-%E7%AC%94%E8%AE%B0/P4-5%20Excel%E5%A4%9A%E6%96%87%E4%BB%B6%E7%9A%84%E6%90%9C%E7%B4%A2/</url>
    
    <content type="html"><![CDATA[<h1 id="在多个Excel文件中进行搜索"><a href="#在多个Excel文件中进行搜索" class="headerlink" title="在多个Excel文件中进行搜索"></a>在多个Excel文件中进行搜索</h1><hr><h2 id="需求说明"><a href="#需求说明" class="headerlink" title="需求说明"></a>需求说明</h2><p>公司里有N多个历年的客户缴费数据Excel表格，现在要做一个从“姓名、电话、备注”字段中查找包含特定内容的Excel表的一个功能，输出文件的名字以及找到的内容所在的表格中的位置（哪个Sheet、哪个单元格）</p><p>思路</p><ul><li>先从人的基本操作来分析： 打开一个Excel表格，然后从第一个页签里面的表格开始遍历，遍历到格。 然后在继续下一个Excel表格，找到符合要求的就输出文件名字 和所在表格的位置</li><li>1.找到文件夹下所有的xls、xlsx的文件</li><li>2.打开文件，开始遍历，遍历到符合要求的就输出</li><li>3.直到所有文件都过了一遍</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs java">String[] xlsxFiles = IOHelpers.getFilesRecursively(<span class="hljs-string">&quot;D:/JavaTest1/ExcelTest2&quot;</span>, <span class="hljs-string">&quot;xlsx&quot;</span>);<br><span class="hljs-type">String</span> <span class="hljs-variable">name</span> <span class="hljs-operator">=</span><span class="hljs-string">&quot;任宗鑫&quot;</span>;<br><span class="hljs-keyword">for</span> (String xlsxfile:xlsxFiles)<br>&#123;<br>    <span class="hljs-type">Workbook</span> <span class="hljs-variable">workbook</span> <span class="hljs-operator">=</span> ExcelHelpers.openFile(xlsxfile);<span class="hljs-comment">//获取对应文件</span><br>    <span class="hljs-type">String</span> <span class="hljs-variable">fileName</span> <span class="hljs-operator">=</span> IOHelpers.getFileName(xlsxfile);<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> sheetIndex=<span class="hljs-number">0</span>;sheetIndex&lt;workbook.getNumberOfSheets();sheetIndex++) <span class="hljs-comment">//循环读取页签中的内容 sheet</span><br>    &#123;<br>        <span class="hljs-type">Sheet</span> <span class="hljs-variable">sheet</span> <span class="hljs-operator">=</span> workbook.getSheetAt(sheetIndex);<span class="hljs-comment">//获取第x页签</span><br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">rowIndex</span> <span class="hljs-operator">=</span> sheet.getFirstRowNum();rowIndex&lt;=sheet.getLastRowNum();rowIndex++)<span class="hljs-comment">//循环读取有效的第一行到有效的最后一行</span><br>        &#123;<br>            <span class="hljs-type">Row</span> <span class="hljs-variable">row</span> <span class="hljs-operator">=</span> sheet.getRow(rowIndex);<span class="hljs-comment">//获取第x行</span><br>            <span class="hljs-keyword">if</span> (row==<span class="hljs-literal">null</span>)<br>            &#123;<br>                <span class="hljs-keyword">continue</span>;<br>            &#125;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">cellIndex</span> <span class="hljs-operator">=</span> row.getFirstCellNum(); cellIndex&lt;=row.getLastCellNum();cellIndex++)<br>            &#123;<br>                <span class="hljs-comment">/*if (cellIndex==-1)</span><br><span class="hljs-comment">                &#123;</span><br><span class="hljs-comment">                    continue;</span><br><span class="hljs-comment">                &#125;*/</span><br>                <span class="hljs-type">Cell</span> <span class="hljs-variable">cell</span> <span class="hljs-operator">=</span> row.getCell(cellIndex);<span class="hljs-comment">//获取第x格</span><br>                <span class="hljs-comment">//cell.getStringCellValue() 这个不带类型转换</span><br>                <span class="hljs-keyword">if</span> (cell==<span class="hljs-literal">null</span>)<br>                &#123;<br>                    <span class="hljs-keyword">continue</span>;<br>                &#125;<br>                String value= ExcelHelpers.getCellStringValue(cell);<span class="hljs-comment">//推荐用这个，封装的这个傻瓜化，自带类型转换</span><br>                <span class="hljs-keyword">if</span> (value==<span class="hljs-literal">null</span>)<br>                &#123;<br>                    <span class="hljs-keyword">continue</span>;<br>                &#125;<br>                <span class="hljs-keyword">if</span> (value.contains(name))<span class="hljs-comment">//模糊搜索</span><br>                &#123;<br>                    <span class="hljs-comment">//System.out.println(&quot;文件名称为:&quot;+fileName+&quot;;搜索的内容所在位置为：&quot;+sheet+&quot;页签&quot;+row+&quot;行&quot;+cell+&quot;格&quot;);</span><br>                    <span class="hljs-type">CellReference</span> <span class="hljs-variable">cellRef</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">CellReference</span>(row.getRowNum(), cell.getColumnIndex());<br>                    System.out.println(<span class="hljs-string">&quot;文件名称为: &quot;</span> + fileName + <span class="hljs-string">&quot;; 搜索的内容所在位置为：&quot;</span> +<br>                            <span class="hljs-string">&quot; 页签: &quot;</span> + sheet.getSheetName() + <span class="hljs-string">&quot; 行: &quot;</span>+ (rowIndex + <span class="hljs-number">1</span>)  + <span class="hljs-string">&quot; 格:&quot;</span> + cellRef.formatAsString());<br>                &#125;<br>            &#125;<br>        &#125;<br><br>    &#125;<br>    ExcelHelpers.close(workbook);<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part4</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P4-4 Excel文件的读写</title>
    <link href="/2024/08/15/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part4-%E7%AC%94%E8%AE%B0/P4-4%20Excel%E6%96%87%E4%BB%B6%E7%9A%84%E8%AF%BB%E5%86%99/"/>
    <url>/2024/08/15/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part4-%E7%AC%94%E8%AE%B0/P4-4%20Excel%E6%96%87%E4%BB%B6%E7%9A%84%E8%AF%BB%E5%86%99/</url>
    
    <content type="html"><![CDATA[<h1 id="Excel文件的读写"><a href="#Excel文件的读写" class="headerlink" title="Excel文件的读写"></a>Excel文件的读写</h1><hr><h2 id="Excel格式说明"><a href="#Excel格式说明" class="headerlink" title="Excel格式说明"></a>Excel格式说明</h2><ul><li>1、Excel有xls、xlsx两种格式。推荐使用xlsx<ul><li>xls好像是只能存65535行，是之前的老格式了</li><li>现在默认保存都是xlsx格式，因为没有行数限制，对于编程来说，也能更好的去进行读写</li></ul></li><li>2、整个Excel文件是一个Workbook<ul><li>每个Workbkk由多个Sheet组成，一个Sheet有多Row，一个Row有多个Cell。</li><li>Sheet：页签；Row：行 ；Cell：格</li></ul></li></ul><h2 id="ExcelHelpers使用"><a href="#ExcelHelpers使用" class="headerlink" title="ExcelHelpers使用"></a>ExcelHelpers使用</h2><ul><li>1、看文档研究ExcelHelpers。它是对poi库的简单封装，更多功能看poi的文档</li><li>2、注意的的问题，如果表格中有使用公式的话，编程语言运行期间改变了数据，并且想得到计算后的单元格的值，需要手动调用evaluateAllFormulas();</li><li>3、演示：使用代码读取遍历一个Excel文件</li><li>4、演示：使用代码创建一个Excel文件，填充一些数据，然后保存</li></ul><h3 id="3-演示：使用代码读取遍历一个Excel文件"><a href="#3-演示：使用代码读取遍历一个Excel文件" class="headerlink" title="3.演示：使用代码读取遍历一个Excel文件"></a>3.演示：使用代码读取遍历一个Excel文件</h3><ul><li>获取格的内容，最好用ExcelHelpers.getCellStringValue(cell) 这个方法，因为封装的自带类型转换<ul><li>cell.getStringCellValue() 这个不带类型转换</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">Workbook</span> <span class="hljs-variable">workbook</span> <span class="hljs-operator">=</span> ExcelHelpers.openFile(<span class="hljs-string">&quot;D:/JavaTest1/Excel Test1/test.xlsx&quot;</span>);<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> sheetIndex=<span class="hljs-number">0</span>;sheetIndex&lt;workbook.getNumberOfSheets();sheetIndex++) <span class="hljs-comment">//循环读取页签中的内容 sheet</span><br>&#123;<br>    <span class="hljs-type">Sheet</span> <span class="hljs-variable">sheet</span> <span class="hljs-operator">=</span> workbook.getSheetAt(sheetIndex);<span class="hljs-comment">//获取第x页签</span><br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">rowIndex</span> <span class="hljs-operator">=</span> sheet.getFirstRowNum();rowIndex&lt;=sheet.getLastRowNum();rowIndex++)<span class="hljs-comment">//循环读取有效的第一行到有效的最后一行</span><br>    &#123;<br>        <span class="hljs-type">Row</span> <span class="hljs-variable">row</span> <span class="hljs-operator">=</span> sheet.getRow(rowIndex);<span class="hljs-comment">//获取第x行</span><br>        <span class="hljs-keyword">if</span> (row==<span class="hljs-literal">null</span>)<br>        &#123;<br>            <span class="hljs-keyword">continue</span>;<br>        &#125;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">cellIndex</span> <span class="hljs-operator">=</span> row.getFirstCellNum(); cellIndex&lt;=row.getLastCellNum();cellIndex++)<br>        &#123;<br>            <span class="hljs-type">Cell</span> <span class="hljs-variable">cell</span> <span class="hljs-operator">=</span> row.getCell(cellIndex);<span class="hljs-comment">//获取第x格</span><br>            <span class="hljs-comment">//cell.getStringCellValue() 这个不带类型转换</span><br>            <span class="hljs-keyword">if</span> (cell==<span class="hljs-literal">null</span>)<br>            &#123;<br>                <span class="hljs-keyword">continue</span>;<br>            &#125;<br>            String value= ExcelHelpers.getCellStringValue(cell);<span class="hljs-comment">//推荐用这个，封装的这个傻瓜化，自带类型转换</span><br>            System.out.println(value);<br>        &#125;<br>    &#125;<br><br>&#125;<br>ExcelHelpers.close(workbook);<br></code></pre></td></tr></table></figure><hr><h3 id="4-使用代码创建一个Excel文件，填充一些数据，然后保存"><a href="#4-使用代码创建一个Excel文件，填充一些数据，然后保存" class="headerlink" title="4.使用代码创建一个Excel文件，填充一些数据，然后保存"></a>4.使用代码创建一个Excel文件，填充一些数据，然后保存</h3><ul><li>调试错误<ul><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240815/%E6%8A%A5%E9%94%99%E8%B0%83%E8%AF%95.8dwsgms7yr.webp" alt="报错调试"></li></ul></li><li>查看值<ul><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240815/%E8%B0%83%E8%AF%95%E8%BF%87%E7%A8%8B%E4%B8%AD%E5%8E%BB%E7%9C%8B%E5%AF%B9%E5%BA%94%E7%9A%84%E5%80%BC.9nzpmya79w.webp" alt="调试过程中去看对应的值"></li></ul></li><li>重命名<ul><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240815/%E9%87%8D%E5%91%BD%E5%90%8D.3rb5fzq96r.webp" alt="重命名"></li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">XSSFWorkbook</span> <span class="hljs-variable">workbok</span> <span class="hljs-operator">=</span>ExcelHelpers.createXLSX();<span class="hljs-comment">//创建xlsx</span><br><span class="hljs-type">XSSFSheet</span> <span class="hljs-variable">sheet</span> <span class="hljs-operator">=</span> workbok.createSheet();<span class="hljs-comment">//创建页签</span><br>ExcelHelpers.setCellValue(sheet,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-string">&quot;姓名&quot;</span>);<span class="hljs-comment">//第0列增加内容 没有这个格就会自动创建</span><br>ExcelHelpers.setCellValue(sheet,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-string">&quot;年龄&quot;</span>);<br>ExcelHelpers.setCellValue(sheet,<span class="hljs-number">0</span>,<span class="hljs-number">2</span>,<span class="hljs-string">&quot;手机号&quot;</span>);<br><br>ExcelHelpers.setCellValue(sheet,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-string">&quot;cool&quot;</span>);<br>ExcelHelpers.setCellValue(sheet,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">18</span>);<br>ExcelHelpers.setCellValue(sheet,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-string">&quot;155999999999&quot;</span>);<br><br><br>ExcelHelpers.setCellValue(sheet,<span class="hljs-number">2</span>,<span class="hljs-number">0</span>,<span class="hljs-string">&quot;张三&quot;</span>);<br>ExcelHelpers.setCellValue(sheet,<span class="hljs-number">2</span>,<span class="hljs-number">1</span>,<span class="hljs-number">50</span>);<br>ExcelHelpers.setCellValue(sheet,<span class="hljs-number">2</span>,<span class="hljs-number">2</span>,<span class="hljs-string">&quot;1666666666666&quot;</span>);<br><br>ExcelHelpers.setCellValue(sheet,<span class="hljs-number">3</span>,<span class="hljs-number">0</span>,<span class="hljs-string">&quot;李四&quot;</span>);<br>ExcelHelpers.setCellValue(sheet,<span class="hljs-number">3</span>,<span class="hljs-number">1</span>,<span class="hljs-number">65</span>);<br>ExcelHelpers.setCellValue(sheet,<span class="hljs-number">3</span>,<span class="hljs-number">2</span>,<span class="hljs-string">&quot;18888888888888&quot;</span>);<br>ExcelHelpers.saveToFile(workbok,<span class="hljs-string">&quot;D:/JavaTest1/Excel Test1/1.xlsx&quot;</span>);<span class="hljs-comment">//保存到新文件</span><br>ExcelHelpers.close(workbok);<span class="hljs-comment">//关闭xlsx</span><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part4</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>精读阅读理解精通核心必备词汇-2</title>
    <link href="/2024/08/14/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD/%E7%B2%BE%E8%AF%BB%E9%98%85%E8%AF%BB%E7%90%86%E8%A7%A3%E7%B2%BE%E9%80%9A%E6%A0%B8%E5%BF%83%E5%BF%85%E5%A4%87%E8%AF%8D%E6%B1%87-2/"/>
    <url>/2024/08/14/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD/%E7%B2%BE%E8%AF%BB%E9%98%85%E8%AF%BB%E7%90%86%E8%A7%A3%E7%B2%BE%E9%80%9A%E6%A0%B8%E5%BF%83%E5%BF%85%E5%A4%87%E8%AF%8D%E6%B1%87-2/</url>
    
    <content type="html"><![CDATA[<h1 id="精读阅读理解精通核心必备词汇-2"><a href="#精读阅读理解精通核心必备词汇-2" class="headerlink" title="精读阅读理解精通核心必备词汇-2"></a>精读阅读理解精通核心必备词汇-2</h1><hr><p>串词是手段，理解句子是核心</p><ul><li>理解句子的时候，你可以知道有些单词很重要，有些单词没那么重要。<ul><li>名词和动词是句子的核心：n 和 v</li><li>形容词，因为它是修饰名词的，所以不那么重要；表示程度的副词也是这样<ul><li>形容词只需要先记住是形容好的方面还是坏的方面即可</li></ul></li><li>副词和形容词都是起修饰作用的</li></ul></li></ul><hr><p> a few  &#x3D;some 有些：几个       a few friends  一些朋友，如果没有a了   few friends 几乎没有朋友 ，否定词</p><p> a little &#x3D; some  </p><p> to表示目的</p><hr><p> co-founder   ：co表示共同  found 表示建立，创立  er表示人</p><p> tion 名词的后缀</p><p> a number of : 许多</p><p> prevent &#x3D; stop的高级表达  阻止</p><p> raise 三个意思 1.筹款  2.饲养  3.提高&#x2F;提升</p><p> for a living  以……谋生</p><p> by  通过</p><p> play a part in  扮演 什么样的角色</p><p> 在一个人名后面，  逗号后面的句子都是头衔，不需要知道</p><hr><p> 原文(1)：</p><blockquote><p>Humans may not have landed on Mars(火星)just yet,but that isn’t stopping a European company from devising a plan to send four people to the Red Planet within the next few years.</p></blockquote><ul><li>参考译文：人类可能还没有登陆火星，但这并不能阻止一家欧洲公司制定计划，在未来几年内将四人送上这颗红色星球。</li></ul><hr><p> 原文(2)：</p><blockquote><p>This project, called Mars One, aims to send a small group<br> of people to Mars in 2022 and eventually establish a permanent colony on the planet.</p></blockquote><ul><li>参考译文：这个名为“火星一号”的项目旨在2022年将一小群人送上火星并最终在火星上建立一个永久殖民地。</li></ul><hr><p> 原文(3)：</p><blockquote><p>“Everything we need to go to Mars exists,”said Mars One co-founder Bas Lansdorp in March 2014.</p></blockquote><ul><li>参考译文：“我们去火星需要的一切条件都存在，”“火星一号”联合创始人巴斯 ·兰斯多普于2014年3月说。</li></ul><hr><p> 原文(4)：</p><blockquote><p>“We have the rockets to send people to Mars, the equipment to land on Mars,the robots to prepare the settlement for humans.</p></blockquote><ul><li>参考译文：“我们有火箭送人去火星，有设备登陆火星，有机器人为人类定居做准备。</li></ul><hr><p> 原文(5)：</p><blockquote><p>For a one-way mission, all the technology exists.</p></blockquote><ul><li>参考译文：“对于单程任务，所有的技术都存在。</li></ul><hr><p> 原文(6)：</p><blockquote><p>Yet the four astronauts(宇航员)chosen for the trip will be stuck on Mars-forever.</p></blockquote><ul><li>参考译文:然而，为这次旅行选择的四名宇航员将永远停留在火星上。</li></ul><hr><p> 原文(7)：</p><blockquote><p>And despite Mars One’s thorough planning,there are a number<br>of challenges that may prevent the mission from ever taking place.</p></blockquote><ul><li>参考译文:尽管“火星一号”计划周密，但仍有许多挑战可能阻止任务的进行。</li></ul><hr><p> 原文(8)：</p><blockquote><p>The biggest road block could be the mission’s huge cost ($6 billion)</p></blockquote><ul><li>参考译文:最大的障碍可能是这项任务的巨额成本(60亿美元)</li></ul><hr><p> 原文(9)：</p><blockquote><p>However, Lansdorp is confident that Mars One will be able<br> to fund the project by selling the broadcast rights for the mission and subsequent experiences living on the planet.</p></blockquote><ul><li>参考译文:不过，兰斯多普相信，“火星一号”将能够通过出售播放权以及随后在火星上的生活经历为这个项目提供资金。</li></ul><hr><p> 原文(10)：</p><blockquote><p>Those broadcast rights will also play a part in helping to select the people who will be sent to Mars. Lansdorp said the company will hold a selection process similar to a reality show.</p></blockquote><ul><li>参考译文:那些播放权也将有助于选择被送往火星的人。兰斯多普表示，该公司将举办一个类似真人秀的选拔过程。</li></ul><hr><p> 原文(11)：</p><blockquote><p>Lansdorp is expecting at least l million applications from people around the world.In addition to the cost,several other potential problems could inhibit(阻止)the mission to Mars.</p></blockquote><ul><li>参考译文:兰斯多普预计全球至少有100万人申请。除了成本之外，还有其他几个潜在的问题可能会阻碍火星任务。</li></ul><hr><p> 原文(12)：</p><blockquote><p>“It’s even more challenging to send people there with life support, with food, with air, with all the other things like books,entertainment, means of communication and means of providing for their own resources for a long stay on Mars, ”said Adam Baker,senior lecturer in space engineering at Kingston University in London.</p></blockquote><ul><li>参考译文:伦敦金斯敦大学航天工程高级讲师亚当·贝克说:“给载去那里的人提供生命物需、食物、空气，以及书籍、娱乐设施、通信设备和为他们在火星上长期停留供应自己的资源等都是更具挑战性的。这么做所需要的火箭绝对是巨大的。”</li></ul><hr><p> 原文(13)：</p><blockquote><p>“The sheer size of the rockets you’d need to do this would<br>be absolutely colossal.”</p></blockquote><ul><li>参考译文：“这么做所需要的火箭绝对是巨大的。</li></ul><h2 id="在都串完词后去进行-阅读理解的做题"><a href="#在都串完词后去进行-阅读理解的做题" class="headerlink" title="在都串完词后去进行 阅读理解的做题"></a>在都串完词后去进行 阅读理解的做题</h2>]]></content>
    
    
    <categories>
      
      <category>学位英语</category>
      
      <category>精读阅读理解精通核心必备词汇</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学位英语</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>精读阅读理解精通核心必备词汇-1</title>
    <link href="/2024/08/14/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD/%E7%B2%BE%E8%AF%BB%E9%98%85%E8%AF%BB%E7%90%86%E8%A7%A3%E7%B2%BE%E9%80%9A%E6%A0%B8%E5%BF%83%E5%BF%85%E5%A4%87%E8%AF%8D%E6%B1%87-1/"/>
    <url>/2024/08/14/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD/%E7%B2%BE%E8%AF%BB%E9%98%85%E8%AF%BB%E7%90%86%E8%A7%A3%E7%B2%BE%E9%80%9A%E6%A0%B8%E5%BF%83%E5%BF%85%E5%A4%87%E8%AF%8D%E6%B1%87-1/</url>
    
    <content type="html"><![CDATA[<h1 id="精读阅读理解精通核心必备词汇-1"><a href="#精读阅读理解精通核心必备词汇-1" class="headerlink" title="精读阅读理解精通核心必备词汇-1"></a>精读阅读理解精通核心必备词汇-1</h1><hr><p>串词是手段，理解句子是核心</p><ul><li>理解句子的时候，你可以知道有些单词很重要，有些单词没那么重要。<ul><li>名词和动词是句子的核心：n 和 v</li><li>形容词，因为它是修饰名词的，所以不那么重要；表示程度的副词也是这样<ul><li>形容词只需要先记住是形容好的方面还是坏的方面即可</li></ul></li><li>副词和形容词都是起修饰作用的</li></ul></li></ul><hr><h2 id="for"><a href="#for" class="headerlink" title="for"></a>for</h2><p>for 表示原因</p><blockquote><p>The first year of school in America ,known as kindergarten,usually begins between the ages of five and  six.</p></blockquote><ul><li>A of B：B的A </li><li>known as kindergarten  这一句算是插入语句：两个逗号之间，生硬的插入了一个词组，它的重要性远远不如这个句子的其他成分</li></ul><hr><p>如果在阅读理解中，给了你一个结论，结论后面有一个such as(例如)，一定记住，<strong>such as前面的这句话或者单词就特别的重要</strong></p><p>support：支持；拥护</p><h2 id="while"><a href="#while" class="headerlink" title="while"></a>while</h2><p>while ：在….期间；在….的过程中；……然而（对比两件事物）</p><ul><li>约等于 问~</li><li>A while B 在阅读理解中是有强对比的关系，约等于but</li></ul><h2 id="a和an的用法"><a href="#a和an的用法" class="headerlink" title="a和an的用法"></a>a和an的用法</h2><ul><li>an后面的单词第一个字母一般都是a，e，i，o，u 都是元音</li></ul><h2 id="result-in-from"><a href="#result-in-from" class="headerlink" title="result in&#x2F;from"></a>result in&#x2F;from</h2><p>result in 引起：A result in B  A:吃肉  B:胖   吃肉引起了胖<br>result from 因  B result fron A   A:吃肉  B:胖    胖因为吃肉</p><h2 id="so"><a href="#so" class="headerlink" title="so"></a>so</h2><p>so 后面的句子一般很重要，结论</p><p>so可以表示作为</p><h2 id="ship"><a href="#ship" class="headerlink" title="ship"></a>ship</h2><p>partnership：伙伴关系  加了ship是关系<br>partner:配偶，性伴侣，合伙人</p><h2 id="前缀-后缀"><a href="#前缀-后缀" class="headerlink" title="前缀&#x2F;后缀"></a>前缀&#x2F;后缀</h2><p>unknown— un 否定词的前缀</p><p>dis—  表示否定的前缀</p><p>far from 远离：远离真相 &#x3D; 否定词</p><p>usually—ly代表副词的后缀</p><p>al后缀，一般形容词比较多—moral</p><hr><p>原文(1)：</p><blockquote><p>The first year of school in America,known as kindergarten, usually begins between the ages of five and six.</p></blockquote><ul><li>参考译文:在美国，学校的第一年，称为幼儿园，通常从五至六岁开始。</li></ul><hr><p>原文(2)：</p><blockquote><p>Among rich countries such a late start is very strange.</p></blockquote><ul><li>参考译文:在发达国家中，起步这么晚是很奇怪的</li></ul><hr><p>原文(3)：</p><blockquote><p>President 0bama believes it is an economic and social problem his education secretary goes as far as to say that it is “morally wrong”</p></blockquote><ul><li>参考译文:奥巴马总统认为这是一个经济和社会问题;他的教育部长甚至说这是“道德上的错误”</li></ul><hr><p>原文(4)：</p><blockquote><p>This statement has some support, as it is clear from research into vocabulary that youngsters from poor families enter kindergarten well behind those from rich families–a disadvantage that usually lasts a lifetime.</p></blockquote><ul><li>参考译文:这一说法得到了一些支持，因为对词汇的研究表明，贫困家庭的孩子上幼儿园的时间远远落后于富裕家庭的孩子–这一劣势通常会持续一生。</li></ul><hr><p>原文(5)：</p><blockquote><p>Children from households on welfare knew 525 words by the age of three,while the children of professionals had mastered l,116.</p></blockquote><ul><li>参考译文:领取救济金家庭的孩子三岁知道525个单词，而专业人士的孩子掌握了1116个单词。</li></ul><hr><p>原文(6)：</p><blockquote><p>Pre-school can help close this gap.</p></blockquote><ul><li>参考译文:学前教育有助于缩小这种差距。</li></ul><hr><p>原文(7)：</p><blockquote><p>So in a speech last month, Mr. Obama called for a partnership between the federal government and the states to expand it to every American child.</p></blockquote><ul><li>参考译文:因此，在上个月的一次演讲中，奥巴马呼吁联邦政府与各州建立伙伴关系，将其扩大到每一个美国儿童。</li></ul><hr><p>原文(8)：</p><blockquote><p>It later became known that “every” meant those who come from families with incomes of up to 200% above the poverty line—equal to an income of $47,000 for a family of four.</p></blockquote><ul><li>参考译文:后来人们知道，“每一个”指的是那些收入高于贫困线200%的家庭–相当于四口之家47000美元的收入。</li></ul><hr><p>原文(9)：</p><blockquote><p>Some critics say that sending children to school at the age of four does not work.</p></blockquote><ul><li>参考译文:一些批评人士说，在四岁的时候送孩子上学是行不通的</li></ul><hr><p>原文(10)：</p><blockquote><p>(10)The evidence suggests otherwise.</p></blockquote><ul><li>参考译文:证据表明情况并非如此。</li></ul><hr><p>原文(11)：</p><blockquote><p>For example, on March 20th new results were announced from a study of 9-to-11-year-olds in New Jersey.</p></blockquote><ul><li>参考译文:例如，3月20日，新泽西州一项针对9-11岁儿童的研究公布了新的结果。</li></ul><hr><p>原文(12)：</p><blockquote><p>This report found that disadvantaged children who had attended pre-school had better literacy(读写能力),language, maths and science skills.</p></blockquote><ul><li>参考译文:这份报告发现，上过学前班的弱势儿童有更好的识字能力、语言、数学和科学技能。</li></ul><hr><p>原文(13)：</p><blockquote><p>And two years of pre-kindergarten were better than one.</p></blockquote><ul><li>参考译文:两年的学前教育比一年更好。</li></ul><hr><p>原文(14)：</p><blockquote><p>Some studies also follow the effects of early learning over lifetimes, such as its effect on crime rates and other factors that may eventually burden society.</p></blockquote><ul><li>参考译文:一些研究还关注早期学习在一生中的影响，比如它对犯罪率的影响以及其他可能最终给社会带来负担的因素</li></ul><hr><p>原文(15)：</p><blockquote><p>Critics have singled out a government scheme called Head Start,created in 1965, which provides poor households with a range of services including school-based early education.</p></blockquote><ul><li>参考译文:批评人士特别指出了1965年建立的一个名为“启蒙计划”的政府计划，该计划为贫困家庭提供一系列服务，包括基于学校的早期教育。</li></ul>]]></content>
    
    
    <categories>
      
      <category>学位英语</category>
      
      <category>精读阅读理解精通核心必备词汇</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学位英语</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P4-3 案例：PDF合并</title>
    <link href="/2024/08/14/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part4-%E7%AC%94%E8%AE%B0/P4-3%20%E6%A1%88%E4%BE%8B%EF%BC%9APDF%E5%90%88%E5%B9%B6/"/>
    <url>/2024/08/14/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part4-%E7%AC%94%E8%AE%B0/P4-3%20%E6%A1%88%E4%BE%8B%EF%BC%9APDF%E5%90%88%E5%B9%B6/</url>
    
    <content type="html"><![CDATA[<h1 id="PDF合并"><a href="#PDF合并" class="headerlink" title="PDF合并"></a>PDF合并</h1><hr><h2 id="需求说明"><a href="#需求说明" class="headerlink" title="需求说明"></a>需求说明</h2><blockquote><p>有一堆英语考试真题(PDF格式)，要求把他们合并成一个PDF文件</p><p>无准备的写代码哦，可以看看真实的程序员解决问题的过程</p></blockquote><p>思路</p><ul><li>把文件夹中所有的PDF遍历一遍，然后读取二进制内容</li><li>然后逐个的去写入一个新的PDF中</li></ul><hr><h3 id="自己的写法"><a href="#自己的写法" class="headerlink" title="自己的写法"></a>自己的写法</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs java">String[] PDFFiles= IOHelpers.getFilesRecursively(<span class="hljs-string">&quot;D:/JavaTest1/PDFTest3&quot;</span>,<span class="hljs-string">&quot;pdf&quot;</span>);<span class="hljs-comment">//读取文件夹下pdf格式的文件</span><br><span class="hljs-type">PDDocument</span> <span class="hljs-variable">newdoc</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">PDDocument</span>();<span class="hljs-comment">//新的PDF文件</span><br><span class="hljs-keyword">for</span> (String PDFFile : PDFFiles)<br>&#123;<br>    <span class="hljs-type">PDDocument</span> <span class="hljs-variable">doc</span> <span class="hljs-operator">=</span> PDFHelpers.openFile(PDFFile);  <span class="hljs-comment">//读取对应路径的pdf文件</span><br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;doc.getNumberOfPages();i++)<br>    &#123;<br>        <span class="hljs-type">PDPage</span> <span class="hljs-variable">page</span> <span class="hljs-operator">=</span> doc.getPage(i);<span class="hljs-comment">//获取文件中的每一页</span><br>        newdoc.addPage(page);<span class="hljs-comment">//添加到新的PDF文件中</span><br>    &#125;<br>    <span class="hljs-comment">//PDFHelpers.close(doc);//关闭pdf</span><br>&#125;<br><span class="hljs-keyword">try</span> &#123;<br>    newdoc.save(<span class="hljs-string">&quot;D:/JavaTest1/PDFTest3/1.pdf&quot;</span>);<span class="hljs-comment">//保存到这个文件中</span><br>&#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;<br>    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">RuntimeException</span>(e);<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="遇到的问题总结"><a href="#遇到的问题总结" class="headerlink" title="遇到的问题总结"></a>遇到的问题总结</h4><ul><li><p>报错： COSStream has been closed and cannot be read. Perhaps its enclosing PDDocument has been closed? </p><ul><li>翻译：COSStream已关闭，无法读取。也许它的附件PDDocument已经关闭了?</li><li>解决方法：&#x2F;&#x2F;PDFHelpers.close(doc);&#x2F;&#x2F;关闭pdf 注释关闭的代码就解决了</li></ul></li><li><p>保存的PDF中 11-238页都是空白</p><ul><li>解决方法：更新版本(2.0.32)就好了,但是如果用最新版(3.0.3)时，报错了</li><li>遇到了依赖不行，可以用三步走（印象笔记上搜索  Dependency ‘XXX:‘ not found，三步解决 ）<ul><li>分析：有可能是yzk18-docs 的PDFHelpers 不兼容最新版</li></ul></li></ul></li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240814/%E7%89%88%E6%9C%AC.6m3tki2dkk.png" alt="版本"></p><p>报错：<img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240814/%E7%89%88%E6%9C%AC%E6%8A%A5%E9%94%991.9rjbjg4vft.webp" alt="版本报错1"></p><hr><p>遇到问题的处理过程</p><ul><li>1.搜索：编程语言+用的库+自己的目的  比如： java pdfbox 空白页<ul><li>百度—中文社区</li><li>谷歌—英文社区</li></ul></li><li>2.如果是之前的旧方法现在又代替的方法了，就替换最新的</li><li>3.库的版本问题，看看新版修复了没</li></ul><hr><h3 id="杨中科老师的写法"><a href="#杨中科老师的写法" class="headerlink" title="杨中科老师的写法"></a>杨中科老师的写法</h3><ul><li>背景介绍：录课的时候是2021-06-10  那时候我上述写的这个被锁定的问题还没有修复</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> IOException &#123;<br>    <span class="hljs-type">PDFMergerUtility</span> <span class="hljs-variable">merger</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">PDFMergerUtility</span>();<br>    String[] pdfFiles = IOHelpers.getFilesRecursively(<span class="hljs-string">&quot;F:\\网友提供的阅读\\已经使用\\广东自考学位真题&quot;</span>,<span class="hljs-string">&quot;pdf&quot;</span>);<br>    <span class="hljs-comment">//String[] pdfFiles = IOHelpers.getFilesRecursively(&quot;F:\\网友提供的阅读\\已经使用\\考研英语阅读1997-2015&quot;,&quot;pdf&quot;);</span><br>    <span class="hljs-keyword">for</span>(String pdfFile : pdfFiles)<br>    &#123;<br>        merger.addSource(pdfFile);<br>    &#125;<br>    merger.setDestinationFileName(<span class="hljs-string">&quot;d:/1.pdf&quot;</span>);<br>    merger.mergeDocuments(MemoryUsageSetting.setupMainMemoryOnly());<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part4</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P4-2 案例：对英语真题进行词频分析</title>
    <link href="/2024/08/14/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part4-%E7%AC%94%E8%AE%B0/P4-2%20%E6%A1%88%E4%BE%8B%EF%BC%9A%E5%AF%B9%E8%8B%B1%E8%AF%AD%E7%9C%9F%E9%A2%98%E8%BF%9B%E8%A1%8C%E8%AF%8D%E9%A2%91%E5%88%86%E6%9E%90/"/>
    <url>/2024/08/14/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part4-%E7%AC%94%E8%AE%B0/P4-2%20%E6%A1%88%E4%BE%8B%EF%BC%9A%E5%AF%B9%E8%8B%B1%E8%AF%AD%E7%9C%9F%E9%A2%98%E8%BF%9B%E8%A1%8C%E8%AF%8D%E9%A2%91%E5%88%86%E6%9E%90/</url>
    
    <content type="html"><![CDATA[<h1 id="案例：对英语真题进行词频分析"><a href="#案例：对英语真题进行词频分析" class="headerlink" title="案例：对英语真题进行词频分析"></a>案例：对英语真题进行词频分析</h1><hr><h2 id="需求说明"><a href="#需求说明" class="headerlink" title="需求说明"></a>需求说明</h2><ul><li>有一堆英语考试真题(PDF格式)，要求读取它们，然后分析出来每个单词出现的词频，然后输出到一个文本文件中，每行是一个“单词 词频”。暂不实现按照词频排序，因为涉及到stream或者SQL</li><li>先分析思路，写出伪代码，然后实现。不能没有准备的写代码<ul><li>怎么分析思路呢？1.<ul><li>先站在人的角度去看这个需求，正常人的方式怎么进行？</li><li>然后切换到计算机的视角去，看看怎么利用计算机去达到这个目的</li></ul></li></ul></li></ul><p>思路分析</p><blockquote><p>声明一个LinkedHashMap，Key是单词(忽略大小写),Value是词频<br>遍历每一个pdf文件<br>{<br>读取这个pdf的所有文本<br>对于文件按照 空格，口号，句号等来分割为单词。然后全部转为小写<br>然后在遍历每一个单词，看在map中是否存在，不存在则新增，存在则词频+1<br>}</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>    LinkedHashMap&lt;String,Integer&gt; map =<span class="hljs-keyword">new</span> <span class="hljs-title class_">LinkedHashMap</span>&lt;&gt;();<br>    String[] PDFFiles= IOHelpers.getFilesRecursively(<span class="hljs-string">&quot;D:/JavaTest1/PDFTest2&quot;</span>,<span class="hljs-string">&quot;pdf&quot;</span>);<span class="hljs-comment">//获取文件夹下所有的pdf文件</span><br>    <span class="hljs-keyword">for</span> (String Files :PDFFiles)<br>    &#123;<br>        <span class="hljs-type">PDDocument</span> <span class="hljs-variable">doc</span> <span class="hljs-operator">=</span> PDFHelpers.openFile(Files);  <span class="hljs-comment">//读取对应路径的pdf文件</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">text</span> <span class="hljs-operator">=</span> PDFHelpers.parseText(doc);<span class="hljs-comment">//pdf的txt文本提取成字符串</span><br>        String[] texts = text.toLowerCase().split(<span class="hljs-string">&quot;\\s|\\.|\\,|\\:|\\!|\\?|;|\\(|\\)&quot;</span>);<span class="hljs-comment">//符号转成小写并分割</span><br>        <span class="hljs-keyword">for</span> (String word:texts)<br>        &#123;<br>            <span class="hljs-keyword">if</span> (!isEnglishWord(word))<span class="hljs-comment">//如果这个word不是英语单词，则跳过</span><br>            &#123;<br>                <span class="hljs-keyword">continue</span>;<span class="hljs-comment">//处理下一个单词</span><br>            &#125;<br><br>            <span class="hljs-keyword">if</span> (word.equals(<span class="hljs-string">&quot;&quot;</span>))<br>            &#123;<br>                <span class="hljs-keyword">continue</span>;<br>            &#125;<br>            <span class="hljs-type">Integer</span> <span class="hljs-variable">frqe</span> <span class="hljs-operator">=</span>map.get(word);<span class="hljs-comment">//获得当前的词频</span><br>            <span class="hljs-keyword">if</span> (frqe==<span class="hljs-literal">null</span>)<span class="hljs-comment">//如果为null就证明不存在</span><br>            &#123;<br>                map.put(word,<span class="hljs-number">1</span>);<br>            &#125;<br>            <span class="hljs-keyword">else</span><br>            &#123;<br>                map.put(word,frqe+<span class="hljs-number">1</span>);<span class="hljs-comment">//存在就词频+1</span><br><br>            &#125;<br><br>        &#125;<br><br>        PDFHelpers.close(doc);<span class="hljs-comment">//关闭pdf*/</span><br>    &#125;<br>    <span class="hljs-type">String</span> <span class="hljs-variable">outputString</span> <span class="hljs-operator">=</span><span class="hljs-string">&quot;&quot;</span>;<br>    <span class="hljs-keyword">for</span> (String word:map.keySet())<span class="hljs-comment">//keyset()是map中所有key的集合</span><br>    &#123;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">freq</span> <span class="hljs-operator">=</span>map.get(word);<br>        outputString =outputString+word+<span class="hljs-string">&quot;=&quot;</span>+freq+<span class="hljs-string">&quot;\r\n&quot;</span>;<br><br>    &#125;<br>    <span class="hljs-comment">//System.out.println(outputString);</span><br>    IOHelpers.writeAllText(<span class="hljs-string">&quot;D:/JavaTest1/PDFTest2/1.txt&quot;</span>,outputString);<br><br><br>&#125;<br><span class="hljs-comment">//判断字符串中是否是一个英文单词(全部由英文字母组成)</span><br><span class="hljs-keyword">public</span>  <span class="hljs-keyword">static</span>  <span class="hljs-type">boolean</span> <span class="hljs-title function_">isEnglishWord</span><span class="hljs-params">(String s)</span><br>&#123;<br>    <span class="hljs-type">int</span> numbers=s.length();<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span><span class="hljs-number">0</span>;i&lt;numbers;i++)<br>    &#123;<br>        <span class="hljs-type">char</span> <span class="hljs-variable">ch</span> <span class="hljs-operator">=</span>s.charAt(i);<br>        <span class="hljs-keyword">if</span> (Character.isLowerCase(ch)==<span class="hljs-literal">false</span>)<span class="hljs-comment">//只要碰到一个非字母，函数就返回false</span><br>        &#123;<br>            <span class="hljs-keyword">return</span>  <span class="hljs-literal">false</span>;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span>  <span class="hljs-literal">true</span>;<span class="hljs-comment">//如果运行到这里，就说明每个都是字母</span><br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part4</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P4-13 从表格数据创建Excel图表</title>
    <link href="/2024/08/12/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part4-%E7%AC%94%E8%AE%B0/P4-13%20%E4%BB%8E%E8%A1%A8%E6%A0%BC%E6%95%B0%E6%8D%AE%E5%88%9B%E5%BB%BAExcel%E5%9B%BE%E8%A1%A8/"/>
    <url>/2024/08/12/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part4-%E7%AC%94%E8%AE%B0/P4-13%20%E4%BB%8E%E8%A1%A8%E6%A0%BC%E6%95%B0%E6%8D%AE%E5%88%9B%E5%BB%BAExcel%E5%9B%BE%E8%A1%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="从表格中获取数据并创建Excel图表"><a href="#从表格中获取数据并创建Excel图表" class="headerlink" title="从表格中获取数据并创建Excel图表"></a>从表格中获取数据并创建Excel图表</h1><hr><h2 id="需求说明"><a href="#需求说明" class="headerlink" title="需求说明"></a>需求说明</h2><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240819/%E9%9C%80%E6%B1%82%E8%AF%B4%E6%98%8E1.esfrj6ule.webp" alt="需求说明1"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">String</span> <span class="hljs-variable">fileName</span> <span class="hljs-operator">=</span><span class="hljs-string">&quot;D:/JavaTest1/1.xlsx&quot;</span>;<br><span class="hljs-type">Workbook</span> <span class="hljs-variable">workbook</span> <span class="hljs-operator">=</span> ExcelHelpers.openFile(fileName);<span class="hljs-comment">//打开xlsx文件</span><br><span class="hljs-type">Sheet</span> <span class="hljs-variable">sheet</span> <span class="hljs-operator">=</span> workbook.getSheetAt(<span class="hljs-number">0</span>);<br><span class="hljs-type">ChartFromCellRangeBuilder</span> <span class="hljs-variable">chartBuilder</span> <span class="hljs-operator">=</span><span class="hljs-keyword">new</span> <span class="hljs-title class_">ChartFromCellRangeBuilder</span>(ChartTypes.LINE,(XSSFSheet)sheet);<span class="hljs-comment">//创建图表，sheet转换类型</span><br><span class="hljs-type">XSSFChart</span> <span class="hljs-variable">chart</span> <span class="hljs-operator">=</span> ExcelHelpers.createChart(sheet, <span class="hljs-number">5</span>, <span class="hljs-number">1</span>, <span class="hljs-number">17</span>, <span class="hljs-number">17</span>);<span class="hljs-comment">//在sheet上创建一个图表对象，显示到左上角坐标为(coll，row)、右下角坐标为(col2，row2)这个位置</span><br><span class="hljs-type">int</span> <span class="hljs-variable">rowNum</span> <span class="hljs-operator">=</span> sheet.getLastRowNum();<span class="hljs-comment">//有效的行数</span><br>chartBuilder.setCategoriesCellRange(<span class="hljs-keyword">new</span> <span class="hljs-title class_">CellRangeAddress</span>(<span class="hljs-number">1</span>,rowNum,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>));<span class="hljs-comment">//1是跳过表头</span><br>chartBuilder.putCellRanges(<span class="hljs-string">&quot;血压&quot;</span>,<span class="hljs-keyword">new</span> <span class="hljs-title class_">CellRangeAddress</span>(<span class="hljs-number">1</span>,rowNum,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>));<br>chartBuilder.putCellRanges(<span class="hljs-string">&quot;体重&quot;</span>,<span class="hljs-keyword">new</span> <span class="hljs-title class_">CellRangeAddress</span>(<span class="hljs-number">1</span>,rowNum,<span class="hljs-number">2</span>,<span class="hljs-number">2</span>));<br>chartBuilder.setCategoryAxisTitle(<span class="hljs-string">&quot;日期&quot;</span>);<br>chartBuilder.build(chart);<br>ExcelHelpers.saveToFile(workbook,fileName);<br>ExcelHelpers.close(workbook);<br>DesktopHelpers.openFile(fileName);<span class="hljs-comment">//用默认方式打开文件</span><br></code></pre></td></tr></table></figure><h2 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h2><ul><li>1、从数据库中读取数据，然后生成图表</li><li>2、根据已有Excel表，创建图表</li><li>3、对已有Excel表进行加工，创建新的Excel表，创建图表</li></ul>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part4</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P4-1 办公自动化简介以及PDF文件分析</title>
    <link href="/2024/08/12/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part4-%E7%AC%94%E8%AE%B0/P4-1%20%E5%8A%9E%E5%85%AC%E8%87%AA%E5%8A%A8%E5%8C%96%E7%AE%80%E4%BB%8B%E4%BB%A5%E5%8F%8APDF%E6%96%87%E4%BB%B6%E5%88%86%E6%9E%90/"/>
    <url>/2024/08/12/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part4-%E7%AC%94%E8%AE%B0/P4-1%20%E5%8A%9E%E5%85%AC%E8%87%AA%E5%8A%A8%E5%8C%96%E7%AE%80%E4%BB%8B%E4%BB%A5%E5%8F%8APDF%E6%96%87%E4%BB%B6%E5%88%86%E6%9E%90/</url>
    
    <content type="html"><![CDATA[<h1 id="办公自动化简介以及PDF文件分析"><a href="#办公自动化简介以及PDF文件分析" class="headerlink" title="办公自动化简介以及PDF文件分析"></a>办公自动化简介以及PDF文件分析</h1><hr><h2 id="什么是办公自动化"><a href="#什么是办公自动化" class="headerlink" title="什么是办公自动化"></a>什么是办公自动化</h2><ul><li>非IT专业人员打交道最多的三种文件：Word、Excel、PDF<ul><li>Excel中的VBA脚本，用的是Basic的语言，非常小众了现在<blockquote><p>办公自动化就是把人工手动的操作方法通过编程自动化去完成<br>这个阶段讲：Word、Excel、PDF文件的读写，图表，简化日常工作</p></blockquote></li></ul></li></ul><h2 id="使用YZK-Docs"><a href="#使用YZK-Docs" class="headerlink" title="使用YZK-Docs"></a>使用YZK-Docs</h2><ul><li>1、Maven中引入yzk18-docs</li><li>2、看文档研究PDFHelpers的用法。 <ul><li>就是对PDFbox的简单封装，没有封装的方法直接参考PDFbox的文档即可</li></ul></li><li>3、案例：把一个PDF文件中的文字提取到一个文本文档中，图片保存到同级目录下，文件名用递增序号</li></ul><p>思路</p><ul><li>1.PDF文档的不同：<ul><li>扫描版</li><li>加密版</li><li>文字版(开源一般都只对文字版管用)</li><li>限制<ul><li>1、有的是纯扫描版文件，全都是图片，无法简单的提取文字，需要调用OCR等功能。OCR精度较高，所以都是收费的</li><li>2、一些被加密等PDF文件需要特殊处理</li><li>3、PDF的不可替代性的格式。所以用代码去实现提取PDF中的文字，无法达到完美的还原出来里面所有的内容</li></ul></li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//案例：把一个PDF文件中的文字提取到一个文本文档中，图片保存到同级目录下，文件名用递增序号</span><br><span class="hljs-type">PDDocument</span> <span class="hljs-variable">doc</span> <span class="hljs-operator">=</span> PDFHelpers.openFile(<span class="hljs-string">&quot;D:/JavaTest1/PDFtest/03 1.1 提升信息敏感度的三种方法，成为信息收集的「有心人」.pdf&quot;</span>);  <span class="hljs-comment">//读取对应路径的pdf文件</span><br><span class="hljs-type">int</span> <span class="hljs-variable">docNumbr</span> <span class="hljs-operator">=</span> doc.getNumberOfPages();<span class="hljs-comment">//获取pdf多少页</span><br><span class="hljs-type">String</span> <span class="hljs-variable">text</span> <span class="hljs-operator">=</span> PDFHelpers.parseText(doc);<span class="hljs-comment">//pdf的txt文本提取成字符串</span><br>IOHelpers.writeAllText(<span class="hljs-string">&quot;D:/JavaTest1/PDFtest/有心人.txt&quot;</span>,text);<span class="hljs-comment">//字符串写入txt</span><br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span><span class="hljs-number">0</span>;i&lt;docNumbr;i++)<br>&#123;<br>    <span class="hljs-type">PDPage</span> <span class="hljs-variable">page</span> <span class="hljs-operator">=</span> doc.getPage(i);<span class="hljs-comment">//获取页数</span><br>    List&lt;<span class="hljs-type">byte</span>[]&gt; bytes = PDFHelpers.parseImages(page,<span class="hljs-string">&quot;png&quot;</span>);<span class="hljs-comment">//获取当前页的图片信息</span><br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">byte</span>[] bytes1 :bytes)<br>    &#123;<br>        IOHelpers.writeAllBytes(<span class="hljs-string">&quot;D:/JavaTest1/PDFtest/图片/&quot;</span>+i+<span class="hljs-string">&quot;.png&quot;</span>,bytes1);<span class="hljs-comment">//写入图片</span><br>    &#125;<br>&#125;<br><br>PDFHelpers.close(doc);<span class="hljs-comment">//关闭pdf</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part4</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P3-11 异常</title>
    <link href="/2024/08/12/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part3-%E7%AC%94%E8%AE%B0/P3-11%20%E5%BC%82%E5%B8%B8/"/>
    <url>/2024/08/12/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part3-%E7%AC%94%E8%AE%B0/P3-11%20%E5%BC%82%E5%B8%B8/</url>
    
    <content type="html"><![CDATA[<h1 id="异常"><a href="#异常" class="headerlink" title="异常"></a>异常</h1><hr><h2 id="什么是异常"><a href="#什么是异常" class="headerlink" title="什么是异常"></a>什么是异常</h2><ul><li>1、异常是程序执行过程中出现的“意外”情况。<ul><li>但异常不是bug哦</li></ul></li><li>2、异常我们肯定不陌生<ul><li>比如：数组访问越界、Integer.parseInt()失败、读取不存在的文件等</li><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240812/%E5%BC%82%E5%B8%B81.6pnff3juac.webp" alt="异常1"></li></ul></li><li>3、异常可以让程序出现意外情况的时候立即通知调用者<ul><li>遇到异常的时候，程序也会在异常点停止，以免造成进一步的破坏</li><li>可以和C语言或Go语言的错误码等实现方式比较</li></ul></li></ul><h2 id="Java异常"><a href="#Java异常" class="headerlink" title="Java异常"></a>Java异常</h2><ul><li><p>1、Java中的异常是一种特殊的类，他们直接或者间接继承自Throwable</p><ul><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240812/Throwable.syv83f922.webp" alt="Throwable"></li><li>直接或者间接继承自RuntimeException的异常叫做“运行时异常”，属于<strong>非检查异常</strong></li><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240812/RuntimeException.9kg3kways9.webp" alt="RuntimeException"></li><li>其他所有的异常叫做“检查异常”，属于<strong>非运行时异常</strong></li></ul></li><li><p>2、一个方法上可以通过throws关键字说明这个方法可能会抛出哪些异常（了解即可）</p><ul><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240812/%E5%A3%B0%E6%98%8E%E5%BC%82%E5%B8%B81.9gwhn65yc3.webp" alt="声明异常1"></li><li>调用这个方法的代码要么catch(抓住)这些异常，要么继续声明throws</li></ul></li><li><p>3、调用一个声明throws非RuntimeException的方法，必须对异常做处理：要么catch，要么继续throws</p><ul><li>怎么去看非RuntimeException呢？<ul><li>(可以从错误的继承链中看看是否能找到RuntimeException)</li></ul></li><li>IDEA提供的快捷写的模板只能是printStacktrace，这不是一个好习惯，不建议用它默认写的这个报错。2024的IDEA模板改成了throw new RuntimeException(e)，非常不错</li><li>IDEA的快捷方式catch<ul><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240812/catch.361hpah4i9.webp" alt="catch"></li></ul></li><li>IDEA的快捷方式throws<ul><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240812/throws.pf9ada8lu.webp" alt="throws"></li></ul></li></ul></li><li><p>4、对于初学者，如果不知道如何处理的话，就throw new RuntimeException(e);</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">try</span> <br>&#123;<br>    <span class="hljs-type">FileInputStream</span> <span class="hljs-variable">fis</span> <span class="hljs-operator">=</span><span class="hljs-keyword">new</span> <span class="hljs-title class_">FileInputStream</span>(<span class="hljs-string">&quot;d:/1.txt&quot;</span>);<br>&#125; <span class="hljs-keyword">catch</span> (FileNotFoundException e) <br>&#123;<br>    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">RuntimeException</span>(e);<span class="hljs-comment">//用这个去处理</span><br>&#125;<br></code></pre></td></tr></table></figure><ul><li>5、杨中科封装的库，很多地方就是把检查异常catch住，然后重新抛成RuntimeException了</li><li>6、可以自己catch处理的地方<ul><li>比如：检测用户输入的是否是合法的整数，就可以用catch住Integer.parseInt()的异常。</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java">String s=<span class="hljs-string">&quot;1b2&quot;</span>;<br><span class="hljs-keyword">try</span><br>&#123;<br>    <span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span>Integer.parseInt(s);<span class="hljs-comment">//字符串转换成int</span><br>    System.out.println(i);<br>&#125;<br><span class="hljs-keyword">catch</span>(NumberFormatException e)<br>&#123;<br>    System.out.println(<span class="hljs-string">&quot;不是合法的整数&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part3</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P3-10 Java中基本的数据结构</title>
    <link href="/2024/08/11/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part3-%E7%AC%94%E8%AE%B0/P3-10%20Java%E4%B8%AD%E5%9F%BA%E6%9C%AC%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    <url>/2024/08/11/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part3-%E7%AC%94%E8%AE%B0/P3-10%20Java%E4%B8%AD%E5%9F%BA%E6%9C%AC%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</url>
    
    <content type="html"><![CDATA[<h1 id="Java中基本的数据结构"><a href="#Java中基本的数据结构" class="headerlink" title="Java中基本的数据结构"></a>Java中基本的数据结构</h1><hr><h2 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h2><ul><li>《数据结构》是研究数据在计算机中存储的学科。数组就是一种基础的可以<strong>顺序存储****固定数量</strong>数据的数据结构。</li><li>Java中还有很多其他数据结构的类&#x2F;接口<ul><li>比如Set、Map、List等，他们还有很多子类<ul><li>比如：LinkedList、ArrayList….</li></ul></li></ul></li><li>这次，介绍最常用的两个：LinkedList、LinkedHashMap。先讲非泛型写法，在介绍泛型。</li></ul><h3 id="LinkedList"><a href="#LinkedList" class="headerlink" title="LinkedList"></a>LinkedList</h3><ul><li>数组的长度在声明的时候就确定了，无法在运行时改变数组对象的长度。</li><li>需要一种能在运行时动态添加内容的数据结构，这就是LinkedList。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">LinkedList</span> <span class="hljs-variable">l1</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">LinkedList</span>();<br>l1.add(<span class="hljs-string">&quot;3&quot;</span>);<span class="hljs-comment">//添加元素</span><br>l1.add(<span class="hljs-number">6</span>);<br>l1.add(<span class="hljs-number">8</span>);<br>System.out.println(l1.size());<span class="hljs-comment">//获取数据个数</span><br>System.out.println(l1.get(<span class="hljs-number">2</span>));<span class="hljs-comment">//获取指定序号的元素</span><br></code></pre></td></tr></table></figure><h3 id="LinkedHashMap"><a href="#LinkedHashMap" class="headerlink" title="LinkedHashMap"></a>LinkedHashMap</h3><ul><li>1、编程中，有时候需要一种类似“字典”的数据结构：也就是保存“一对数据”。<ul><li>比如实现英汉词典的时候，就是一堆由“英文-中文解释”组成的“键值对”<ul><li>英文是“健”（key），中文是“值”(Value)</li><li>键不能重复，但值可以重复</li></ul></li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">LinkedHashMap</span> <span class="hljs-variable">map</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">LinkedHashMap</span>();<br>map.put(<span class="hljs-string">&quot;Hello&quot;</span>,<span class="hljs-string">&quot;你好&quot;</span>);<span class="hljs-comment">//放入键值对，如果已经存在则覆盖</span><br>System.out.println(map.get(<span class="hljs-string">&quot;Hello&quot;</span>));<span class="hljs-comment">//根据键获取值，如果不存在，则返回null</span><br></code></pre></td></tr></table></figure><ul><li>演示：做一个简单的英汉词典，如果查询不存在则提示“查不到”</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">LinkedHashMap</span> <span class="hljs-variable">map</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">LinkedHashMap</span>();<br>map.put(<span class="hljs-string">&quot;Hello&quot;</span>,<span class="hljs-string">&quot;你好&quot;</span>);<span class="hljs-comment">//放入键值对，如果已经存在则覆盖</span><br><span class="hljs-comment">//System.out.println(map.get(&quot;Hello&quot;));//根据键获取值，如果不存在，则返回null</span><br>map.put(<span class="hljs-string">&quot;dog&quot;</span>,<span class="hljs-string">&quot;狗&quot;</span>);<br>map.put(<span class="hljs-string">&quot;cat&quot;</span>,<span class="hljs-string">&quot;猫&quot;</span>);<br><span class="hljs-type">String</span> <span class="hljs-variable">s</span> <span class="hljs-operator">=</span><span class="hljs-string">&quot;dat&quot;</span>;<br><span class="hljs-type">Object</span> <span class="hljs-variable">ojt</span> <span class="hljs-operator">=</span> map.get(s);<span class="hljs-comment">//只能用Object类型去接收值</span><br><span class="hljs-keyword">if</span> (ojt==<span class="hljs-literal">null</span>)<br>&#123;<br>    System.out.println(<span class="hljs-string">&quot;查不到&quot;</span>);<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>    System.out.println(ojt);<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="泛型入门"><a href="#泛型入门" class="headerlink" title="泛型入门"></a>泛型入门</h2><ul><li>1、LinkedList、LinkedHashMap中的数据可以放入任意类型，不仅容易造成数据混乱，在取出来数据的时候还需要做类型转换。这时候就可以用泛型</li><li>2、使用泛型的数据结构，就可以限制放入数据的类型，这样取出来的数据类型也就确定了。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java">LinkedList&lt;String&gt; list =<span class="hljs-keyword">new</span> <span class="hljs-title class_">LinkedList</span>&lt;String&gt;();<span class="hljs-comment">//new后面的String类型可以省略</span><br>list.add(<span class="hljs-string">&quot;你好&quot;</span>);<br><span class="hljs-type">String</span> <span class="hljs-variable">s</span> <span class="hljs-operator">=</span> list.getLast();<span class="hljs-comment">//返回值类型也变成了String</span><br>System.out.println(s);<br><br><br><br>LinkedHashMap&lt;String,String&gt; map =<span class="hljs-keyword">new</span> <span class="hljs-title class_">LinkedHashMap</span>&lt;&gt;();<span class="hljs-comment">//LinkedHashMap 需要两个类型，第一个是key的，第二个是value的</span><br>map.put(<span class="hljs-string">&quot;cat&quot;</span>,<span class="hljs-string">&quot;猫&quot;</span>);<br><span class="hljs-type">String</span> <span class="hljs-variable">s</span> <span class="hljs-operator">=</span>map.get(<span class="hljs-string">&quot;cat&quot;</span>);<br>System.out.println(s);<br></code></pre></td></tr></table></figure><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><ul><li>1、关于int等类型的问题：对于基本数据类型，不能直接用在声明泛型类型中，必须用对应的包装类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java">LinkedList &lt;<span class="hljs-type">int</span>&gt; p1 =<span class="hljs-keyword">new</span> <span class="hljs-title class_">LinkedList</span>&lt;<span class="hljs-type">int</span>&gt;();  <span class="hljs-comment">//这种声明是错误的</span><br><br>LinkedList&lt;Integer&gt; p1 =<span class="hljs-keyword">new</span> <span class="hljs-title class_">LinkedList</span>&lt;&gt;();<span class="hljs-comment">//这种声明才是正确的，用了int的包装类</span><br></code></pre></td></tr></table></figure><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240811/int%E6%B3%9B%E5%9E%8B%E6%8A%A5%E9%94%99.1vyki32ln5.webp" alt="int泛型报错"></p><ul><li>2、演示：使用泛型保存学生的“姓名-成绩”，然后提供成绩查询功能</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java">LinkedHashMap &lt;String,Integer&gt; map =<span class="hljs-keyword">new</span> <span class="hljs-title class_">LinkedHashMap</span>&lt;&gt;(); <span class="hljs-comment">//key 是String类型，value是Integer类型(int的包装类型)</span><br>map.put(<span class="hljs-string">&quot;张三&quot;</span>,<span class="hljs-number">80</span>);<br>map.put(<span class="hljs-string">&quot;李四&quot;</span>,<span class="hljs-number">60</span>);<br>map.put(<span class="hljs-string">&quot;王麻子&quot;</span>,<span class="hljs-number">95</span>);<br>map.put(<span class="hljs-string">&quot;夏天&quot;</span>,<span class="hljs-number">99</span>);<br><span class="hljs-type">Integer</span> <span class="hljs-variable">s</span> <span class="hljs-operator">=</span>map.get(<span class="hljs-string">&quot;夏&quot;</span>);<span class="hljs-comment">//也可以用int去接收数据，但是最好使用Integer，因为它可以接受null</span><br><span class="hljs-keyword">if</span> (s==<span class="hljs-literal">null</span>)<br>&#123;<br>    System.out.println(<span class="hljs-string">&quot;此人查不到&quot;</span>);<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>    System.out.println(<span class="hljs-string">&quot;成绩为：&quot;</span>+s);<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part3</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P3-9 Integer和Int</title>
    <link href="/2024/08/11/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part3-%E7%AC%94%E8%AE%B0/P3-9%20Integer%E5%92%8CInt/"/>
    <url>/2024/08/11/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part3-%E7%AC%94%E8%AE%B0/P3-9%20Integer%E5%92%8CInt/</url>
    
    <content type="html"><![CDATA[<h1 id="Integer和Int"><a href="#Integer和Int" class="headerlink" title="Integer和Int"></a>Integer和Int</h1><hr><h2 id="Int不能为空"><a href="#Int不能为空" class="headerlink" title="Int不能为空"></a>Int不能为空</h2><ul><li>1、复习：null表示一个变量没有指向任何对象。int、double、boolean等基础数据类型不可以为null。</li><li>2、null和0，null和””都不是一个意思。编程的时候，有时需要表示“整数变量没有值”的情况，所以用0有时是不行的。</li><li>3、而且Java中所谓“一切皆对象”，但是int等不是对象，因此诞生了Integer等“包装类”<ul><li>Integer就是你可以认为这是一种可以为null的整数</li></ul></li></ul><h3 id="Integer的使用"><a href="#Integer的使用" class="headerlink" title="Integer的使用"></a>Integer的使用</h3><ul><li>i4不能直接等于i2，除非是在不等于null的时候，要不然会报错：“NullPointerException”<ul><li>因为i2是Integer是可以为null的，int不行</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java">Integer i1=<span class="hljs-number">3</span>;<br>Integer i2=<span class="hljs-literal">null</span>;<br><span class="hljs-type">int</span> i3=i1;<span class="hljs-comment">//(int)i1  老语法的写法</span><br><span class="hljs-keyword">if</span> (i2!=<span class="hljs-literal">null</span>)<br>&#123;<br>    <span class="hljs-type">int</span> i4=i2;<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>    System.out.println(<span class="hljs-string">&quot;i2是null&quot;</span>);<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="Integer原理其实很简单"><a href="#Integer原理其实很简单" class="headerlink" title="Integer原理其实很简单"></a>Integer原理其实很简单</h3><ul><li>探究原理可以用java反编译看看：jd-gui.exe</li><li>自己也可以写，比如下面的这个样子</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MyInteger</span> &#123;<br><span class="hljs-keyword">private</span>  <span class="hljs-type">int</span> value;<br><br><span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">getValue</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-keyword">return</span> value;<br>&#125;<br><br><span class="hljs-keyword">public</span> MyInteger <span class="hljs-title function_">setValue</span><span class="hljs-params">(<span class="hljs-type">int</span> value)</span> &#123;<br>    <span class="hljs-built_in">this</span>.value = value;<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>;<br>&#125;<br>&#125;<br><br><br><span class="hljs-comment">//用法</span><br><span class="hljs-type">MyInteger</span> <span class="hljs-variable">i1</span> <span class="hljs-operator">=</span><span class="hljs-keyword">new</span> <span class="hljs-title class_">MyInteger</span>();<br>i1.setValue(<span class="hljs-number">3</span>);<br>System.out.println(i1.getValue());<br></code></pre></td></tr></table></figure><h3 id="其他类"><a href="#其他类" class="headerlink" title="其他类"></a>其他类</h3><ul><li>int–&gt;Integer</li><li>long–&gt;Long</li><li>boolean–&gt;Boolean</li><li>…..这些其他的类都是为了解决基础数据类型不能为null的问题</li></ul><h3 id="小彩蛋"><a href="#小彩蛋" class="headerlink" title="小彩蛋"></a>小彩蛋</h3><ul><li>null和空有什么区别？<ul><li>白话解释：null就是我手里什么都没有；空就是 我手里有一个数量为0的羊肉串</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java">String s=<span class="hljs-literal">null</span>;<span class="hljs-comment">//null是没有字符串对象</span><br>String s1=<span class="hljs-string">&quot;&quot;</span>;<span class="hljs-comment">//长度为零的字符串</span><br>System.out.println(s);<br>System.out.println(s1);<br>System.out.println(s1.length());<br>System.out.println(s.length());<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part3</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P3-8 简单的继承</title>
    <link href="/2024/08/10/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part3-%E7%AC%94%E8%AE%B0/P3-8%20%E7%AE%80%E5%8D%95%E7%9A%84%E7%BB%A7%E6%89%BF/"/>
    <url>/2024/08/10/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part3-%E7%AC%94%E8%AE%B0/P3-8%20%E7%AE%80%E5%8D%95%E7%9A%84%E7%BB%A7%E6%89%BF/</url>
    
    <content type="html"><![CDATA[<h1 id="简单的继承"><a href="#简单的继承" class="headerlink" title="简单的继承"></a>简单的继承</h1><hr><h2 id="类继承语法"><a href="#类继承语法" class="headerlink" title="类继承语法"></a>类继承语法</h2><ul><li>1、复习：A类从B类继承，那么B类就是父类，A类就是子类。类的继承可以简化类的声明<ul><li>extends Person 继承</li></ul></li><li>2、语法</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ChineseTest</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Person</span>&#123;  <span class="hljs-comment">//extends Person  继承于Person这个类</span><br>    <span class="hljs-keyword">private</span> String hukou;<br><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getHukou</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> hukou;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> ChineseTest <span class="hljs-title function_">setHukou</span><span class="hljs-params">(String hukou)</span> &#123;<br>        <span class="hljs-built_in">this</span>.hukou = hukou;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h2 id="继承惹上变量"><a href="#继承惹上变量" class="headerlink" title="继承惹上变量"></a>继承惹上变量</h2><ul><li>1、父类类型的变量可以指向子类类型的对象<ul><li>Person p1 &#x3D;new ChineseTest();</li></ul></li><li>2、如果父类类型指向的对象是子类类型的，那么可以用<strong>显式转换</strong>为子类类型的变量。如果转换出错，会抛异常<ul><li>ChineseTest p2 &#x3D;(ChineseTest) p1</li></ul></li><li>3、能够使用什么方法，取决于变量的类型<ul><li>为什么显式转换后，就可以set hukou呢？</li><li>因为Chinese类型有这个方法，而Person没有</li></ul></li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240810/%E7%BB%A7%E6%89%BF1.8hge7g1z72.png" alt="继承1"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">Person</span> <span class="hljs-variable">p1</span> <span class="hljs-operator">=</span><span class="hljs-keyword">new</span> <span class="hljs-title class_">ChineseTest</span>();<span class="hljs-comment">//父类类型的变量可以指向子类类型的对象</span><br><br><span class="hljs-comment">//ChineseTest c= new Person();//子类类型的变量不能指向父类类型的对象</span><br>p1.setAge(<span class="hljs-number">18</span>);<br>p1.setName(<span class="hljs-string">&quot;C&quot;</span>);<br>p1.sayHello();<br><br><span class="hljs-type">ChineseTest</span> <span class="hljs-variable">p2</span> <span class="hljs-operator">=</span>(ChineseTest) p1;<span class="hljs-comment">//显式转换。代表程序员确认：p1指向的一定是Chinese对象</span><br>p2.setHukou(<span class="hljs-string">&quot;河南&quot;</span>);<br>System.out.println(p2.getHukou());<br></code></pre></td></tr></table></figure><h2 id="Object"><a href="#Object" class="headerlink" title="Object"></a>Object</h2><ul><li>Java里所有类都直接或者间接继承自Object类</li></ul>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part3</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P3-7 JavaBean</title>
    <link href="/2024/08/10/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part3-%E7%AC%94%E8%AE%B0/P3-7%20JavaBean/"/>
    <url>/2024/08/10/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part3-%E7%AC%94%E8%AE%B0/P3-7%20JavaBean/</url>
    
    <content type="html"><![CDATA[<h1 id="JavaBean"><a href="#JavaBean" class="headerlink" title="JavaBean"></a>JavaBean</h1><hr><h2 id="为什么Javabean"><a href="#为什么Javabean" class="headerlink" title="为什么Javabean"></a>为什么Javabean</h2><ul><li>1、Java中没有C#、Kotlin等语言中的属性的语法，为了规范Java中“属性”的语法，Java制定了JavaBean规范，按照JavaBean规范来编写，能够更简单的和其他框架一起使用</li><li>2、JavaBean的规范细节非常多，这里只讲最重要的几点。其他以后自己研究</li></ul><h3 id="JavaBean主要规则"><a href="#JavaBean主要规则" class="headerlink" title="JavaBean主要规则"></a>JavaBean主要规则</h3><ul><li>1、必须是public类</li><li>2、成员变量用private，通过public的setter、getter方法访问</li><li>3、也可以只提供getter方法，这样的属性叫只读属性；<ul><li>也可以只提供setter方法，这样的属性叫只写属性；</li><li>如果getter&#x2F;setter都有，就叫可读可写属性</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">private</span> <span class="hljs-type">int</span> age;<br><span class="hljs-keyword">private</span> String name;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setAge</span><span class="hljs-params">(<span class="hljs-type">int</span> value)</span><span class="hljs-comment">//可读可写</span><br>&#123;<br>    <span class="hljs-built_in">this</span>.age=value;<br>&#125;<br><span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">getAge</span><span class="hljs-params">()</span><br>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.age;<br>&#125;<br><span class="hljs-keyword">public</span>  <span class="hljs-keyword">void</span>  <span class="hljs-title function_">setName</span><span class="hljs-params">(String value)</span><br>&#123;<br>    <span class="hljs-built_in">this</span>.name=value;<br>&#125;<br><span class="hljs-keyword">public</span> String <span class="hljs-title function_">getName</span><span class="hljs-params">()</span><br>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.name;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">private</span> <span class="hljs-type">int</span> age;<br><span class="hljs-keyword">private</span> String name;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setAge</span><span class="hljs-params">(<span class="hljs-type">int</span> value)</span><span class="hljs-comment">//可写</span><br>&#123;<br>    <span class="hljs-built_in">this</span>.age=value;<br>&#125;<br><br><span class="hljs-keyword">public</span>  <span class="hljs-keyword">void</span>  <span class="hljs-title function_">setName</span><span class="hljs-params">(String value)</span><br>&#123;<br>    <span class="hljs-built_in">this</span>.name=value;<br>&#125;<br><br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">private</span> <span class="hljs-type">int</span> age;<br><span class="hljs-keyword">private</span> String name;<br><br><span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">getAge</span><span class="hljs-params">()</span><span class="hljs-comment">//可读</span><br>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.age;<br>&#125;<br><br><span class="hljs-keyword">public</span> String <span class="hljs-title function_">getName</span><span class="hljs-params">()</span><br>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.name;<br>&#125;<br></code></pre></td></tr></table></figure><hr><h3 id="Chain-Setter-链式编程"><a href="#Chain-Setter-链式编程" class="headerlink" title="Chain Setter-链式编程"></a>Chain Setter-链式编程</h3><ul><li>链式编程：可以简化代码,用起来更简单<ul><li>需要把类的方法void改成类名Cat</li><li>达到类似C#的写法：test(new Cat{Name&#x3D;”Cool”,age&#x3D;18})</li></ul></li><li>但链式编程这个方式并不符合JavaBean规范，因为规范要求setter方法返回值必须是void。因此部分“死板”的框架不支持这种写法</li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240810/%E9%93%BE%E5%BC%8F%E7%BC%96%E7%A8%8B.6t719xiqts.webp" alt="链式编程"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Cat</span> &#123;<br><span class="hljs-keyword">private</span> <span class="hljs-type">int</span> age;<br><span class="hljs-keyword">private</span> String name;<br><span class="hljs-keyword">public</span> Cat <span class="hljs-title function_">setAge</span><span class="hljs-params">(<span class="hljs-type">int</span> value)</span><span class="hljs-comment">//把void改成类名Cat</span><br>&#123;<br>    <span class="hljs-built_in">this</span>.age=value;<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>;<br>&#125;<br><span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">getAge</span><span class="hljs-params">()</span><br>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.age;<br>&#125;<br><span class="hljs-keyword">public</span>  Cat  <span class="hljs-title function_">setName</span><span class="hljs-params">(String value)</span><span class="hljs-comment">//把void改成类名Cat</span><br>&#123;<br>    <span class="hljs-built_in">this</span>.name=value;<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>;<br>&#125;<br><span class="hljs-keyword">public</span> String <span class="hljs-title function_">getName</span><span class="hljs-params">()</span><br>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.name;<br>&#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><br><span class="hljs-type">Cat</span> <span class="hljs-variable">c</span> <span class="hljs-operator">=</span><span class="hljs-keyword">new</span> <span class="hljs-title class_">Cat</span>();<br>    c.setAge(<span class="hljs-number">1</span>);<br>    c.setName(<span class="hljs-string">&quot;岁岁&quot;</span>);<br>    <span class="hljs-comment">//System.out.println(&quot;猫猫的名字叫：&quot;+c.getName()+&quot;,&quot;+c.getAge()+&quot;岁了。&quot;);</span><br><br><span class="hljs-type">Cat</span> <span class="hljs-variable">c</span> <span class="hljs-operator">=</span><span class="hljs-keyword">new</span> <span class="hljs-title class_">Cat</span>().setAge(<span class="hljs-number">1</span>).setName(<span class="hljs-string">&quot;岁岁&quot;</span>);<span class="hljs-comment">//链式编程将上面三句合成了一句</span><br><br>    <span class="hljs-comment">//分解上面这一句的过程</span><br>    Cat c=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Cat</span>();<br>    <span class="hljs-type">Cat</span> <span class="hljs-variable">c1</span> <span class="hljs-operator">=</span>c.setAge(<span class="hljs-number">1</span>);<br>    <span class="hljs-type">Cat</span> <span class="hljs-variable">c2</span> <span class="hljs-operator">=</span>c1.setName(<span class="hljs-string">&quot;岁岁&quot;</span>);<br></code></pre></td></tr></table></figure><h3 id="JavaBean代码生成"><a href="#JavaBean代码生成" class="headerlink" title="JavaBean代码生成"></a>JavaBean代码生成</h3><ul><li>简化getter&#x2F;setter代码编写的方法，只要写private成员变量。其他帮你生成</li><li>步骤：<ul><li>1、IDEA中生成代码：右键[Generate]–&gt;[Getter&#x2F;Setter]<ul><li>SetterTemplate中可以选择风格：JavaBean和链式编程</li></ul></li></ul></li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240810/%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%901.5fki5wuq8f.webp" alt="代码生成1"></p><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240810/get%E5%92%8Cset.4cksv0ywcv.webp" alt="get和set"></p><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240810/%E8%A7%84%E8%8C%83.8ojm2ki7v4.webp" alt="规范"></p><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240810/%E7%94%9F%E6%88%90%E4%BB%A3%E7%A0%81%E5%90%8E1.4n7mo6e4ib.webp" alt="生成代码后1"></p><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240810/%E9%93%BE%E5%BC%8F%E7%BC%96%E7%A8%8B%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90.92q1tfqiq9.webp" alt="链式编程代码生成"></p><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240810/%E9%93%BE%E5%BC%8F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%902.4g4esqrz2q.webp" alt="链式代码生成2"></p><ul><li>2、Lombok(*):加上一个@Data，然后会在编译生成的代码中自动增加getter&#x2F;setter等其他方法<ul><li>缺点：依赖于这个插件</li><li>所以爱者很爱，烦着很烦</li><li>我学习的时候，IDEA不能直接添加@Data到classpath了，只能引用然后添加插件才能使用</li></ul></li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240810/%E6%8F%92%E4%BB%B61.8ojm2l48ar.webp" alt="插件1"></p><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240810/%E6%8F%92%E4%BB%B6%E6%95%88%E6%9E%9C.7sn4n4ujus.webp" alt="插件效果"></p>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part3</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P3-6 类的其他语法</title>
    <link href="/2024/08/09/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part3-%E7%AC%94%E8%AE%B0/P3-6%20%E7%B1%BB%E7%9A%84%E5%85%B6%E4%BB%96%E8%AF%AD%E6%B3%95/"/>
    <url>/2024/08/09/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part3-%E7%AC%94%E8%AE%B0/P3-6%20%E7%B1%BB%E7%9A%84%E5%85%B6%E4%BB%96%E8%AF%AD%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h1 id="类的其他语法"><a href="#类的其他语法" class="headerlink" title="类的其他语法"></a>类的其他语法</h1><hr><h2 id="成员变量"><a href="#成员变量" class="headerlink" title="成员变量"></a>成员变量</h2><ul><li>1、所有类型的局部变量必须初始化，而成员变量声明时候可以不初始化。<ul><li>对成员变量，对于基本数值类型默认初始值为0、false</li><li>String、Person等非基本类型从初始化为null（从命名上看的出来，首字母大写是类的写法）</li><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240809/%E7%B1%BB.6t718xnuqq.webp" alt="类"></li></ul></li><li>2、当成员变量和局部变量（方法的参数也可以看作局部变量）重名的时候，age被看作局部变量，因此为了避免混乱，建议访问类成员变量、方法的时候加上**this.**，在类部门this代表当前对象。<ul><li>**this.**也可以调用当前类的成员方法</li></ul></li></ul><h3 id="null"><a href="#null" class="headerlink" title="null"></a>null</h3><ul><li>1、当一个变量指向null的时候表示<strong>变量不执行任何对象</strong></li><li>2、Java的基本数据类型（byte、short、int、long、float、double、char、boolean）变量不可以被赋值为null<ul><li>其他类（包括String）变量可以被赋值为null</li></ul></li><li>3、对于一个指向null的变量调用如何方法都会报错<ul><li>碰到<strong>NullPointerException</strong>不要慌</li><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240809/%E6%8A%A5%E9%94%99.5fki4wcspu.webp" alt="报错"></li></ul></li></ul><h3 id="public-公有-和protected-受保护的"><a href="#public-公有-和protected-受保护的" class="headerlink" title="public(公有)和protected(受保护的)"></a>public(公有)和protected(受保护的)</h3><ul><li>1、谁都可以访问的叫public；只有本类才能访问的是private。这就是<strong>封装</strong></li><li>2、一般情况下，成员变量声明为private，不希望外部访问的方法也是private，希望别人调用的方法声明为public<br><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240809/public.60u5r7fuba.webp" alt="public"></li></ul>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part3</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P3-5 “搞”对象</title>
    <link href="/2024/08/09/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part3-%E7%AC%94%E8%AE%B0/P3-5%20%E2%80%9C%E6%90%9E%E2%80%9D%E5%AF%B9%E8%B1%A1/"/>
    <url>/2024/08/09/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part3-%E7%AC%94%E8%AE%B0/P3-5%20%E2%80%9C%E6%90%9E%E2%80%9D%E5%AF%B9%E8%B1%A1/</url>
    
    <content type="html"><![CDATA[<h1 id="“搞”对象"><a href="#“搞”对象" class="headerlink" title="“搞”对象"></a>“搞”对象</h1><hr><h2 id="同一个类的不同对象是独立的"><a href="#同一个类的不同对象是独立的" class="headerlink" title="同一个类的不同对象是独立的"></a>同一个类的不同对象是独立的</h2><ul><li>问题：有几个Preson对象呢？<ul><li>答案：2个<br>例子：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java">Person p1=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Person</span>();<span class="hljs-comment">//只有new出来的才是一个新的对象</span><br>p1.setAge(<span class="hljs-number">18</span>);<br>p1.setName(<span class="hljs-string">&quot;Cool&quot;</span>);<br>p1.sayHello();<br><br>Person p2=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Person</span>();<br>p2.setAge(<span class="hljs-number">88</span>);<br>p2.setName(<span class="hljs-string">&quot;X&quot;</span>);<br>p2.sayHello();<br><br>p1.sayHello();<span class="hljs-comment">//18</span><br></code></pre></td></tr></table></figure></li></ul></li></ul><h3 id="复习原始数据类型"><a href="#复习原始数据类型" class="headerlink" title="复习原始数据类型"></a>复习原始数据类型</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">int</span> i= <span class="hljs-number">10</span>;<br><span class="hljs-type">int</span> j=i;<span class="hljs-comment">//把i&quot;当前&quot;的值赋值给j</span><br>i=<span class="hljs-number">20</span>;<span class="hljs-comment">//这是i后来的值，与之前的操作没有关系</span><br>System.out.println(j);<br><br></code></pre></td></tr></table></figure><h2 id="类变量复制"><a href="#类变量复制" class="headerlink" title="类变量复制"></a>类变量复制</h2><ul><li>1、Preson p2&#x3D;p1;  变量p2指向p1”当前”所指向的对象</li><li>2、画对象关系图，分析有几个Preson类的对象<ul><li>1个</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java">Person p1=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Person</span>();<br>p1.setAge(<span class="hljs-number">18</span>);<br>p1.setName(<span class="hljs-string">&quot;Cool&quot;</span>);<br>p1.sayHello();<br>Person p2=p1;<span class="hljs-comment">//Preson p2=p1;  变量p2指向p1&quot;当前&quot;所指向的对象</span><br><span class="hljs-comment">//让p2变量指向p1&quot;当前指向的对象&quot;</span><br>p2.setAge(<span class="hljs-number">80</span>);<br>p2.setName(<span class="hljs-string">&quot;X&quot;</span>);<br>p2.sayHello();<br>p1.sayHello();<span class="hljs-comment">//结果是多少     80</span><br></code></pre></td></tr></table></figure><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240809/%E7%94%BB%E5%9B%BE1.7ax2xgky1i.webp" alt="画图1"></p><h2 id="参数变量赋值"><a href="#参数变量赋值" class="headerlink" title="参数变量赋值"></a>参数变量赋值</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <br>&#123;<br>    Person p1=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Person</span>();<br>    p1.setAge(<span class="hljs-number">18</span>);<br>    p1.setName(<span class="hljs-string">&quot;Cool&quot;</span>);<br>    p1.sayHello();<br>    test(p1);<br>    p1.sayHello();<span class="hljs-comment">//这个值是多少呢？  666 Cool</span><br>&#125;<br><span class="hljs-keyword">static</span>  <span class="hljs-keyword">void</span> <span class="hljs-title function_">test</span><span class="hljs-params">(Person p)</span><br>&#123;<br>    p.setAge(<span class="hljs-number">666</span>);<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h3><ul><li>当Person的变量又重新new了一个新对象的时候，那上次连接的对象就会断开连接，后续练习到新对象上去</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">Person</span> <span class="hljs-variable">p1</span> <span class="hljs-operator">=</span><span class="hljs-keyword">new</span> <span class="hljs-title class_">Person</span>();<br>p1.setAge(<span class="hljs-number">18</span>);<br>p1.setName(<span class="hljs-string">&quot;Cool&quot;</span>);<br>p1.sayHello();<br><br>Person p2=p1;<br>p1=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Person</span>();<br>p1.setAge(<span class="hljs-number">26</span>);<br>p1.setName(<span class="hljs-string">&quot;X&quot;</span>);<br>p1.sayHello();<span class="hljs-comment">//这个值是什么呢？  26</span><br><br>p2.sayHello();<span class="hljs-comment">//这个值是什么呢？  18</span><br></code></pre></td></tr></table></figure><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240809/%E7%94%BB%E5%9B%BE2.7p7hux8hw.webp" alt="画图2"></p>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part3</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P3-4 类的基本语法</title>
    <link href="/2024/08/09/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part3-%E7%AC%94%E8%AE%B0/P3-4%20%E7%B1%BB%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/"/>
    <url>/2024/08/09/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part3-%E7%AC%94%E8%AE%B0/P3-4%20%E7%B1%BB%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h1 id="类的基本语法"><a href="#类的基本语法" class="headerlink" title="类的基本语法"></a>类的基本语法</h1><hr><h2 id="类的基础知识"><a href="#类的基础知识" class="headerlink" title="类的基础知识"></a>类的基础知识</h2><ul><li>1、private：只能类内部访问；public：其他类也可以访问</li><li>2、类的定义由成员变量和方法组成<ul><li>方法：动作<ul><li>大多数情况都是public</li></ul></li><li>成员变量：状态<ul><li>大多数情况都是private</li></ul></li></ul></li></ul><h2 id="Java中定义一个类的语法"><a href="#Java中定义一个类的语法" class="headerlink" title="Java中定义一个类的语法"></a>Java中定义一个类的语法</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Person</span> <br>&#123;<br>    <span class="hljs-keyword">private</span>  <span class="hljs-type">int</span> age;<span class="hljs-comment">//成员变量</span><br>    <span class="hljs-keyword">private</span> String name;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setAge</span><span class="hljs-params">(<span class="hljs-type">int</span> value)</span><br>    &#123;<br>        <span class="hljs-built_in">this</span>.age = value;<span class="hljs-comment">//给当前对象赋值</span><br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setName</span><span class="hljs-params">(String value)</span><br>    &#123;<br>        <span class="hljs-built_in">this</span>.name=value;<br>    &#125;<br>    <span class="hljs-keyword">public</span>  <span class="hljs-keyword">void</span> <span class="hljs-title function_">sayHello</span><span class="hljs-params">()</span><br>    &#123;<br>        System.out.println(<span class="hljs-string">&quot;大家好，我是&quot;</span>+<span class="hljs-built_in">this</span>.name+<span class="hljs-string">&quot;,我今年&quot;</span>+<span class="hljs-built_in">this</span>.age+<span class="hljs-string">&quot;岁了。&quot;</span>);<span class="hljs-comment">//取值</span><br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">hi</span><span class="hljs-params">()</span><br>    &#123;<br>        <span class="hljs-comment">//static方法</span><br>        System.out.println(<span class="hljs-string">&quot;Hello wrold!&quot;</span>);<br>        <span class="hljs-comment">//this.age=5;  static方法中不能直接访问非static成员</span><br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="创建类的对象"><a href="#创建类的对象" class="headerlink" title="创建类的对象"></a>创建类的对象</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java">Person p1=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Person</span>();<br><span class="hljs-comment">//Preson p1:声明Preson类型的的变量p1</span><br><span class="hljs-comment">//new Person():创建Person类的一个对象 或者说是 把Preson实例化</span><br><span class="hljs-comment">//Person p1=new Person(): 1.声明Preson类型的的变量p1 2.创建Person类的一个对象 3.把变量p1指向这个对象</span><br><br></code></pre></td></tr></table></figure><h3 id="方法调用"><a href="#方法调用" class="headerlink" title="方法调用"></a>方法调用</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">p1.setAge(<span class="hljs-number">18</span>);<span class="hljs-comment">//调用p1变量“当前所指向对象”的setAge方法</span><br></code></pre></td></tr></table></figure><h2 id="类的另一种解读"><a href="#类的另一种解读" class="headerlink" title="类的另一种解读"></a>类的另一种解读</h2><ul><li>类是把对象的若干个状态(成员变量)和相关的方法聚集到一个模板中的机制</li><li>new一个类就是根据类的模板实例化出来一个对象<ul><li>不同的对象之间互不干扰</li></ul></li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240809/new.esfd7hugj.webp" alt="new"></p><h2 id="static"><a href="#static" class="headerlink" title="static"></a>static</h2><ul><li>static方法和对象无关，因此可以直接通过类名调用<ul><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240809/%E7%B1%BB%E5%90%8D%E8%B0%83%E7%94%A8.5j442hv6i4.webp" alt="类名调用"></li><li>直接用类目. 去访问static方法</li><li>用p1.hi()的话，是没有意义的，因为static方法与对象无关</li><li>static方法是不依赖于类的成员变量的</li><li>好比:String也有static方法</li><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240809/%E7%B1%BB%E7%9B%AE%E8%B0%83%E7%94%A81.3gobeg3jn1.webp" alt="类目调用1"></li></ul></li><li>非static方法需要通过对象调用<ul><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240809/%E6%96%B9%E6%B3%95%E8%B0%83%E7%94%A8.54xobmmvn0.webp" alt="方法调用"></li><li>非static方法是依赖于成员变量的，所以不能直接使用类目去调用</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">hi</span><span class="hljs-params">()</span><br>&#123;<br>    System.out.println(<span class="hljs-string">&quot;Hello wrold!&quot;</span>);<br>    <span class="hljs-comment">//this.age=5;  static方法中不能直接访问非static成员</span><br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part3</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P3-3 面向对象概念</title>
    <link href="/2024/08/09/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part3-%E7%AC%94%E8%AE%B0/P3-3%20%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E6%A6%82%E5%BF%B5/"/>
    <url>/2024/08/09/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part3-%E7%AC%94%E8%AE%B0/P3-3%20%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E6%A6%82%E5%BF%B5/</url>
    
    <content type="html"><![CDATA[<h1 id="面向对象概念"><a href="#面向对象概念" class="headerlink" title="面向对象概念"></a>面向对象概念</h1><hr><blockquote><p>说明<br>1、for、while、变量、方法、数组等这些都是“面向过程”的语法，Java还提供了“面向对象”的语法。“面向对象”不是用来替代“面向过程”的，而是一个升华和补充。<br>2、初学者不可能完全搞明白“面向对象”，搞明白语法即可</p></blockquote><h2 id="类和对象"><a href="#类和对象" class="headerlink" title="类和对象"></a>类和对象</h2><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240809/%E7%B1%BB%E5%92%8C%E5%AF%B9%E8%B1%A1.7sn4ltpwvd.webp" alt="类和对象"></p><h2 id="对象发送消息"><a href="#对象发送消息" class="headerlink" title="对象发送消息"></a>对象发送消息</h2><ul><li>消息：不同的对象之间可以互相发送“消息”<ul><li>好比下面这张图！</li><li>关羽是对象(人类的实例)；马也是对象（动物类中马的实例）</li><li>比如关羽可以向马 发出消息：驾、驾、驾 ；冲….</li></ul></li><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240809/%E5%AF%B9%E8%B1%A1.58ha96rtto.webp" alt="对象"></li></ul><h2 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h2><ul><li>马自身把步伐、呼吸、进食等“封装”起来。其他的对象可以向马发送消息<ul><li>比如发送：喝水，追等</li></ul></li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240809/%E5%B0%81%E8%A3%85.7i0asoiaz5.webp" alt="封装"></p><h2 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h2><ul><li>不同的“马”类对应的实例属性都不相同</li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240809/%E5%B1%9E%E6%80%A7.45hkyb2i12.webp" alt="属性"></p><h2 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h2><ul><li>继承是用来简化类型声明的</li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240809/%E7%BB%A7%E6%89%BF.73tv1t2duw.webp" alt="继承"></p>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part3</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P3-2 方法的返回值</title>
    <link href="/2024/08/09/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part3-%E7%AC%94%E8%AE%B0/P3-2%20%E6%96%B9%E6%B3%95%E7%9A%84%E8%BF%94%E5%9B%9E%E5%80%BC/"/>
    <url>/2024/08/09/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part3-%E7%AC%94%E8%AE%B0/P3-2%20%E6%96%B9%E6%B3%95%E7%9A%84%E8%BF%94%E5%9B%9E%E5%80%BC/</url>
    
    <content type="html"><![CDATA[<h1 id="方法的返回值"><a href="#方法的返回值" class="headerlink" title="方法的返回值"></a>方法的返回值</h1><hr><h2 id="return"><a href="#return" class="headerlink" title="return"></a>return</h2><ul><li>1、对于有返回值方法，需要显示指定返回值类型，这类方法的返回值通过return语句给出结果</li><li>2、对于没有返回值的方法，要想结束方法，直接用return;就可以。return下面的语句将不再执行<ul><li>用来终止当前函数&#x2F;方法</li></ul></li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240809/return.51e2dpaj44.webp" alt="return"></p><h3 id="常见问题1"><a href="#常见问题1" class="headerlink" title="常见问题1"></a>常见问题1</h3><ul><li>1、如果方法有返回值，则return后的数据类型必须和返回值的类型一致。并且在所有情况下，方法都要返回数据</li></ul><h3 id="常见问题2"><a href="#常见问题2" class="headerlink" title="常见问题2"></a>常见问题2</h3><ul><li>return只是结束当前的方法，并不会结束程序；只有main方法执行完成后，程序才会结束</li></ul><hr><h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><ul><li>1、计算两个数的和，有返回值</li><li>2、计算给定的两个数中的最大值，有返回值</li><li>3、接收一个文本文件名，读取并输出文件的内容，如果文件不存在，则输出“文件不存在”，无返回值</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//计算两个数的和，有返回值   </span><br><span class="hljs-keyword">static</span> <span class="hljs-type">int</span> <span class="hljs-title function_">sum</span><span class="hljs-params">(<span class="hljs-type">int</span> i1,<span class="hljs-type">int</span> i2)</span><br>&#123;<br>    <span class="hljs-keyword">return</span> i1+i2;<br>&#125;<br></code></pre></td></tr></table></figure><hr><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs java"> <span class="hljs-comment">//计算给定的两个数中的最大值，有返回值</span><br><span class="hljs-keyword">static</span> <span class="hljs-type">int</span> <span class="hljs-title function_">compare</span><span class="hljs-params">(<span class="hljs-type">int</span> i1,<span class="hljs-type">int</span> i2)</span><br>&#123;<br>    <span class="hljs-keyword">if</span> (i1&gt;i2)<br>    &#123;<br>        System.out.println(<span class="hljs-string">&quot;最大值为：&quot;</span>+i1);<br>        <span class="hljs-keyword">return</span> i1;<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        System.out.println(<span class="hljs-string">&quot;最大值为：&quot;</span>+i2);<br>        <span class="hljs-keyword">return</span> i2;<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><hr><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//接收一个文本文件名，读取并输出文件的内容，如果文件不存在，则输出“文件不存在”</span><br><span class="hljs-keyword">static</span>  <span class="hljs-keyword">void</span> <span class="hljs-title function_">outPut</span><span class="hljs-params">(String  filename)</span><br>&#123;<br><span class="hljs-type">File</span> <span class="hljs-variable">file</span> <span class="hljs-operator">=</span><span class="hljs-keyword">new</span> <span class="hljs-title class_">File</span>(filename);<br><span class="hljs-comment">/*if (file.exists()==false)//这个文件是否存在。if(!file.exists()) 另外一种写法</span><br><span class="hljs-comment">&#123;</span><br><span class="hljs-comment">    System.out.println(&quot;文件不存在&quot;);</span><br><span class="hljs-comment">&#125;</span><br><span class="hljs-comment">else</span><br><span class="hljs-comment">&#123;</span><br><span class="hljs-comment">    String s = IOHelpers.readAllText(file);</span><br><span class="hljs-comment">    System.out.println(s);</span><br><span class="hljs-comment">&#125;*/</span><br><br>&#125;<br></code></pre></td></tr></table></figure><hr><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//这一种写法也可以</span><br><span class="hljs-keyword">if</span> (file.exists()==<span class="hljs-literal">false</span>)<span class="hljs-comment">//这个文件是否存在。if(!file.exists()) 另外一种写法</span><br>&#123;<br>    System.out.println(<span class="hljs-string">&quot;文件不存在&quot;</span>);<br>    <span class="hljs-keyword">return</span>;<br>&#125;<br>    <span class="hljs-type">String</span> <span class="hljs-variable">s</span> <span class="hljs-operator">=</span> IOHelpers.readAllText(file);<br>    System.out.println(s);<br><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part3</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P3-1 编写自己的方法</title>
    <link href="/2024/08/09/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part3-%E7%AC%94%E8%AE%B0/P3-1%20%E7%BC%96%E5%86%99%E8%87%AA%E5%B7%B1%E7%9A%84%E6%96%B9%E6%B3%95/"/>
    <url>/2024/08/09/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part3-%E7%AC%94%E8%AE%B0/P3-1%20%E7%BC%96%E5%86%99%E8%87%AA%E5%B7%B1%E7%9A%84%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h1 id="编写自己的方法"><a href="#编写自己的方法" class="headerlink" title="编写自己的方法"></a>编写自己的方法</h1><hr><blockquote><p>开始学习更多Java语法：编写方法、类、JavaBean、简单的继承？Integer和int等；List、Map等，简单的泛型<br>这部分内容不能拿，但是枯燥，而且“这有啥用？”</p></blockquote><h2 id="复习：方法"><a href="#复习：方法" class="headerlink" title="复习：方法"></a>复习：方法</h2><ul><li>1、方法：一段可以重复使用的代码。相当于一个“命令”、“积木块”</li><li>2、方法由“名字”、“参数”、“返回值”组成</li><li>3、方法既可以由参数，也可以没有参数</li><li>4、方法既可以由返回值，也可以没有返回值</li><li>5、方法可以由多个重名的“重载方法”</li></ul><h2 id="定义自己的方法"><a href="#定义自己的方法" class="headerlink" title="定义自己的方法"></a>定义自己的方法</h2><ul><li>1、从“使用”到“创造”<ul><li>从学习使用别人的方法–&gt;自己有写方法的能力，而不是一味的只会使用别人的；当别人写的方法满足不了的时候，就需要自己去创造了</li></ul></li><li>2、方法的一般格式：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">static</span> 返回类型名 方法名(参数列表)<br>&#123;<br>    语句;<span class="hljs-comment">//方法体</span><br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>如果方法没有返回值，可以将类型名写为void</p></blockquote><h3 id="常见问题1"><a href="#常见问题1" class="headerlink" title="常见问题1"></a>常见问题1</h3><ul><li>赋值的顺序的与参数的顺序有关，与变量名无关</li><li>主要看调用方法时的填写的参数顺序</li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240809/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%981.13lowzn8k8.webp" alt="常见问题1"></p><h3 id="常见问题2"><a href="#常见问题2" class="headerlink" title="常见问题2"></a>常见问题2</h3><ul><li>定义在方法内部的变量为局部变量<ul><li>出了方法就用不了这个变量了</li></ul></li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240809/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%982.3d4pgh7z15.webp" alt="常见问题2"></p><h3 id="常见问题3"><a href="#常见问题3" class="headerlink" title="常见问题3"></a>常见问题3</h3><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240809/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%983.60u5quivrm.webp" alt="常见问题3"></p>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part3</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P2-13 案例：计算星座</title>
    <link href="/2024/08/07/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part2-%E7%AC%94%E8%AE%B0/P2-13%20%E6%A1%88%E4%BE%8B%EF%BC%9A%E8%AE%A1%E7%AE%97%E6%98%9F%E5%BA%A7/"/>
    <url>/2024/08/07/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part2-%E7%AC%94%E8%AE%B0/P2-13%20%E6%A1%88%E4%BE%8B%EF%BC%9A%E8%AE%A1%E7%AE%97%E6%98%9F%E5%BA%A7/</url>
    
    <content type="html"><![CDATA[<h1 id="案例：计算星座"><a href="#案例：计算星座" class="headerlink" title="案例：计算星座"></a>案例：计算星座</h1><hr><h2 id="需求说明"><a href="#需求说明" class="headerlink" title="需求说明"></a>需求说明</h2><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240807/12-%E9%9C%80%E6%B1%82.esfa7oj2u.webp" alt="12-需求"></p><blockquote><p>思路分析<br>1.弹出一个窗口，让用户去选择公历生日<br>2.用年月日去接收生日数据<br>3.用if去判断月份，然后进行输出，<br>4.弹出提示用户是什么星座的</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//转换成日期的判断，简单一点</span><br><span class="hljs-type">LocalDate</span> <span class="hljs-variable">date</span> <span class="hljs-operator">=</span> GUI.dateBox(<span class="hljs-string">&quot;请选择你的生日&quot;</span>);<br><span class="hljs-type">int</span> <span class="hljs-variable">month</span> <span class="hljs-operator">=</span> date.getMonthValue();<span class="hljs-comment">//获取月份</span><br><span class="hljs-type">int</span> <span class="hljs-variable">day</span> <span class="hljs-operator">=</span> date.getDayOfMonth();<span class="hljs-comment">//获取第几天</span><br><span class="hljs-type">int</span> <span class="hljs-variable">sum</span> <span class="hljs-operator">=</span> month*<span class="hljs-number">100</span>+day;<br>System.out.println(sum);<br><br><span class="hljs-keyword">if</span> (sum&gt;=<span class="hljs-number">120</span>&amp;&amp;sum&lt;=<span class="hljs-number">218</span>)<br>&#123;<br>    GUI.msgBox(<span class="hljs-string">&quot;你是水瓶座&quot;</span>);<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (sum&gt;=<span class="hljs-number">219</span>&amp;&amp;sum&lt;=<span class="hljs-number">320</span>)<br>&#123;<br>    GUI.msgBox(<span class="hljs-string">&quot;你是双鱼座&quot;</span>);<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (sum&gt;=<span class="hljs-number">321</span>&amp;&amp;sum&lt;=<span class="hljs-number">419</span>)<br>&#123;<br>    GUI.msgBox(<span class="hljs-string">&quot;你是白羊座&quot;</span>);<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (sum&gt;=<span class="hljs-number">420</span>&amp;&amp;sum&lt;=<span class="hljs-number">520</span>)<br>&#123;<br>    GUI.msgBox(<span class="hljs-string">&quot;你是金牛座&quot;</span>);<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (sum&gt;=<span class="hljs-number">521</span>&amp;&amp;sum&lt;=<span class="hljs-number">621</span>)<br>&#123;<br>    GUI.msgBox(<span class="hljs-string">&quot;你是双子座&quot;</span>);<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (sum&gt;=<span class="hljs-number">622</span>&amp;&amp;sum&lt;=<span class="hljs-number">722</span>)<br>&#123;<br>    GUI.msgBox(<span class="hljs-string">&quot;你是巨蟹座&quot;</span>);<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (sum&gt;=<span class="hljs-number">723</span>&amp;&amp;sum&lt;=<span class="hljs-number">822</span>)<br>&#123;<br>    GUI.msgBox(<span class="hljs-string">&quot;你是狮子座&quot;</span>);<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (sum&gt;=<span class="hljs-number">823</span>&amp;&amp;sum&lt;=<span class="hljs-number">922</span>)<br>&#123;<br>    GUI.msgBox(<span class="hljs-string">&quot;你是处女座&quot;</span>);<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (sum&gt;=<span class="hljs-number">923</span>&amp;&amp;sum&lt;=<span class="hljs-number">1023</span>)<br>&#123;<br>    GUI.msgBox(<span class="hljs-string">&quot;你是天秤座&quot;</span>);<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (sum&gt;=<span class="hljs-number">1024</span>&amp;&amp;sum&lt;=<span class="hljs-number">1121</span>)<br>&#123;<br>    GUI.msgBox(<span class="hljs-string">&quot;你是天蝎座&quot;</span>);<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (sum&gt;=<span class="hljs-number">1122</span>&amp;&amp;sum&lt;=<span class="hljs-number">1221</span>)<br>&#123;<br>    GUI.msgBox(<span class="hljs-string">&quot;你是射手座&quot;</span>);<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>    GUI.msgBox(<span class="hljs-string">&quot;你是魔羯座&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><hr><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//月份比较</span><br><span class="hljs-type">LocalDate</span> <span class="hljs-variable">date</span> <span class="hljs-operator">=</span> GUI.dateBox(<span class="hljs-string">&quot;请选择你的生日&quot;</span>);<br><span class="hljs-type">int</span> <span class="hljs-variable">month</span> <span class="hljs-operator">=</span> date.getMonthValue();<span class="hljs-comment">//获取月</span><br><span class="hljs-type">int</span> <span class="hljs-variable">day</span> <span class="hljs-operator">=</span> date.getDayOfMonth();<span class="hljs-comment">//获取</span><br><br><span class="hljs-keyword">if</span> (month==<span class="hljs-number">1</span>)<br>&#123;<br>    <span class="hljs-keyword">if</span> (day&gt;=<span class="hljs-number">20</span>)<br>    &#123;<br>        GUI.msgBox(<span class="hljs-string">&quot;你是水瓶座&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        GUI.msgBox(<span class="hljs-string">&quot;你是魔羯座&quot;</span>);<br>    &#125;<br><br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (month==<span class="hljs-number">2</span>)<br>&#123;<br>    <span class="hljs-keyword">if</span> (day&gt;=<span class="hljs-number">19</span>)<br>    &#123;<br>        GUI.msgBox(<span class="hljs-string">&quot;你是双鱼座&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        GUI.msgBox(<span class="hljs-string">&quot;你是水瓶座&quot;</span>);<br>    &#125;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (month==<span class="hljs-number">3</span>)<br>&#123;<br>    <span class="hljs-keyword">if</span> (day&gt;=<span class="hljs-number">21</span>)<br>    &#123;<br>        GUI.msgBox(<span class="hljs-string">&quot;你是白羊座&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        GUI.msgBox(<span class="hljs-string">&quot;你是双鱼座&quot;</span>);<br>    &#125;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (month==<span class="hljs-number">4</span>)<br>&#123;<br>    <span class="hljs-keyword">if</span> (day&gt;=<span class="hljs-number">20</span>)<br>    &#123;<br>        GUI.msgBox(<span class="hljs-string">&quot;你是金牛座&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        GUI.msgBox(<span class="hljs-string">&quot;你是白羊座&quot;</span>);<br>    &#125;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (month==<span class="hljs-number">5</span>)<br>&#123;<br>    <span class="hljs-keyword">if</span> (day&gt;=<span class="hljs-number">21</span>)<br>    &#123;<br>        GUI.msgBox(<span class="hljs-string">&quot;你是双子座&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        GUI.msgBox(<span class="hljs-string">&quot;你是金牛座&quot;</span>);<br>    &#125;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (month==<span class="hljs-number">6</span>)<br>&#123;<br>    <span class="hljs-keyword">if</span> (day&gt;=<span class="hljs-number">22</span>)<br>    &#123;<br>        GUI.msgBox(<span class="hljs-string">&quot;你是巨蟹座&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        GUI.msgBox(<span class="hljs-string">&quot;你是双子座&quot;</span>);<br>    &#125;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (month==<span class="hljs-number">7</span>)<br>&#123;<br>    <span class="hljs-keyword">if</span> (day&gt;=<span class="hljs-number">23</span>)<br>    &#123;<br>        GUI.msgBox(<span class="hljs-string">&quot;你是狮子座&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        GUI.msgBox(<span class="hljs-string">&quot;你是巨蟹座&quot;</span>);<br>    &#125;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (month==<span class="hljs-number">8</span>)<br>&#123;<br>    <span class="hljs-keyword">if</span> (day&gt;=<span class="hljs-number">23</span>)<br>    &#123;<br>        GUI.msgBox(<span class="hljs-string">&quot;你是处女座&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        GUI.msgBox(<span class="hljs-string">&quot;你是狮子座&quot;</span>);<br>    &#125;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (month==<span class="hljs-number">9</span>)<br>&#123;<br>    <span class="hljs-keyword">if</span> (day&gt;=<span class="hljs-number">23</span>)<br>    &#123;<br>        GUI.msgBox(<span class="hljs-string">&quot;你是天秤座&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        GUI.msgBox(<span class="hljs-string">&quot;你是处女座&quot;</span>);<br>    &#125;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (month==<span class="hljs-number">10</span>)<br>&#123;<br>    <span class="hljs-keyword">if</span> (day&gt;=<span class="hljs-number">24</span>)<br>    &#123;<br>        GUI.msgBox(<span class="hljs-string">&quot;你是天蝎座&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        GUI.msgBox(<span class="hljs-string">&quot;你是天秤座&quot;</span>);<br>    &#125;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (month==<span class="hljs-number">11</span>)<br>&#123;<br>    <span class="hljs-keyword">if</span> (day&gt;=<span class="hljs-number">22</span>)<br>    &#123;<br>        GUI.msgBox(<span class="hljs-string">&quot;你是射手座&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        GUI.msgBox(<span class="hljs-string">&quot;你是天蝎座&quot;</span>);<br>    &#125;<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>    <span class="hljs-keyword">if</span> (day&gt;=<span class="hljs-number">22</span>)<br>    &#123;<br>        GUI.msgBox(<span class="hljs-string">&quot;你是魔羯座&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        GUI.msgBox(<span class="hljs-string">&quot;你是射手座&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part2</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P2-12    案例：统计字数</title>
    <link href="/2024/08/07/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part2-%E7%AC%94%E8%AE%B0/P2-12%20%E6%A1%88%E4%BE%8B%EF%BC%9A%E7%BB%9F%E8%AE%A1%E5%AD%97%E6%95%B0/"/>
    <url>/2024/08/07/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part2-%E7%AC%94%E8%AE%B0/P2-12%20%E6%A1%88%E4%BE%8B%EF%BC%9A%E7%BB%9F%E8%AE%A1%E5%AD%97%E6%95%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="案例：统计英语单词个数"><a href="#案例：统计英语单词个数" class="headerlink" title="案例：统计英语单词个数"></a>案例：统计英语单词个数</h1><hr><h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><ul><li>1、让用户选择一个文件夹</li><li>2、程序扫描文件夹下所有的txt文件，统计总的“英文单词个数”</li></ul><p><strong>思路(写编程前一定要有思路)</strong><br>然后遇到问题就<strong>逢山开道，遇水搭桥</strong></p><blockquote><p>1.弹出一个文件夹选择对话框，让用户去选择<br>2.扫描文件夹下所有的txt文件，有可能是文件夹后代都需要扫描<br>3.统计每一个txt文件中的英文单词个数，统计完txt文件后在相加 即可</p></blockquote><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240807/%E6%80%9D%E8%B7%AF%E5%88%86%E6%9E%90.2h87y2we9g.webp" alt="思路分析"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//自己写的，难点就是正则表达式</span><br><span class="hljs-type">String</span> <span class="hljs-variable">srcdir</span> <span class="hljs-operator">=</span> GUI.dirOpenBox(<span class="hljs-string">&quot;请选择源文件夹&quot;</span>);<br>String[] files = IOHelpers.getFilesRecursively(srcdir,<span class="hljs-string">&quot;txt&quot;</span>);<span class="hljs-comment">//遍历出txt文件</span><br><span class="hljs-type">int</span> <span class="hljs-variable">sum</span> <span class="hljs-operator">=</span><span class="hljs-number">0</span>;<span class="hljs-comment">//单词总个数</span><br><span class="hljs-keyword">for</span> (String file:files)<br>&#123;<br>    <span class="hljs-type">String</span> <span class="hljs-variable">str</span> <span class="hljs-operator">=</span> IOHelpers.readAllText(file);<span class="hljs-comment">//读取txt文件内容</span><br>    String[] strs = str.split(<span class="hljs-string">&quot;\\s|\\.|\\?|\\!|,&quot;</span>);<span class="hljs-comment">//分割成单个单词</span><br>    <span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> strs.length;<br>    sum =sum+i;<br>&#125;<br>System.out.println(<span class="hljs-string">&quot;这个文件夹下&quot;</span>+srcdir+<span class="hljs-string">&quot;一共有&quot;</span>+sum+<span class="hljs-string">&quot;个单词&quot;</span>);<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part2</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P2-11 案例：拷贝文件夹</title>
    <link href="/2024/08/06/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part2-%E7%AC%94%E8%AE%B0/P2-11%20%E6%A1%88%E4%BE%8B%EF%BC%9A%E6%8B%B7%E8%B4%9D%E6%96%87%E4%BB%B6%E5%A4%B9/"/>
    <url>/2024/08/06/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part2-%E7%AC%94%E8%AE%B0/P2-11%20%E6%A1%88%E4%BE%8B%EF%BC%9A%E6%8B%B7%E8%B4%9D%E6%96%87%E4%BB%B6%E5%A4%B9/</url>
    
    <content type="html"><![CDATA[<h1 id="案例：拷贝文件夹"><a href="#案例：拷贝文件夹" class="headerlink" title="案例：拷贝文件夹"></a>案例：拷贝文件夹</h1><hr><h2 id="需求说明"><a href="#需求说明" class="headerlink" title="需求说明"></a>需求说明</h2><ul><li>1、让用户分别选择源文件夹和目标文件夹，然后把源文件夹所有文件都拷贝到目标文件夹</li><li>2、考虑文件可能会很多，所以要显示拷贝进度</li></ul><blockquote><p>思路<br>1.弹出选择源文件夹<br>2.弹出选择目标文件夹<br>3.把源文件夹所有文件拷贝到目标文件夹<br>4.要显示拷贝进度（因为文件有可能会很多）</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">String</span> <span class="hljs-variable">srcdir</span> <span class="hljs-operator">=</span> GUI.dirOpenBox(<span class="hljs-string">&quot;请选择源文件夹&quot;</span>);<br><span class="hljs-type">String</span> <span class="hljs-variable">destdir</span> <span class="hljs-operator">=</span> GUI.dirSaveBox(<span class="hljs-string">&quot;请选择目标文件夹&quot;</span>);<br><span class="hljs-type">File</span> <span class="hljs-variable">srcFile</span> <span class="hljs-operator">=</span><span class="hljs-keyword">new</span> <span class="hljs-title class_">File</span>(srcdir);<br>File[] files = srcFile.listFiles();<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span><span class="hljs-number">0</span>;i&lt; files.length;i++)<span class="hljs-comment">//用到序号，for循环好找</span><br>&#123;<br>    <span class="hljs-type">File</span> <span class="hljs-variable">file</span> <span class="hljs-operator">=</span> files[i];<br>    <span class="hljs-keyword">if</span> (file.isDirectory())<br>    &#123;<br>        <span class="hljs-keyword">continue</span>;<br>    &#125;<br>    GUI.showProgressDialog(<span class="hljs-string">&quot;正在拷贝&quot;</span>+file.getName(),i,files.length);<br>    <span class="hljs-type">String</span> <span class="hljs-variable">destFilename</span> <span class="hljs-operator">=</span> destdir+<span class="hljs-string">&quot;/&quot;</span>+file.getName();<br>    <span class="hljs-type">byte</span>[] bytes = IOHelpers.readAllBytes(file);<span class="hljs-comment">//读取路径文件的内容</span><br>    IOHelpers.writeAllBytes(destFilename,bytes);<span class="hljs-comment">//写入目标文件夹</span><br>&#125;<br>GUI.closeProgressDialog();<br>GUI.msgBox(<span class="hljs-string">&quot;搞定&quot;</span>);<br><br></code></pre></td></tr></table></figure><p>分析</p><ul><li>最佳写法肯定选择for循环，因为要有进度条，用序号去搞进度条</li><li>后面也有for增强的写法，但工作中很少看到</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">String</span> <span class="hljs-variable">srcdir</span> <span class="hljs-operator">=</span> GUI.dirOpenBox(<span class="hljs-string">&quot;请选择源文件夹&quot;</span>);<br><span class="hljs-type">String</span> <span class="hljs-variable">destdir</span> <span class="hljs-operator">=</span> GUI.dirSaveBox(<span class="hljs-string">&quot;请选择目标文件夹&quot;</span>);<br><span class="hljs-type">int</span> i= <span class="hljs-number">0</span>;<span class="hljs-comment">//序号</span><br><span class="hljs-type">File</span> <span class="hljs-variable">srcFile</span> <span class="hljs-operator">=</span><span class="hljs-keyword">new</span> <span class="hljs-title class_">File</span>(srcdir);<br>File[] files = srcFile.listFiles();<br><span class="hljs-keyword">for</span> (File file :srcFile.listFiles())<br>&#123;<br>    <span class="hljs-keyword">if</span> (file.isDirectory())<br>    &#123;<br>        <span class="hljs-keyword">continue</span>;<br>    &#125;<br>    GUI.showProgressDialog(<span class="hljs-string">&quot;正在拷贝&quot;</span>+file.getName(),i,files.length);<br>    <span class="hljs-type">String</span> <span class="hljs-variable">destFilename</span> <span class="hljs-operator">=</span> destdir+<span class="hljs-string">&quot;/&quot;</span>+file.getName();<br>    <span class="hljs-type">byte</span>[] bytes = IOHelpers.readAllBytes(file);<span class="hljs-comment">//读取路径文件的内容</span><br>    IOHelpers.writeAllBytes(destFilename,bytes);<span class="hljs-comment">//写入目标文件夹</span><br>    i++;<span class="hljs-comment">//序号自增</span><br>&#125;<br>GUI.closeProgressDialog();<br>GUI.msgBox(<span class="hljs-string">&quot;搞定&quot;</span>);<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part2</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P2-10  案例：保存用户信息到文件</title>
    <link href="/2024/08/06/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part2-%E7%AC%94%E8%AE%B0/P2-10%20%E6%A1%88%E4%BE%8B%EF%BC%9A%E4%BF%9D%E5%AD%98%E7%94%A8%E6%88%B7%E4%BF%A1%E6%81%AF%E5%88%B0%E6%96%87%E4%BB%B6/"/>
    <url>/2024/08/06/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part2-%E7%AC%94%E8%AE%B0/P2-10%20%E6%A1%88%E4%BE%8B%EF%BC%9A%E4%BF%9D%E5%AD%98%E7%94%A8%E6%88%B7%E4%BF%A1%E6%81%AF%E5%88%B0%E6%96%87%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<h1 id="案例：保存用户信息到文件"><a href="#案例：保存用户信息到文件" class="headerlink" title="案例：保存用户信息到文件"></a>案例：保存用户信息到文件</h1><hr><h2 id="GUI案例"><a href="#GUI案例" class="headerlink" title="GUI案例"></a>GUI案例</h2><ul><li>1、首先提示选择一个文件夹</li><li>2、然后用户输入个人信息，保存到文件，以姓名为文件名保存到第一步的文件夹下，保存完一个后，提示是否继续输入，如果继续输入，则重复2；如果不继续则程序结束。</li></ul><blockquote><p>思路<br>1.先提示选择文件夹<br>2.让用户输入个人信息，比如：姓名，身高，体重，手机号。输入完成后保存到指定的文件夹的文件中<br>3.提示是否继续输入信息， 继续输入则重复，不继续则程序结束</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//自己写的</span><br><span class="hljs-type">String</span> <span class="hljs-variable">fileName</span> <span class="hljs-operator">=</span> GUI.dirOpenBox(<span class="hljs-string">&quot;请选择保存的文件夹&quot;</span>);<span class="hljs-comment">//获取文件夹路径</span><br>String Tips=<span class="hljs-string">&quot;继续&quot;</span>;<br><span class="hljs-keyword">while</span> (Tips.equals(<span class="hljs-string">&quot;继续&quot;</span>))<br>&#123;<br>    String[] strs = GUI.multiInputBox(<span class="hljs-string">&quot;请输入您的个人信息，我这边帮您注册&quot;</span>,<span class="hljs-string">&quot;姓名&quot;</span>,<span class="hljs-string">&quot;手机号&quot;</span>,<span class="hljs-string">&quot;账号&quot;</span>,<span class="hljs-string">&quot;密码&quot;</span>);<br>    <span class="hljs-type">String</span> <span class="hljs-variable">name</span> <span class="hljs-operator">=</span>strs[<span class="hljs-number">0</span>];<br>    <span class="hljs-type">String</span> <span class="hljs-variable">phone</span> <span class="hljs-operator">=</span> strs[<span class="hljs-number">1</span>];<br>    String 账号 = strs[<span class="hljs-number">2</span>];<br>    <span class="hljs-type">String</span> <span class="hljs-variable">password</span> <span class="hljs-operator">=</span> strs[<span class="hljs-number">3</span>];<br>    <span class="hljs-type">String</span> <span class="hljs-variable">msg</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;姓名：&quot;</span>+name+<span class="hljs-string">&quot;\n&quot;</span>+<br>            <span class="hljs-string">&quot;手机号：&quot;</span>+phone+<span class="hljs-string">&quot;\n&quot;</span>+<br>            <span class="hljs-string">&quot;账号：&quot;</span>+账号+<span class="hljs-string">&quot;\n&quot;</span>+<br>            <span class="hljs-string">&quot;密码:&quot;</span>+password;<br>    <span class="hljs-type">String</span> <span class="hljs-variable">outputFileName</span> <span class="hljs-operator">=</span> fileName+<span class="hljs-string">&quot;/&quot;</span>+name+<span class="hljs-string">&quot;.txt&quot;</span>;<br>    IOHelpers.writeAllText(outputFileName,msg);<br>    Tips= GUI.buttonsBox(<span class="hljs-string">&quot;是否继续录入信息？&quot;</span>,<span class="hljs-string">&quot;继续&quot;</span>,<span class="hljs-string">&quot;不继续&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>分析</p><ul><li>1.这种选择不是最佳的选择</li><li>2.账号的变量最好是英文</li><li>3.Tips变量的多余</li></ul><hr><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">do</span> &#123;<br>        String[] strs = GUI.multiInputBox(<span class="hljs-string">&quot;请输入您的个人信息，我这边帮您注册&quot;</span>,<span class="hljs-string">&quot;姓名&quot;</span>,<span class="hljs-string">&quot;手机号&quot;</span>,<span class="hljs-string">&quot;账号&quot;</span>,<span class="hljs-string">&quot;密码&quot;</span>);<br>        <span class="hljs-type">String</span> <span class="hljs-variable">name</span> <span class="hljs-operator">=</span>strs[<span class="hljs-number">0</span>];<br>        <span class="hljs-type">String</span> <span class="hljs-variable">phone</span> <span class="hljs-operator">=</span> strs[<span class="hljs-number">1</span>];<br>        <span class="hljs-type">String</span> <span class="hljs-variable">account</span> <span class="hljs-operator">=</span> strs[<span class="hljs-number">2</span>];<br>        <span class="hljs-type">String</span> <span class="hljs-variable">password</span> <span class="hljs-operator">=</span> strs[<span class="hljs-number">3</span>];<br>        <span class="hljs-type">String</span> <span class="hljs-variable">msg</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;姓名：&quot;</span>+name+<span class="hljs-string">&quot;\n&quot;</span>+<br>                <span class="hljs-string">&quot;手机号：&quot;</span>+phone+<span class="hljs-string">&quot;\n&quot;</span>+<br>                <span class="hljs-string">&quot;账号：&quot;</span>+account+<span class="hljs-string">&quot;\n&quot;</span>+<br>                <span class="hljs-string">&quot;密码:&quot;</span>+password;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">outputFileName</span> <span class="hljs-operator">=</span> fileName+<span class="hljs-string">&quot;/&quot;</span>+name+<span class="hljs-string">&quot;.txt&quot;</span>;<br>        IOHelpers.writeAllText(outputFileName,msg);<br>    &#125;<br>    <span class="hljs-keyword">while</span> (GUI.yesNoBox(<span class="hljs-string">&quot;要继续吗&quot;</span>));<br></code></pre></td></tr></table></figure><p>分析</p><ul><li>1.do while 在这个场景很合适<ul><li>因为用户肯定要有第一次输入的场景，所以先执行，后在进行判断是否继续输入</li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part2</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P2-9 案例：标准体重计算器</title>
    <link href="/2024/08/06/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part2-%E7%AC%94%E8%AE%B0/P2-9%20%E6%A1%88%E4%BE%8B%EF%BC%9A%E6%A0%87%E5%87%86%E4%BD%93%E9%87%8D%E8%AE%A1%E7%AE%97%E5%99%A8/"/>
    <url>/2024/08/06/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part2-%E7%AC%94%E8%AE%B0/P2-9%20%E6%A1%88%E4%BE%8B%EF%BC%9A%E6%A0%87%E5%87%86%E4%BD%93%E9%87%8D%E8%AE%A1%E7%AE%97%E5%99%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="案例：标准体重计算器"><a href="#案例：标准体重计算器" class="headerlink" title="案例：标准体重计算器"></a>案例：标准体重计算器</h1><hr><h2 id="需求说明"><a href="#需求说明" class="headerlink" title="需求说明"></a>需求说明</h2><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240806/GUI%E9%9C%80%E6%B1%82%E8%AF%B4%E6%98%8E1.45lfkqqgg.webp" alt="GUI需求说明1"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs java">String 性别 = GUI.buttonsBox(<span class="hljs-string">&quot;请选择你的性别&quot;</span>,<span class="hljs-string">&quot;男性&quot;</span>,<span class="hljs-string">&quot;女性&quot;</span>);<br><span class="hljs-type">double</span> 身高 = GUI.doubleBox(<span class="hljs-string">&quot;请输入你的身高（cm）&quot;</span>);<br><span class="hljs-type">double</span> 体重 = GUI.doubleBox(<span class="hljs-string">&quot;请输入你的体重（kg）&quot;</span>);<br><span class="hljs-keyword">if</span> (性别.equals(<span class="hljs-string">&quot;男性&quot;</span>))<br>&#123;<br>    <span class="hljs-comment">//男性：标准体重=（身高cm-80）*70%</span><br>    <span class="hljs-type">double</span> 标准体重 = (身高-<span class="hljs-number">80</span>)*<span class="hljs-number">0.70</span>;<br>    <span class="hljs-comment">//String newtizhong = String.format(&quot;%.2f&quot;,tizhong);//doubel保留两位小数</span><br>    <span class="hljs-comment">//double result = Double.parseDouble(newtizhong);</span><br>    <span class="hljs-type">double</span> 和标准体重的差 =((体重-标准体重)/标准体重)*<span class="hljs-number">100</span>;<br>    <span class="hljs-keyword">if</span> (和标准体重的差&lt;=<span class="hljs-number">10</span>||和标准体重的差&gt;=-<span class="hljs-number">10</span>)<br>    &#123;<br>        System.out.println(<span class="hljs-string">&quot;体重为正常&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (和标准体重的差&gt;<span class="hljs-number">10</span>&amp;&amp;和标准体重的差&lt;=<span class="hljs-number">20</span>)<br>    &#123;<br>        System.out.println(<span class="hljs-string">&quot;体重为偏胖&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (和标准体重的差&lt;-<span class="hljs-number">10</span>&amp;&amp;和标准体重的差&gt;-<span class="hljs-number">20</span>)<br>    &#123;<br>        System.out.println(<span class="hljs-string">&quot;体重为偏瘦&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (和标准体重的差&gt;<span class="hljs-number">20</span>)<br>    &#123;<br>        System.out.println(<span class="hljs-string">&quot;体重为肥胖&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (和标准体重的差&lt;-<span class="hljs-number">20</span>)<br>    &#123;<br>        System.out.println(<span class="hljs-string">&quot;体重为瘦弱&quot;</span>);<br>    &#125;<br><br><br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (性别.equals(<span class="hljs-string">&quot;女性&quot;</span>))<br>&#123;<br>    <span class="hljs-comment">//女性：标准体重=（身高cm-70）*60%</span><br><br>    <span class="hljs-type">double</span> 标准体重 = (身高-<span class="hljs-number">70</span>)*<span class="hljs-number">0.60</span>;<br>    <span class="hljs-type">double</span> 和标准体重的差 =((体重-标准体重)/标准体重)*<span class="hljs-number">100</span>;<br>    <span class="hljs-keyword">if</span> (和标准体重的差&lt;=<span class="hljs-number">10</span>||和标准体重的差&gt;=-<span class="hljs-number">10</span>)<br>    &#123;<br>        System.out.println(<span class="hljs-string">&quot;体重为正常&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (和标准体重的差&gt;<span class="hljs-number">10</span>&amp;&amp;和标准体重的差&lt;=<span class="hljs-number">20</span>)<br>    &#123;<br>        System.out.println(<span class="hljs-string">&quot;体重为偏胖&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (和标准体重的差&lt;-<span class="hljs-number">10</span>&amp;&amp;和标准体重的差&gt;-<span class="hljs-number">20</span>)<br>    &#123;<br>        System.out.println(<span class="hljs-string">&quot;体重为偏瘦&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (和标准体重的差&gt;<span class="hljs-number">20</span>)<br>    &#123;<br>        System.out.println(<span class="hljs-string">&quot;体重为肥胖&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (和标准体重的差&lt;-<span class="hljs-number">20</span>)<br>    &#123;<br>        System.out.println(<span class="hljs-string">&quot;体重为瘦弱&quot;</span>);<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><p>分析代码</p><ul><li>发现自己写的代码有复制粘贴的行为，违反了DRY原则（不要重复自己）</li><li>进行优化<ul><li>1.命名优化</li><li>2.把违反DRY原则的代码重复利用起来</li><li>3.改成弹窗显示结果</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">String</span> <span class="hljs-variable">gender</span> <span class="hljs-operator">=</span> GUI.buttonsBox(<span class="hljs-string">&quot;请选择你的性别&quot;</span>,<span class="hljs-string">&quot;男性&quot;</span>,<span class="hljs-string">&quot;女性&quot;</span>);<br><span class="hljs-type">double</span> <span class="hljs-variable">height</span> <span class="hljs-operator">=</span> GUI.doubleBox(<span class="hljs-string">&quot;请输入你的身高（cm）&quot;</span>);<br><span class="hljs-type">double</span> <span class="hljs-variable">weight</span> <span class="hljs-operator">=</span> GUI.doubleBox(<span class="hljs-string">&quot;请输入你的体重（kg）&quot;</span>);<br><span class="hljs-type">double</span> standardWeight;<br><span class="hljs-keyword">if</span> (gender.equals(<span class="hljs-string">&quot;男性&quot;</span>))<br>&#123;<br>    <span class="hljs-comment">//男性：标准体重=（身高cm-80）*70%</span><br>    standardWeight = (height-<span class="hljs-number">80</span>)*<span class="hljs-number">0.70</span>;<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>    <span class="hljs-comment">//女性：标准体重=（身高cm-70）*60%</span><br>    standardWeight = (height-<span class="hljs-number">70</span>)*<span class="hljs-number">0.60</span>;<br>&#125;<br><span class="hljs-type">double</span> <span class="hljs-variable">weightDeviation</span> <span class="hljs-operator">=</span>((weight-standardWeight)/standardWeight)*<span class="hljs-number">100</span>;<br><span class="hljs-keyword">if</span> (weightDeviation&lt;=<span class="hljs-number">10</span>||weightDeviation&gt;=-<span class="hljs-number">10</span>)<span class="hljs-comment">//10%或-10%</span><br>&#123;<br>    GUI.msgBox(<span class="hljs-string">&quot;你很正常哦~&quot;</span>);<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (weightDeviation&gt;<span class="hljs-number">10</span>&amp;&amp;weightDeviation&lt;=<span class="hljs-number">20</span>)<span class="hljs-comment">//10%-20%</span><br>&#123;<br>    GUI.msgBox(<span class="hljs-string">&quot;你稍微有点一点点胖哦&quot;</span>);;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (weightDeviation&lt;-<span class="hljs-number">10</span>&amp;&amp;weightDeviation&gt;-<span class="hljs-number">20</span>)<span class="hljs-comment">//-10%---&gt;-20%</span><br>&#123;<br>    GUI.msgBox(<span class="hljs-string">&quot;你稍微有点一点点瘦哦&quot;</span>);<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (weightDeviation&gt;<span class="hljs-number">20</span>)<span class="hljs-comment">//20%---&gt;</span><br>&#123;<br>    GUI.msgBox(<span class="hljs-string">&quot;你太胖了，该减肥了&quot;</span>);<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (weightDeviation&lt;-<span class="hljs-number">20</span>)<span class="hljs-comment">//-20%---&gt;</span><br>&#123;<br>    GUI.msgBox(<span class="hljs-string">&quot;你太廋了，多吃点&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part2</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P2-8 GUI对话框</title>
    <link href="/2024/08/06/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part2-%E7%AC%94%E8%AE%B0/P2-8%20%E6%A1%88%E4%BE%8B%EF%BC%9AGUI%E5%AF%B9%E8%AF%9D%E6%A1%86/"/>
    <url>/2024/08/06/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part2-%E7%AC%94%E8%AE%B0/P2-8%20%E6%A1%88%E4%BE%8B%EF%BC%9AGUI%E5%AF%B9%E8%AF%9D%E6%A1%86/</url>
    
    <content type="html"><![CDATA[<h1 id="GUI对话框"><a href="#GUI对话框" class="headerlink" title="GUI对话框"></a>GUI对话框</h1><hr><h2 id="关于GUI"><a href="#关于GUI" class="headerlink" title="关于GUI"></a>关于GUI</h2><ul><li>1、GUI：图形化界面。广义上桌面程序、APP、网页等都算是GUI，狭义上就是桌面程序</li><li>2、Java中有Swint、SWT等GUI技术，桌面程序开发不是Java开发的重点，因此除非有需要，否则不用研究。<ul><li>Java去开发桌面程序不是主流</li><li>个人觉得C#去做桌面程序开发很合适</li></ul></li><li>3、为了方便常规的GUI需求，在yzk18-GUI库中提供了一些简化GUI程序编写的方法，<ul><li>如果不够用的话，可以自己研究GUI技术，比如SWT技术~</li></ul></li><li>任何编程语言都会被淘汰，只是时间问题而已。在时间长河中只算作是一粒沙子而已，学会解决问题的思路才是核心。</li></ul><h2 id="YZK18-GUI"><a href="#YZK18-GUI" class="headerlink" title="YZK18-GUI"></a>YZK18-GUI</h2><ul><li>看文档探索yzk18-GUI的使用</li><li>这些对话框是“模态”对话框，也就是窗口关闭之后，才能继续往下执行代码</li><li>进度条是非模态对话框，不用等对话框关闭，代码就继续往后执行<ul><li>Java：大部分情况，main函数执行结束了程序就退出了</li></ul></li></ul><blockquote><p>无需死记硬背每个库的函数用法及其参数<br>在工作中，当需要用到某个库时，可以随时查阅其官方文档。<br>重要的是，<strong>了解该库的大致功能和用途</strong>，以及它的<strong>优缺点</strong>。这样，在需要实现特定功能时，能够迅速回忆起哪个库能够胜任，并直接查阅文档来具体实现。<br>比如，如果你需要处理GUI界面，你只需记得有这样一个库能够支持该功能，并在需要时查阅如何使用它。同样，对于操作PowerPoint文件的库，即使不记得具体用法，只要知道之前用过这个库并且知道它能满足需求，就可以在需要时快速查阅并应用。<br>总的来说，关键在于掌握库的功能和用途，具体用法则可以<strong>随用随查</strong>。</p></blockquote><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs vim">你不用去记住这些库的每个函数是怎么用的，有什么参数等等<br>不用记那个东西，没必要记，用的时候在去查文档就行了<br><br>工作之后也是如此：<br>假如：你需要用到一个库，你临时去查这个文档。<br>然后等你用过这个库后，你知道这个库大概可以用来干什么，大体有什么功能这就够了，不需要把它的用法记住，因为记不住<br>以后在用的时候，你知道要的这个功能在哪个库中有，拿来使用即可， 比如说一个<span class="hljs-keyword">gui</span>功能的这个库，库里面正好有你需要的功能，那直接把它拿过来用就可以了<br><br>学习库后，你只要知道这个库能干什么，它的优点缺点是什么就可以了，别的不用管，随用随查<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><code class="hljs java"><br><span class="hljs-comment">//buttonsBox：关闭窗口 X ；返回null。点击对应按钮，显示按钮的名字</span><br>String s= GUI.buttonsBox(<span class="hljs-string">&quot;你喜欢哪个歌手？&quot;</span>,<span class="hljs-string">&quot;周杰伦&quot;</span>,<span class="hljs-string">&quot;陈奕迅&quot;</span>,<span class="hljs-string">&quot;张杰&quot;</span>);<br>System.out.println(s);<br><br><span class="hljs-comment">//choiceBox:下拉框的选择。new String[] 区分参数类型，要不然会”java: 对choiceBox的引用不明确“</span><br><span class="hljs-type">String</span> <span class="hljs-variable">s</span> <span class="hljs-operator">=</span>GUI.choiceBox(<span class="hljs-string">&quot;吃什么？&quot;</span>,<span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>[]&#123;<span class="hljs-string">&quot;鸡蛋&quot;</span>,<span class="hljs-string">&quot;西红柿&quot;</span>&#125;);<br>System.out.println(s);<br><br><br><span class="hljs-comment">//弹出日期选择对话框  LocalDate.of设置初始时间点</span><br><span class="hljs-comment">//这些对话框是“模态”对话框，也就是窗口关闭之后，才能继续往下执行代码</span><br> <span class="hljs-type">LocalDate</span> <span class="hljs-variable">l</span> <span class="hljs-operator">=</span> GUI.dateBox(<span class="hljs-string">&quot;选择你的生日&quot;</span>, LocalDate.of(<span class="hljs-number">1998</span>,<span class="hljs-number">2</span>,<span class="hljs-number">8</span>));<br>System.out.println(l);<br><br><span class="hljs-comment">//弹出日期时间选择对话框  LocalDateTime.now()设置初始日期/时间</span><br><span class="hljs-type">LocalDateTime</span> <span class="hljs-variable">ldt</span> <span class="hljs-operator">=</span> GUI.datetimeBox(<span class="hljs-string">&quot;选择日期和时间&quot;</span>,LocalDateTime.now());<br>System.out.println(ldt);<br><br><span class="hljs-comment">//弹出目录打开对话框</span><br><span class="hljs-type">String</span> <span class="hljs-variable">s</span> <span class="hljs-operator">=</span>GUI.dirOpenBox(<span class="hljs-string">&quot;请选择对应的文件夹&quot;</span>);<br>System.out.println(s);<br><br><span class="hljs-comment">//弹出目录保存的对话框，如果目录已经存在，则提示【是否覆盖】</span><br><span class="hljs-type">String</span>  <span class="hljs-variable">s</span> <span class="hljs-operator">=</span>  GUI.dirSaveBox(<span class="hljs-string">&quot;D:\\JavaTest1\\output&quot;</span>);<br>System.out.println(s);<br><br><span class="hljs-comment">//只能输入数字</span><br><span class="hljs-type">double</span> <span class="hljs-variable">d</span> <span class="hljs-operator">=</span> GUI.doubleBox(<span class="hljs-string">&quot;请输入你的体重&quot;</span>);<br>System.out.println(d);<br><br><span class="hljs-comment">//弹出报错消息对话框。</span><br><span class="hljs-comment">//GUI.errorBox(&quot;报错测试&quot;);</span><br><br><span class="hljs-comment">//弹出文件打开对话框</span><br>/<span class="hljs-type">tring</span> <span class="hljs-variable">s</span> <span class="hljs-operator">=</span>GUI.fileOpenBox(<span class="hljs-string">&quot;D:\\新建文件夹\\http\\HTTP.png&quot;</span>);<br>System.out.println(s);<br><span class="hljs-comment">//fileSaveBox:弹出保存文件对话框，如果选择的文件已经存在，则提示【是否覆盖】</span><br><br><br><span class="hljs-comment">//屏幕高度/宽度</span><br><span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> GUI.getScreenHeight();<br><span class="hljs-type">int</span> <span class="hljs-variable">i1</span> <span class="hljs-operator">=</span>GUI.getScreenWidth();<br>System.out.println(i);<br>System.out.println(i1);<br><br><span class="hljs-comment">//弹出显示图片的对话框</span><br><span class="hljs-type">String</span> <span class="hljs-variable">s</span> <span class="hljs-operator">=</span> GUI.imgBox(<span class="hljs-string">&quot;你觉得这个壁纸好看吗？&quot;</span>,<span class="hljs-string">&quot;D:/新建文件夹/http/HTTP.png&quot;</span>,<span class="hljs-string">&quot;好看&quot;</span>,<span class="hljs-string">&quot;不好看&quot;</span>);<br>System.out.println(s);<br><br><span class="hljs-comment">//弹出输入框，让用户输入</span><br><span class="hljs-type">String</span> <span class="hljs-variable">s</span> <span class="hljs-operator">=</span>GUI.inputBox(<span class="hljs-string">&quot;请输入你想看到的信息&quot;</span>,<span class="hljs-string">&quot;你真帅&quot;</span>);<br>System.out.println(s);<br><br><span class="hljs-comment">//弹出QQ登录界面</span><br>String[] strs = GUI.loginBox(<span class="hljs-string">&quot;请输入账号：&quot;</span>);<br>System.out.println(Arrays.toString(strs));<br><br><span class="hljs-comment">//弹出密码对话框 密码加密了 明码看不到</span><br>String s=GUI.passwordBox(<span class="hljs-string">&quot;请输入密码&quot;</span>);<br>System.out.println(s);<br><br><span class="hljs-comment">//弹窗提示</span><br>GUI.msgBox(<span class="hljs-string">&quot;你好，这是一条信息&quot;</span>);<br><br><span class="hljs-comment">//弹出有多个输入内容的对话框</span><br>String[] strs = GUI.multiInputBox(<span class="hljs-string">&quot;请输入你的想法，我为你保存&quot;</span>,<span class="hljs-string">&quot;生活越来越好&quot;</span>,<span class="hljs-string">&quot;家人健健康康&quot;</span>,<span class="hljs-string">&quot;平平安安&quot;</span>);<br>System.out.println(Arrays.toString(strs));<br><br><span class="hljs-comment">//弹出包含【确认】、【取消】两个按钮的消息对话框</span><br><span class="hljs-type">boolean</span> <span class="hljs-variable">b</span> <span class="hljs-operator">=</span> GUI.okCancelBox(<span class="hljs-string">&quot;你还好吗？&quot;</span>);<br>System.out.println(b);<br><br><br><span class="hljs-comment">//显示“非确定性”进度对话框，非模态对话框,导入状态显示</span><br><span class="hljs-comment">//非模态对话框，不用等对话框关闭，代码就继续往后执行</span><br><span class="hljs-comment">//Java：大部分情况，main函数执行结束了程序就退出了</span><br><span class="hljs-keyword">try</span> &#123;<br>    System.out.println(<span class="hljs-string">&quot;暂停开始前: &quot;</span> + System.currentTimeMillis());<br>    GUI.showIndeterminateProgressDialog(<span class="hljs-string">&quot;正在导入&quot;</span>);<br>    <span class="hljs-comment">// 暂停10秒钟</span><br>    Thread.sleep(<span class="hljs-number">10000</span>);<br><br>    System.out.println(<span class="hljs-string">&quot;暂停结束后: &quot;</span> + System.currentTimeMillis());<br>&#125; <span class="hljs-keyword">catch</span> (InterruptedException e) &#123;<br>    Thread.currentThread().interrupt();<br>&#125;<br><br><span class="hljs-comment">//显示进度显示对话框，非模态对话框。</span><br><span class="hljs-keyword">try</span> &#123;<br>    System.out.println(<span class="hljs-string">&quot;暂停开始前: &quot;</span> + System.currentTimeMillis());<br>    GUI.showProgressDialog(<span class="hljs-string">&quot;导入中&quot;</span>,<span class="hljs-number">10</span>,<span class="hljs-number">1</span>);<br>    <span class="hljs-comment">// 暂停10秒钟</span><br>    Thread.sleep(<span class="hljs-number">10000</span>);<br><br>    System.out.println(<span class="hljs-string">&quot;暂停结束后: &quot;</span> + System.currentTimeMillis());<br>&#125; <span class="hljs-keyword">catch</span> (InterruptedException e) &#123;<br>    Thread.currentThread().interrupt();<br>&#125;<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part2</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P2-7  案例：整理视频文件夹</title>
    <link href="/2024/08/06/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part2-%E7%AC%94%E8%AE%B0/P2-7%20%E6%A1%88%E4%BE%8B%EF%BC%9A%E6%95%B4%E7%90%86%E8%A7%86%E9%A2%91%E6%96%87%E4%BB%B6%E5%A4%B9/"/>
    <url>/2024/08/06/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part2-%E7%AC%94%E8%AE%B0/P2-7%20%E6%A1%88%E4%BE%8B%EF%BC%9A%E6%95%B4%E7%90%86%E8%A7%86%E9%A2%91%E6%96%87%E4%BB%B6%E5%A4%B9/</url>
    
    <content type="html"><![CDATA[<h1 id="案例：整理视频文件夹"><a href="#案例：整理视频文件夹" class="headerlink" title="案例：整理视频文件夹"></a>案例：整理视频文件夹</h1><hr><h2 id="需求说明"><a href="#需求说明" class="headerlink" title="需求说明"></a>需求说明</h2><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240805/%E9%9C%80%E6%B1%82%E8%AF%B4%E6%98%8E1.2krttfv30i.webp" alt="需求说明1"></p><blockquote><p>思路<br>1.先把文件夹中所有MP4的文件读取出来<br>2.分别取目录的名字+ ”-“ + 文件名<br>3.整理后拷贝到其他的文件夹：output文件夹</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//杨中科老师的写法</span><br><span class="hljs-type">File</span> <span class="hljs-variable">file</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">File</span>(<span class="hljs-string">&quot;E:/test&quot;</span>);<br>File[] dirs = file.listFiles();<br><span class="hljs-keyword">for</span>(File dir : dirs)<span class="hljs-comment">//先遍历文件夹</span><br>&#123;<br>    <span class="hljs-keyword">for</span>(File fileMp4 : dir.listFiles())<span class="hljs-comment">//再遍历文件夹下的文件</span><br>    &#123;<br>        <span class="hljs-comment">//System.out.println(fileMp4);</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">filePath</span> <span class="hljs-operator">=</span> fileMp4.getPath();<span class="hljs-comment">//把File转换为字符串，方便用split等方法</span><br>        <span class="hljs-comment">//System.out.println(filePath);</span><br>        filePath = filePath.replace(<span class="hljs-string">&quot;\\&quot;</span>,<span class="hljs-string">&quot;/&quot;</span>);<span class="hljs-comment">//把\替换为/，</span><br>        <span class="hljs-comment">//// 这样无论是Windows还是其他操作系统，这样路径分隔符都同意为/</span><br>        String[] strs = filePath.split(<span class="hljs-string">&quot;/&quot;</span>);<br>        <span class="hljs-comment">//System.out.println(Arrays.toString(strs));</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">folderName</span> <span class="hljs-operator">=</span> strs[strs.length-<span class="hljs-number">2</span>];<span class="hljs-comment">//倒数第1个是文件夹的名字</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">fileName</span> <span class="hljs-operator">=</span> strs[strs.length-<span class="hljs-number">1</span>];<span class="hljs-comment">//倒数第0个是文件的名字</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">outputFileName</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;e:/temp/output/&quot;</span>+folderName+<span class="hljs-string">&quot;-&quot;</span>+fileName;<span class="hljs-comment">//目标文件名</span><br>        <span class="hljs-comment">//System.out.println(outputFileName);</span><br>        <span class="hljs-type">byte</span>[] bytes = IOHelpers.readAllBytes(fileMp4);<span class="hljs-comment">//文件内容</span><br>        IOHelpers.writeAllBytes(outputFileName,bytes);<span class="hljs-comment">//写入新文件</span><br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//自己的写法</span><br>String[] strs =  IOHelpers.getFilesRecursively(<span class="hljs-string">&quot;D:/JavaTest1&quot;</span>,<span class="hljs-string">&quot;mp4&quot;</span>);<br><br><span class="hljs-keyword">for</span> (String str:strs)<br>&#123;<br>    <span class="hljs-type">String</span> <span class="hljs-variable">strs1</span> <span class="hljs-operator">=</span>  str.replace(<span class="hljs-string">&quot;\\&quot;</span>,<span class="hljs-string">&quot;/&quot;</span>);<span class="hljs-comment">//把\替换为/</span><br>    <span class="hljs-comment">// 这样无论是Windows还是其他操作系统，这样路径分隔符都同意为/</span><br>    String[] strs2 =  strs1.split(<span class="hljs-string">&quot;/&quot;</span>);<br>    <span class="hljs-type">String</span> <span class="hljs-variable">name</span> <span class="hljs-operator">=</span> strs2[strs2.length-<span class="hljs-number">2</span>];<span class="hljs-comment">//倒数第1个是文件夹的名字</span><br>    <span class="hljs-type">String</span> <span class="hljs-variable">filename</span> <span class="hljs-operator">=</span> strs2[strs2.length-<span class="hljs-number">1</span>];<span class="hljs-comment">//倒数第0个是文件的名字</span><br>    <span class="hljs-type">String</span> <span class="hljs-variable">outputFileName</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;D:/JavaTest1/output/&quot;</span>+name+<span class="hljs-string">&quot;-&quot;</span>+filename;<br>    <span class="hljs-type">byte</span>[] bytes = IOHelpers.readAllBytes(str);<span class="hljs-comment">//文件内容</span><br>    IOHelpers.writeAllBytes(outputFileName,bytes);<span class="hljs-comment">//写入新文件</span><br>&#125;<br><br></code></pre></td></tr></table></figure><h2 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h2><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240805/Snipaste_2024-08-05_21-25-19.4g4emaa5md.webp" alt="Snipaste_2024-08-05_21-25-19"></p><blockquote><p>思路<br>1.先找出文件夹下的mp3歌曲<br>2.用、去分割歌曲名称<br>3.然后用-去分为两半，前面是歌手的名字去作为文件夹，后面作为歌曲的名字，放在文件夹之下<br>4.然后读取对应的内容，拷贝到新文件夹中</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//先遍历出文件夹下所有的mp3歌曲</span><br>String[] strs= IOHelpers.getFilesRecursively(<span class="hljs-string">&quot;E:/KwDownload/song&quot;</span>,<span class="hljs-string">&quot;mp3&quot;</span>);<br><br><span class="hljs-keyword">for</span> (String fileMp3:strs)<br>&#123;<br>    <span class="hljs-comment">//把\替换成/</span><br>    <span class="hljs-comment">//这样无论是Windows还是其他操作系统，路径分隔符统一都为/</span><br>    <span class="hljs-type">String</span> <span class="hljs-variable">filePath</span> <span class="hljs-operator">=</span>  fileMp3.replace(<span class="hljs-string">&quot;\\&quot;</span>,<span class="hljs-string">&quot;/&quot;</span>);<br>    String[] strs2 =  filePath.split(<span class="hljs-string">&quot;/&quot;</span>);<span class="hljs-comment">//用/去分割，然后获取到MP3的文件名</span><br>    <span class="hljs-type">String</span> <span class="hljs-variable">filename</span> <span class="hljs-operator">=</span> strs2[strs2.length-<span class="hljs-number">1</span>];<br>    String [] strs3 =filename.split(<span class="hljs-string">&quot;、&quot;</span>);<span class="hljs-comment">//用、去分割歌曲前面的顺序，然后获取到MP3的歌手+文件名</span><br>    <span class="hljs-type">String</span> <span class="hljs-variable">newfilename</span> <span class="hljs-operator">=</span> strs3[strs3.length-<span class="hljs-number">1</span>];<br>    String [] strs4 =newfilename.split(<span class="hljs-string">&quot;-&quot;</span>);<span class="hljs-comment">//用-去分割MP3的歌手和歌名</span><br>    <span class="hljs-type">String</span> <span class="hljs-variable">name</span> <span class="hljs-operator">=</span> strs4[strs4.length-<span class="hljs-number">2</span>];<span class="hljs-comment">//歌手名字</span><br>    <span class="hljs-type">String</span> <span class="hljs-variable">MP3</span> <span class="hljs-operator">=</span> strs4[strs4.length-<span class="hljs-number">1</span>];<span class="hljs-comment">//歌曲名</span><br>    <span class="hljs-type">String</span> <span class="hljs-variable">outputFileName</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;D:/JavaTest1/output/&quot;</span>+name+<span class="hljs-string">&quot;/&quot;</span>+MP3;<span class="hljs-comment">//加+把对应的歌曲归到对应的歌手文件夹下面去</span><br>    <span class="hljs-type">byte</span>[]bytes = IOHelpers.readAllBytes(fileMp3);<span class="hljs-comment">//拷贝文件</span><br>    IOHelpers.writeAllBytes(outputFileName,bytes);<span class="hljs-comment">//写入在对应的路径下面去</span><br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part2</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P2-6  案例：统计学生成绩</title>
    <link href="/2024/08/05/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part2-%E7%AC%94%E8%AE%B0/P2-6%20%E6%A1%88%E4%BE%8B%EF%BC%9A%E7%BB%9F%E8%AE%A1%E5%AD%A6%E7%94%9F%E6%88%90%E7%BB%A9/"/>
    <url>/2024/08/05/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part2-%E7%AC%94%E8%AE%B0/P2-6%20%E6%A1%88%E4%BE%8B%EF%BC%9A%E7%BB%9F%E8%AE%A1%E5%AD%A6%E7%94%9F%E6%88%90%E7%BB%A9/</url>
    
    <content type="html"><![CDATA[<h1 id="案例：统计学生成绩"><a href="#案例：统计学生成绩" class="headerlink" title="案例：统计学生成绩"></a>案例：统计学生成绩</h1><hr><h2 id="需求说明"><a href="#需求说明" class="headerlink" title="需求说明"></a>需求说明</h2><blockquote><p>1.有如下格式的一个文本文件：<br>张三,90,100,80.2<br>罗翔,99,99,30.5<br>杨中科,100,100,100<br>每一行代表一个学生的姓名，成绩（语数外）。<br>输出每个人的成绩到一个单独的文本文件，比如“张三.txt”的内容为“张三你好，你的语文成绩为90，你的数学成绩为100，你的外语成绩为80，平均分为90.06”。不考虑小数精度问题。演示：如果自己搜索把String转换为double的方法。</p></blockquote><h2 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h2><blockquote><p>1、有如下格式的一个文本文件：<br>张三 ,90,100,80,90<br>罗 翔,99,99,30<br>杨 中科,100,100,100,100<br>每一行代表一个学生的姓名，成绩。每个学生参加的考试科目数量不确定。输入姓名的时候，有的姓名两边或者中间误输入了空格。输出所有人的成绩到一个文本文件“平均成绩.txt” ，内容格式如下：<br>张三, 90<br>李四, 76<br>杨中科,100</p></blockquote><ul><li>思路</li><li>1.先逐行去获取一行的内容</li><li>2.姓名的两边或中间有空格，可以用trim去空格</li><li>3.考试科目数量不确定，可以用每一行的数组长度，</li><li>4.把这些信息都输入到同一个文本文件中。名称为“平均成绩.txt”</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs java">String[] lines = IOHelpers.readAllLines(<span class="hljs-string">&quot;D:/新建文件夹/练习.txt&quot;</span>);<br><span class="hljs-keyword">for</span> (String line :lines)<br>&#123;<br>    String[] strs =line.split(<span class="hljs-string">&quot;,&quot;</span>);<br>    <span class="hljs-type">String</span> <span class="hljs-variable">name</span> <span class="hljs-operator">=</span> strs[<span class="hljs-number">0</span>].replace(<span class="hljs-string">&quot; &quot;</span>,<span class="hljs-string">&quot;&quot;</span>);<span class="hljs-comment">//去掉名字中的空格</span><br>    System.out.println(name);<br>    <span class="hljs-type">int</span> <span class="hljs-variable">sum</span> <span class="hljs-operator">=</span>strs.length;<span class="hljs-comment">//获取字符串组的长度</span><br>    <span class="hljs-type">double</span> <span class="hljs-variable">sum1</span> <span class="hljs-operator">=</span><span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span><span class="hljs-number">1</span>;i&lt;=sum-<span class="hljs-number">1</span>;i++)<br>    &#123;<br>        <span class="hljs-comment">// System.out.println(strs[i]);</span><br>        <span class="hljs-type">double</span> 成绩 = Double.parseDouble(strs[i]);<span class="hljs-comment">//String转换成double</span><br>        sum1 =成绩+sum1;<br>    &#125;<br>    <span class="hljs-type">double</span> <span class="hljs-variable">pingjun</span> <span class="hljs-operator">=</span> sum1/(sum-<span class="hljs-number">1</span>);<span class="hljs-comment">//获得平均分</span><br>    System.out.println(pingjun);<br>    <span class="hljs-type">String</span> <span class="hljs-variable">msg</span> <span class="hljs-operator">=</span> name+<span class="hljs-string">&quot;,&quot;</span>+pingjun;<br><br>    <span class="hljs-comment">//FileWriter方法 不会覆盖</span><br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-type">FileWriter</span> <span class="hljs-variable">fileWriter</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">FileWriter</span>(<span class="hljs-string">&quot;D:/新建文件夹/平均成绩.txt&quot;</span>, <span class="hljs-literal">true</span>); <span class="hljs-comment">// 第二个参数为true表示追加内容</span><br>        fileWriter.write(msg+<span class="hljs-string">&quot;\n&quot;</span>);<span class="hljs-comment">//换行</span><br>        fileWriter.close();<br>    &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;<br>        e.printStackTrace();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part2</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P2-5  案例：检测图片中是否有二维码</title>
    <link href="/2024/08/05/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part2-%E7%AC%94%E8%AE%B0/P2-5%20%E6%A1%88%E4%BE%8B%EF%BC%9A%E6%A3%80%E6%B5%8B%E5%9B%BE%E7%89%87%E4%B8%AD%E6%98%AF%E5%90%A6%E6%9C%89%E4%BA%8C%E7%BB%B4%E7%A0%81/"/>
    <url>/2024/08/05/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part2-%E7%AC%94%E8%AE%B0/P2-5%20%E6%A1%88%E4%BE%8B%EF%BC%9A%E6%A3%80%E6%B5%8B%E5%9B%BE%E7%89%87%E4%B8%AD%E6%98%AF%E5%90%A6%E6%9C%89%E4%BA%8C%E7%BB%B4%E7%A0%81/</url>
    
    <content type="html"><![CDATA[<h1 id="案例：检测一堆图片文件中是否有二维码类型的"><a href="#案例：检测一堆图片文件中是否有二维码类型的" class="headerlink" title="案例：检测一堆图片文件中是否有二维码类型的"></a>案例：检测一堆图片文件中是否有二维码类型的</h1><hr><h2 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h2><ul><li>1、扫描一个文件夹下所有的图片文件，查看是否存在着有带二维码的图片，如果有的话就输出“有宣传性二维码图片”，否则就提示“检测通过”</li></ul><blockquote><p>思路很重要<br>1.先检测文件夹中格式是png，jpg，gif的图片文件<br>2.for循环，然后解析图片内容，能解析出来就是带二维码的，解析不出来就是null<br>3.if判断一下，如果有true的就提示：有宣传性二维码图片<br>false就提示：检测通过</p></blockquote><hr><h2 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h2><ul><li>1、扫描一个文件夹以及子文件夹下所有的图片文件，查看是否存在着有带二维码的图片，如果有的话就检查是否是网址，如果是的话输出“有宣传性二维码图片”，否则就提示“检测通过”</li></ul><blockquote><p>思路很重要<br>1.先检测文件夹中格式是png，jpg，gif的图片文件<br>2.for循环，然后解析图片内容，能解析出来就是带二维码的，解析不出来就是null<br>3.if判断一下不等于空，<br>4.如果判断字符串中是否包含“https:&#x2F;&#x2F;”或者“http:&#x2F;&#x2F;”的就提示：有宣传性二维码图片<br>false就提示：检测通过</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs java"> <span class="hljs-comment">//第一步：先检测这个目录以及后代目录中格式是PNG,JPG,gif等的图片文件</span><br>String[] strs = IOHelpers.getFilesRecursively(<span class="hljs-string">&quot;D:/新建文件夹&quot;</span>,<span class="hljs-string">&quot;png&quot;</span>,<span class="hljs-string">&quot;jpg&quot;</span>,<span class="hljs-string">&quot;gif&quot;</span>);<br><span class="hljs-comment">//String str3 = Arrays.toString(strs);</span><br><span class="hljs-comment">//System.out.println(str3);</span><br><span class="hljs-type">boolean</span> <span class="hljs-variable">yespng</span> <span class="hljs-operator">=</span> <span class="hljs-literal">false</span>;<span class="hljs-comment">//默认为没有二维码带网站信息的图片</span><br><span class="hljs-comment">//for循环解析出条形码内容</span><br><span class="hljs-keyword">for</span> (String str1 : strs)<br>&#123;<br>    <span class="hljs-comment">//解析目录文件中的条形码内容，解析不出来就是null</span><br>    <span class="hljs-type">Result</span> <span class="hljs-variable">result</span> <span class="hljs-operator">=</span> QRCodeHelpers.parseImage(str1);<br>    <span class="hljs-keyword">if</span> (result != <span class="hljs-literal">null</span>)<br>    &#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">str2</span> <span class="hljs-operator">=</span> result.getText();<br>        <span class="hljs-keyword">if</span> (str2.contains(<span class="hljs-string">&quot;https://&quot;</span>)||str2.contains(<span class="hljs-string">&quot;http://&quot;</span>)) <span class="hljs-comment">//卡住了不知道用哪个方法了。 https://  http://</span><br>        &#123;<br>            System.out.println(str2);<br>            yespng =<span class="hljs-literal">true</span>;<span class="hljs-comment">//如果检测出来有条形码内容就是带有二维码信息的图片</span><br>            <span class="hljs-keyword">break</span>;<br>        &#125;<br><br>    &#125;<br>&#125;<br><span class="hljs-keyword">if</span> (yespng == <span class="hljs-literal">true</span>)<br>&#123;<br>    System.out.println(<span class="hljs-string">&quot;有宣传性二维码图片&quot;</span>);<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>    System.out.println(<span class="hljs-string">&quot;检测通过&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part2</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P2-4  文件读写等类</title>
    <link href="/2024/08/04/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part2-%E7%AC%94%E8%AE%B0/P2-4%20%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99%E7%AD%89%E7%B1%BB/"/>
    <url>/2024/08/04/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part2-%E7%AC%94%E8%AE%B0/P2-4%20%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99%E7%AD%89%E7%B1%BB/</url>
    
    <content type="html"><![CDATA[<h1 id="文件读写等类"><a href="#文件读写等类" class="headerlink" title="文件读写等类"></a>文件读写等类</h1><hr><h2 id="文件的数据格式"><a href="#文件的数据格式" class="headerlink" title="文件的数据格式"></a>文件的数据格式</h2><blockquote><p>Unix团队：文件的概念<br>二进制流</p></blockquote><ul><li>1、文件是以字节的形式存到磁盘上，不同的文件格式只不过按照不同的文件格式标准来保存而已</li><li>2、用HxD Hex Editor查看图片、exe、文本等格式</li><li>3、文本文件也是一种二进制文件而已。<ul><li>不过中文以什么样的格式存到文件中，有不同的标准(编码标准)</li><li>因此如果编码处理不当，文本文件有可能有乱码的问题</li></ul></li><li>4、Word、PDF等不是文本格式。文本格式的判断标准：能不能用文本编辑器打开~~~</li></ul><h2 id="学会学习-知识"><a href="#学会学习-知识" class="headerlink" title="学会学习  &gt; 知识"></a>学会学习  &gt; 知识</h2><ul><li>1、<strong>程序员学会阅读文档</strong>、学会 “ Trial and Error ” 才能真正长大<ul><li>不断试错的过程中去成长</li></ul></li><li>2、授人以渔：可以从maven网站点击【view all】下载javadoc的jar，然后解压到本地，就可以查看相关文档<ul><li>也可以在IDEA中download source</li></ul></li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240803/View-All.3nrj1hkpkz.webp" alt="View-All"></p><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240803/%E9%85%8D%E7%BD%AE1.esf4qu27u.webp" alt="配置1"></p><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240803/java-doc.5c0vyoazr3.webp" alt="java-doc"></p><ul><li>3、如果阅读文档，如何尝试</li><li>4、JDK内置类的JavaDoc，搜索**jdk8 doc downloads<ul><li>还是建议程序员看英文文档，因为英文的原文通过机翻出来的意思，有可能会不一样<ul><li><a href="http://www.oracle.com/technetwork/java/javase/documentation/jdk8-doc-downloads-2133158.html">http://www.oracle.com/technetwork/java/javase/documentation/jdk8-doc-downloads-2133158.html</a></li></ul></li><li>实在不行，就在网上找好心人通过机翻 翻译出来的中文版<ul><li>网上搜<strong>java8 文档 中文版</strong></li></ul></li></ul></li></ul><h2 id="作业"><a href="#作业" class="headerlink" title="作业"></a>作业</h2><ul><li>研究yzk18-commons库</li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240804/%E7%A0%94%E7%A9%B6yzk18.8dws1c35id.webp" alt="研究yzk18"></p><hr><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//DesktopHelpers</span><br>DesktopHelpers.editFile(<span class="hljs-string">&quot;D:/Test1.txt&quot;</span>);<span class="hljs-comment">//用默认软件打开指定文件</span><br>String s=DesktopHelpers.getClipboardText();<br>System.out.println(s);<br></code></pre></td></tr></table></figure><hr><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//QRCodeHelpers</span><br><span class="hljs-type">BufferedImage</span> <span class="hljs-variable">img</span> <span class="hljs-operator">=</span> QRCodeHelpers.generateQRCodeImage(<span class="hljs-string">&quot;9999http://iknow.lenovo.com.cn/&quot;</span>,<span class="hljs-number">3840</span>,<span class="hljs-number">5760</span>);<br>ImageHelpers.writeToFile(img,<span class="hljs-string">&quot;png&quot;</span>,<span class="hljs-string">&quot;D:/新建文件夹/HTTP.png&quot;</span>);<br></code></pre></td></tr></table></figure><hr><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//ImageHelpers</span><br><span class="hljs-type">byte</span>[] byte1 = IOHelpers.readAllBytes(<span class="hljs-string">&quot;E:/BaiduNetdiskDownload/6M4A00504 (7).jpg&quot;</span>);<br><span class="hljs-comment">//System.out.println(Arrays.toString(byte1));</span><br><br>System.out.println(ImageHelpers.detectImageType(byte1));<br>System.out.println(ImageHelpers.getImageSize(byte1));<br></code></pre></td></tr></table></figure><hr><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//IOHelpers</span><br>OHelpers.deleteDir(<span class="hljs-string">&quot;D:/Test1&quot;</span>);<br>String str1= IOHelpers.detectTextEncoding(<span class="hljs-string">&quot;D:/Test1.txt&quot;</span>);<span class="hljs-comment">//数据足够多的时候才能算出是什么编码</span><br>System.out.println(str1);<br><br><span class="hljs-type">String</span> <span class="hljs-variable">str2</span> <span class="hljs-operator">=</span> IOHelpers.getExtension(<span class="hljs-string">&quot;D:/Test1.txt&quot;</span>);<br>System.out.println(str2);<br><br>System.out.println(IOHelpers.getFileNameWithoutExtension(<span class="hljs-string">&quot;D:/Test1.txt&quot;</span>));<br><br>String[] str3 = IOHelpers.getFilesRecursively(<span class="hljs-string">&quot;D:/Program Files (x86)/小软件合集&quot;</span>,<span class="hljs-string">&quot;zip&quot;</span>);<br>System.out.println(Arrays.toString(str3));<br><br>IOHelpers.mkParentDirs(<span class="hljs-string">&quot;D:/a/b&quot;</span>);<span class="hljs-comment">//创建目录</span><br><br><span class="hljs-type">String</span> <span class="hljs-variable">str4</span> <span class="hljs-operator">=</span> IOHelpers.readAllText(<span class="hljs-string">&quot;D:/Test1.txt&quot;</span>);<br>System.out.println(str4);<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part2</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P2-3  Maven的使用</title>
    <link href="/2024/08/03/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part2-%E7%AC%94%E8%AE%B0/P2-3%20Maven%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <url>/2024/08/03/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part2-%E7%AC%94%E8%AE%B0/P2-3%20Maven%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="Maven的使用"><a href="#Maven的使用" class="headerlink" title="Maven的使用"></a>Maven的使用</h1><hr><h2 id="YZK18-COMMONS库"><a href="#YZK18-COMMONS库" class="headerlink" title="YZK18-COMMONS库"></a>YZK18-COMMONS库</h2><ul><li>由杨中科封装的库，让初学者更好的学习</li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240803/commons%E5%BA%93-yzk%E5%B0%81%E8%A3%85%E7%9A%84.1022r19jom.webp" alt="commons库-yzk封装的"></p><h3 id="通过Maven引用库"><a href="#通过Maven引用库" class="headerlink" title="通过Maven引用库"></a>通过Maven引用库</h3><ul><li>1、Maven默认从国外的服务器下载库，可能速度慢。国内最好配置镜像服务器，可以用阿里云的，也可以用其他的。</li><li>2、pom.xml上右键Maven→Create settings.xml<ul><li>一台电脑配置一次即可</li><li>把阿里云镜像的配置文件写进去</li></ul></li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240803/%E9%85%8D%E7%BD%AE.7p3ifs6odm.webp" alt="配置"></p><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240803/settings.41xys9k05s.webp" alt="settings"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">mirrors</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">mirror</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>nexus-aliyun<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">mirrorOf</span>&gt;</span>*<span class="hljs-tag">&lt;/<span class="hljs-name">mirrorOf</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>Nexus aliyun<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">url</span>&gt;</span>https://maven.aliyun.com/nexus/content/groups/public<span class="hljs-tag">&lt;/<span class="hljs-name">url</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">mirror</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">mirrors</span>&gt;</span><br><br></code></pre></td></tr></table></figure><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240803/Maven%E5%BC%95%E7%94%A8%E5%BA%93.2venjnlzag.webp" alt="Maven引用库"></p><h3 id="添加库"><a href="#添加库" class="headerlink" title="添加库"></a>添加库</h3><ul><li>1、在<a href="https://mvnrepository.com自己搜索,或者直接用别人提供的maven配置./">https://mvnrepository.com自己搜索，或者直接用别人提供的maven配置。</a><ul><li>里面最好选新版本，除非有特殊要求</li><li>多看看描述和文档.还能看到这个第三方的依赖库</li><li>然后在浏览器中看看这个的用法，和易用性</li></ul></li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240803/%E6%8F%8F%E8%BF%B0.7zqc8y0vcp.webp" alt="描述"></p><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240803/%E9%85%8D%E7%BD%AE1.esf4qu27u.webp" alt="配置1"></p><ul><li>2、在pom.xml中建一个dependencies节点(如果已经有了就不能重复建了)，然后把dependency粘贴上去即可。 dependencies中可以放多个dependency</li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240803/YZK18.9dcvcywyjt.webp" alt="YZK18"></p><ul><li><p>3、修改了pom.xml后要点一下m图标才会下载</p></li><li><p>4、偶尔会下载失败，jar包展开没东西，就右键【pom.xml】，然后选择【Maven】→【Reload Project】就会自动重试下载。有时候要试好几次，或者重启IDEA</p></li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240803/%E9%87%8D%E6%96%B0%E4%B8%8B%E8%BD%BD.syuvn05w5.webp" alt="重新下载"></p><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240803/%E4%B8%8B%E8%BD%BD%E6%83%85%E5%86%B5.8s37qpi1ms.webp" alt="下载情况"></p><h3 id="添加yzk18-commons库"><a href="#添加yzk18-commons库" class="headerlink" title="添加yzk18-commons库"></a>添加yzk18-commons库</h3><ul><li>从<a href="https://mvnrepository.com/">https://mvnrepository.com</a> 搜最新版yzk18-commons，放到pom.xml中。或者用：</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.yzk18<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>yzk18-commons<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.5<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li>2、开源地址： <a href="https://github.com/yangzhongke/yzk18/">https://github.com/yangzhongke/yzk18/</a></li><li>3、调用IOHelpers. readAllText()方法读取然后打印文本文件</li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240803/%E6%88%90%E5%8A%9F.6f0l9i9iok.webp" alt="成功"></p>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part2</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P2-2  字符串的更多方法</title>
    <link href="/2024/08/03/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part2-%E7%AC%94%E8%AE%B0/P2-2%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%9B%B4%E5%A4%9A%E6%96%B9%E6%B3%95/"/>
    <url>/2024/08/03/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part2-%E7%AC%94%E8%AE%B0/P2-2%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%9B%B4%E5%A4%9A%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h1 id="字符串的更多方法"><a href="#字符串的更多方法" class="headerlink" title="字符串的更多方法"></a>字符串的更多方法</h1><hr><h2 id="String类主要成员1"><a href="#String类主要成员1" class="headerlink" title="String类主要成员1"></a>String类主要成员1</h2><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240803/String%E7%B1%BB%E4%B8%BB%E8%A6%81%E6%88%90%E5%91%981.2obfnv8p3n.webp" alt="String类主要成员1"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs java">String str1=<span class="hljs-string">&quot;你真是个大帅哥，yesyesyes&quot;</span>;<br><span class="hljs-comment">//int length()字符串长度</span><br>System.out.println(str1.length());<br><br><span class="hljs-comment">//char charAt(int index) 获取第index个位置的字符</span><br>System.out.println(str1.charAt(<span class="hljs-number">5</span>));<br><br><span class="hljs-comment">//boolean contains(CharSequence s)判断字符串s是否包含在本字符串中</span><br>System.out.println(str1.contains(<span class="hljs-string">&quot;y&quot;</span>));<br>System.out.println(str1.contains(<span class="hljs-string">&quot;Y&quot;</span>));<br><br><span class="hljs-comment">//String replace(CharSequence target,CharSequence replacement)</span><br><span class="hljs-comment">//把字符串中的target替换为replacement，字符串具有不可变性，因为旧的不变，要通过返回值拿新的</span><br><span class="hljs-type">String</span> <span class="hljs-variable">str2</span> <span class="hljs-operator">=</span> str1.replace(<span class="hljs-string">&quot;大帅哥&quot;</span>,<span class="hljs-string">&quot;cool&quot;</span>);<span class="hljs-comment">//在str1的字符串中选对对应的词来替换</span><br>System.out.println(str2);<br><br><span class="hljs-type">String</span> <span class="hljs-variable">s</span> <span class="hljs-operator">=</span><span class="hljs-string">&quot;I am likes job&quot;</span>;<br><span class="hljs-comment">//String[]split(String regex)按照指定的字符串来拆分为多给字符串。参数是正则表达式类型，有特殊字符转义等问题，以后遇到再说</span><br>String[] strs =s.split(<span class="hljs-string">&quot; &quot;</span>);<span class="hljs-comment">//用空格来分割上面字符串</span><br><span class="hljs-keyword">for</span> (String str:strs)<br>&#123;<br>    System.out.println(str);<br>&#125;<br><br><span class="hljs-comment">//boolean startsWith(&quot;www&quot;) 判断字符串是否以WWW开头</span><br><span class="hljs-comment">//boolean endsWith(&quot;www&quot;) 判断字符串是否以WWW结尾</span><br><span class="hljs-type">String</span> <span class="hljs-variable">str3</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;www.baidu.com&quot;</span>;<br>System.out.println(str3.startsWith(<span class="hljs-string">&quot;www&quot;</span>));<br>System.out.println(str3.endsWith(<span class="hljs-string">&quot;www&quot;</span>));<br></code></pre></td></tr></table></figure><h2 id="String类主要成员2"><a href="#String类主要成员2" class="headerlink" title="String类主要成员2"></a>String类主要成员2</h2><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240803/String%E7%B1%BB%E4%B8%BB%E8%A6%81%E6%88%90%E5%91%982.syuv8w9hx.webp" alt="String类主要成员2"></p><h2 id="String类主要成员3"><a href="#String类主要成员3" class="headerlink" title="String类主要成员3"></a>String类主要成员3</h2><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240803/String%E7%B1%BB%E4%B8%BB%E8%A6%81%E6%88%90%E5%91%983.ic123qsus.webp" alt="String类主要成员3"></p><h2 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h2><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240803/String%E7%B1%BB%E7%9A%84%E6%A1%88%E4%BE%8B.8vmto1h6a8.webp" alt="String类的案例"></p><blockquote><p>1、获取文件名</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//自己写的</span><br>String s1= <span class="hljs-string">&quot;c:/a/b/c.txt&quot;</span>;<br>String s2= s1.substring(<span class="hljs-number">7</span>);<br>System.out.println(s2);<br><br>--------------------------------------------------------------------<br><br><span class="hljs-comment">//获取/最后出现的下标，然后去截取字符串即可</span><br>String s1= <span class="hljs-string">&quot;c:/a/b/c.txt&quot;</span>;<br><span class="hljs-type">int</span> <span class="hljs-variable">i1</span> <span class="hljs-operator">=</span> s1.lastIndexOf(<span class="hljs-string">&quot;/&quot;</span>);<br>System.out.println(s1.substring(i1+<span class="hljs-number">1</span>));<br><br></code></pre></td></tr></table></figure><hr><blockquote><p>2、获取后缀名</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//自己写的</span><br>String s1= <span class="hljs-string">&quot;c:/a/b/c.txt&quot;</span>;<br><span class="hljs-type">int</span> i1= s1.lastIndexOf(<span class="hljs-string">&quot;.txt&quot;</span>);<br>String s2=s1.substring(i1);<br>System.out.println(s2);<br><br>--------------------------------------------------------------------<br><br><span class="hljs-comment">//判断.最后出现的位置，然后从.的下标截取</span><br>String s1= <span class="hljs-string">&quot;c:/a/b/c.txt&quot;</span>;<br><span class="hljs-type">int</span> <span class="hljs-variable">i1</span> <span class="hljs-operator">=</span> s1.lastIndexOf(<span class="hljs-string">&quot;.&quot;</span>);<br>System.out.println(s1.substring(i1));<br></code></pre></td></tr></table></figure><hr><blockquote><p>3、判断</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs java"><br><span class="hljs-type">String</span> <span class="hljs-variable">userName</span> <span class="hljs-operator">=</span><span class="hljs-string">&quot;admin&quot;</span>;<br>String passWord=<span class="hljs-string">&quot;123456&quot;</span>;<br><span class="hljs-type">String</span> <span class="hljs-variable">userInputUserName</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;ADMin&quot;</span>;<br>String userInputpassWord=<span class="hljs-string">&quot;123456&quot;</span>;<br><span class="hljs-type">String</span> <span class="hljs-variable">newuserName</span> <span class="hljs-operator">=</span> userName.trim();<br><span class="hljs-keyword">if</span> (newuserName.equalsIgnoreCase(userInputUserName))<br>&#123;<br>    System.out.println(<span class="hljs-string">&quot;账号正确&quot;</span>);<br>    <span class="hljs-keyword">if</span> (passWord.equals(userInputpassWord))<br>    &#123;<br>        System.out.println(<span class="hljs-string">&quot;密码正确&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        System.out.println(<span class="hljs-string">&quot;密码错误&quot;</span>);<br>    &#125;<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>    System.out.println(<span class="hljs-string">&quot;账号错误&quot;</span>);<br>&#125;<br><br>--------------------------------------------------------------------<br><span class="hljs-comment">//简化后</span><br><span class="hljs-type">String</span> <span class="hljs-variable">userInputUserName</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;adMIN&quot;</span>;<br>String userInputpassWord=<span class="hljs-string">&quot;123456&quot;</span>;<br><span class="hljs-keyword">if</span> (userInputUserName.trim().equalsIgnoreCase(<span class="hljs-string">&quot;admin&quot;</span>)&amp;&amp;userInputpassWord.equals(<span class="hljs-string">&quot;123456&quot;</span>))<br>&#123;<br>    System.out.println(<span class="hljs-literal">true</span>);<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>    System.out.println(<span class="hljs-literal">false</span>);<br>&#125;<br></code></pre></td></tr></table></figure><hr><blockquote><p>4、取前后的值</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java">String s1=<span class="hljs-string">&quot;name=任cool&quot;</span>;<br>String[] s2= s1.split(<span class="hljs-string">&quot;=&quot;</span>);<br>System.out.println(<span class="hljs-string">&quot;这是等号前面的值：&quot;</span>+s2[<span class="hljs-number">0</span>]);<br>System.out.println(<span class="hljs-string">&quot;这是等号后面的值：&quot;</span>+s2[<span class="hljs-number">1</span>]);<br></code></pre></td></tr></table></figure><hr><blockquote><p>5、判断是否为jpg文件</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//String s1= &quot;c:/a/b/C.JPG&quot;;</span><br>String s1= <span class="hljs-string">&quot;c:/a/b/C.TXT&quot;</span>;<br>String s2=s1.toLowerCase(Locale.ROOT);<br><span class="hljs-keyword">if</span> (s2.contains(<span class="hljs-string">&quot;.jpg&quot;</span>))<br>&#123;<br>    System.out.println(<span class="hljs-string">&quot;有jpg文件&quot;</span>);<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>    System.out.println(<span class="hljs-string">&quot;没有jpg文件&quot;</span>);<br>&#125;<br><br>--------------------------------------------------------------------<br><span class="hljs-comment">//简化后</span><br>String s1= <span class="hljs-string">&quot;c:/a/b/C.JPG&quot;</span>;<br>System.out.println(s1.toLowerCase().contains(<span class="hljs-string">&quot;.jpg&quot;</span>));<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part2</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P2-1  文件、日期等常用类</title>
    <link href="/2024/08/02/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part2-%E7%AC%94%E8%AE%B0/P2-1%20%E6%96%87%E4%BB%B6%E3%80%81%E6%97%A5%E6%9C%9F%E7%AD%89%E5%B8%B8%E7%94%A8%E7%B1%BB/"/>
    <url>/2024/08/02/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part2-%E7%AC%94%E8%AE%B0/P2-1%20%E6%96%87%E4%BB%B6%E3%80%81%E6%97%A5%E6%9C%9F%E7%AD%89%E5%B8%B8%E7%94%A8%E7%B1%BB/</url>
    
    <content type="html"><![CDATA[<h1 id="文件、日期等常用类"><a href="#文件、日期等常用类" class="headerlink" title="文件、日期等常用类"></a>文件、日期等常用类</h1><hr><h2 id="常用类：File"><a href="#常用类：File" class="headerlink" title="常用类：File"></a>常用类：File</h2><ul><li>1、输入输出、IO；文件、文件夹（目录）<ul><li>输入：读文件</li><li>输出：写文件</li><li>程序员喜欢称文件夹为<strong>目录</strong></li></ul></li><li>2、<strong>如何显示文件的扩展名（程序员必备）</strong><ul><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240802/%E6%96%87%E4%BB%B6%E6%89%A9%E5%B1%95%E5%90%8D.7egol7y0ll.webp" alt="文件扩展名"></li></ul></li><li>3、import java.io.File（引用类库）</li><li>4、File:代表文件或者目录（文件夹）.如果根据字符串创建File对象的话，必须用new；<ul><li>如果在Windows下，复制出来的路径默认是用“\”分割的，需要转义（IDEA会自动转义），也可以改成“&#x2F;”<ul><li>因为Windows的路径复制默认是\，而Linux、Mac默认是&#x2F;</li><li>所以改成\去兼容mac把，Windows其实是兼容这种写法的<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">File</span> <span class="hljs-variable">fl</span> <span class="hljs-operator">=</span><span class="hljs-keyword">new</span> <span class="hljs-title class_">File</span>(<span class="hljs-string">&quot;D:/Users/Desktop/test.txt&quot;</span>);<br></code></pre></td></tr></table></figure></li></ul></li></ul></li><li>5、File只是代表逻辑上的一个文件或者目录（文件夹），不代表一定存在</li></ul><h3 id="File类主要成员"><a href="#File类主要成员" class="headerlink" title="File类主要成员"></a>File类主要成员</h3><p><strong>方法前面的数据类型就是返回值的类型</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java">delete():<span class="hljs-comment">//删除(如果是非空目录，会删除失败，但不会提示)</span><br><span class="hljs-type">boolean</span> <span class="hljs-title function_">exists</span><span class="hljs-params">()</span>:<span class="hljs-comment">//是否存在</span><br>String <span class="hljs-title function_">getName</span><span class="hljs-params">()</span>:<span class="hljs-comment">//获得名称（最后一部分）</span><br>Strin <span class="hljs-title function_">getParent</span><span class="hljs-params">()</span>、File <span class="hljs-title function_">getParentFile</span><span class="hljs-params">()</span>:<span class="hljs-comment">//得到上一级</span><br>getPath():<span class="hljs-comment">//得到路径部分</span><br><span class="hljs-type">boolean</span> <span class="hljs-title function_">isDirectory</span><span class="hljs-params">()</span>:<span class="hljs-comment">//是否是目录</span><br><span class="hljs-type">boolean</span> <span class="hljs-title function_">isFile</span><span class="hljs-params">()</span>:<span class="hljs-comment">//是否是文件</span><br>String[] list()、File[] listFiles():<span class="hljs-comment">//获得子项（文件及目录），不包含更下一级</span><br>mkdirs():<span class="hljs-comment">//如果这个目录不存在，则创建；</span><br>        <span class="hljs-comment">//如果上N 级目录不存在，也把他们创建起来，不要错误调用成了mkdir()</span><br></code></pre></td></tr></table></figure><ul><li>注意：文件夹的名字有可能会和文本的名字一样，mkdirs也是只创建文件夹</li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240802/%E6%96%87%E4%BB%B6%E5%A4%B9%E5%92%8C%E6%96%87%E6%9C%AC%E7%9A%84%E5%90%8D%E5%AD%97.231s0l7q0f.webp" alt="文件夹和文本的名字"></p><hr><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">File</span> <span class="hljs-variable">fl</span> <span class="hljs-operator">=</span><span class="hljs-keyword">new</span> <span class="hljs-title class_">File</span>(<span class="hljs-string">&quot;E:/temp/test.txt&quot;</span>);<br><span class="hljs-comment">// System.out.println(fl);</span><br><span class="hljs-type">File</span> <span class="hljs-variable">fl1</span> <span class="hljs-operator">=</span><span class="hljs-keyword">new</span> <span class="hljs-title class_">File</span>(<span class="hljs-string">&quot;E:/temp&quot;</span>);<br><span class="hljs-comment">//System.out.println(fl1);</span><br><span class="hljs-comment">//delete()://删除(如果是非空目录，会删除失败，但不会提示)</span><br>fl.delete();<br><span class="hljs-comment">//fl1.delete();</span><br><br><span class="hljs-comment">//boolean exists()://是否存在</span><br>System.out.println(fl.exists());<br>System.out.println(fl1.exists());<br><span class="hljs-comment">//String getName()://获得名称（最后一部分）</span><br>System.out.println(fl.getName());<br>System.out.println(fl1.getName());<br><span class="hljs-comment">//Strin getParent()、File getParentFile()://得到上一级</span><br>System.out.println(fl.getParent());<br>System.out.println(fl1.getParentFile());<br><span class="hljs-comment">//getPath()://得到路径部分</span><br>System.out.println(fl.getPath());<br><span class="hljs-comment">//boolean isDirectory()://是否是目录</span><br>System.out.println(fl1.isDirectory());<br><span class="hljs-comment">//boolean isFile()://是否是文件</span><br>System.out.println(fl.isFile());<br><span class="hljs-comment">//String[] list()、File[] listFiles()://获得子项（文件及目录），不包含更下一级</span><br>String[] files =fl1.list();<br><span class="hljs-keyword">for</span> (String file :files)<br>&#123;<br>    System.out.println(file);<br>&#125;<br><span class="hljs-comment">//mkdirs()://如果这个目录不存在，则创建；//如果上N 级目录不存在，也把他们创建起来，不要错误调用成了mkdir()</span><br>fl.mkdirs();<br></code></pre></td></tr></table></figure><hr><h2 id="常用类：日期"><a href="#常用类：日期" class="headerlink" title="常用类：日期"></a>常用类：日期</h2><ul><li>1、在JDK1.8之前，日期时间都用Date，但是特别难用</li><li>2、import java.time.XXX  <ul><li>LocalDate：日期</li><li>LocalTime：时间</li><li>LocalDateTime：日期+时间</li></ul></li><li>3、获取当前日期：<ul><li>获取指定日期：</li><li>把字符串解析为日期：</li><li>日期对象.getXXX()用于获取年月日的部分</li></ul></li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240802/%E5%B8%B8%E7%94%A8%E7%B1%BB%E6%97%A5%E6%9C%9F.9nzp4t5gta.webp" alt="常用类日期"></p><hr><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//LocalTime</span><br><span class="hljs-type">LocalTime</span> <span class="hljs-variable">t1</span> <span class="hljs-operator">=</span> LocalTime.now();<span class="hljs-comment">//获取当前时分秒</span><br>System.out.println(t1);<br>LocalTime t2=LocalTime.of(<span class="hljs-number">8</span>,<span class="hljs-number">9</span>,<span class="hljs-number">56</span>);<span class="hljs-comment">//获取制定的时分秒</span><br>System.out.println(t2);<br>LocalTime t3=LocalTime.parse(<span class="hljs-string">&quot;23:26:08&quot;</span>);<span class="hljs-comment">//字符串解析成时间</span><br>System.out.println(t3);<br><span class="hljs-comment">//获取时分秒</span><br>System.out.println(t1.getHour());<br>System.out.println(t1.getMinute());<br>System.out.println(t1.getSecond());<br><br></code></pre></td></tr></table></figure><hr><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//LocalDate</span><br>LocalDate d1=LocalDate.now();<span class="hljs-comment">//获取当前日期</span><br>System.out.println(d1);<br>LocalDate d2=LocalDate.of(<span class="hljs-number">2023</span>,<span class="hljs-number">6</span>,<span class="hljs-number">19</span>);<span class="hljs-comment">//获取指定日期</span><br>System.out.println(d2);<br>LocalDate d3=LocalDate.parse(<span class="hljs-string">&quot;1998-02-08&quot;</span>);<span class="hljs-comment">//把字符串解析为日期</span><br>System.out.println(d3);<br><br>System.out.println(d3.getYear());<span class="hljs-comment">//获取年</span><br>System.out.println(d3.getMonth());<span class="hljs-comment">//获取英语的月</span><br>System.out.println(d3.getMonthValue());<span class="hljs-comment">//获取数字的月</span><br>System.out.println(d3.getDayOfMonth());<span class="hljs-comment">//这月的第几天</span><br>System.out.println(d3.getDayOfWeek());<span class="hljs-comment">//这周的第几天</span><br>System.out.println(d3.getDayOfYear());<span class="hljs-comment">//这年的第几天</span><br></code></pre></td></tr></table></figure><hr><h2 id="常用类：日期、时间"><a href="#常用类：日期、时间" class="headerlink" title="常用类：日期、时间"></a>常用类：日期、时间</h2><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240802/%E5%B8%B8%E7%94%A8%E7%B1%BB%E6%97%A5%E6%9C%9F%E6%97%B6%E9%97%B4.86tk321c2n.webp" alt="常用类日期时间"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//LocalDateTime</span><br> LocalDateTime dt1=LocalDateTime.now();<br>System.out.println(dt1);<br>LocalDate d2=LocalDate.of(<span class="hljs-number">1998</span>,<span class="hljs-number">2</span>,<span class="hljs-number">8</span>);<span class="hljs-comment">//获取指定日期</span><br>LocalTime t2=LocalTime.of(<span class="hljs-number">12</span>,<span class="hljs-number">24</span>,<span class="hljs-number">59</span>);<span class="hljs-comment">//获取制定的时分秒</span><br>LocalDateTime dt2=LocalDateTime.of(d2,t2);<br>System.out.println(dt2);<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * LocalDateTime lt = LocalDateTime.parse(&quot;2018-12-30T19:34:50.63&quot;);</span><br><span class="hljs-comment"> *需要解析后才能正常输出</span><br><span class="hljs-comment">  *</span><br><span class="hljs-comment">  */</span><br>LocalDateTime dt3=LocalDateTime.parse(<span class="hljs-string">&quot;1997-03-17T11:59:59&quot;</span>);<br>System.out.println(dt3);<br><br>System.out.println(dt1.getDayOfMonth());<br>System.out.println(dt1.getDayOfWeek());<br>System.out.println(dt1.getDayOfYear());<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part2</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P1-13  方法</title>
    <link href="/2024/08/01/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part1-%E7%AC%94%E8%AE%B0/P1-13%20%E6%96%B9%E6%B3%95/"/>
    <url>/2024/08/01/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part1-%E7%AC%94%E8%AE%B0/P1-13%20%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h1 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h1><h2 id="什么是方法"><a href="#什么是方法" class="headerlink" title="什么是方法"></a>什么是方法</h2><ul><li>1、程序&#x3D;命令+数据+逻辑</li><li>2、方法也可以叫函数</li><li>3、方法就是组成程序的可以<strong>重复使用</strong>的积木，方法把复杂的N行代码封装起来，让使用者可以通过“方法名”调用(使用)。</li><li>比如println()内部就很复杂</li></ul><h2 id="方法的组成"><a href="#方法的组成" class="headerlink" title="方法的组成"></a>方法的组成</h2><p>方法由方法名、参数、返回值组成</p><ul><li>1、方法名是别人调用本“命令”的标识符</li><li>2、参数是调用方法的时候传递的数据<ul><li>方法可能没有参数，也可能有1个或N个参数</li></ul></li><li>调用方法的时候要足量、正确的类型的传递参数</li><li>3、返回值是方法调用完成的结果。方法可能没有返回值</li><li>对于有返回值的方法，我们也可以忽略返回值</li></ul><h2 id="两种方法"><a href="#两种方法" class="headerlink" title="两种方法"></a>两种方法</h2><p>1、别人写好的方法：JDK内置的库中的方法；第三方库中的方法</p><p>2、自己写的方法：给自己或者别人使用的方法</p><p>先学怎么调用别人的，熟练了再自己写</p><h2 id="重载方法"><a href="#重载方法" class="headerlink" title="重载方法"></a>重载方法</h2><ul><li>允许存在一个以上的同名方法，只要参数个数或参数类型不同即可。这些方法叫做“重载方法”。</li><li>编译器会根据调用的时候传递参数的个数以及类型来自动匹配合适的重载方法。</li></ul><h2 id="方法的定义语法"><a href="#方法的定义语法" class="headerlink" title="方法的定义语法"></a>方法的定义语法</h2><p>Ctrl+F12 可以快速看当前页面所有的方法列表</p><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240801/%E6%96%B9%E6%B3%95%E7%9A%84%E5%AE%9A%E4%B9%89%E8%AF%AD%E6%B3%95.86tk1qsfae.webp" alt="方法的定义语法"></p><h2 id="方法的调用语法"><a href="#方法的调用语法" class="headerlink" title="方法的调用语法"></a>方法的调用语法</h2><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240801/%E6%96%B9%E6%B3%95%E7%9A%84%E8%B0%83%E7%94%A8%E8%AF%AD%E6%B3%95.8z6fjh910k.webp" alt="方法的调用语法"></p>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part1</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P1-12  数组案例</title>
    <link href="/2024/08/01/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part1-%E7%AC%94%E8%AE%B0/P1-12%20%E6%95%B0%E7%BB%84%E6%A1%88%E4%BE%8B/"/>
    <url>/2024/08/01/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part1-%E7%AC%94%E8%AE%B0/P1-12%20%E6%95%B0%E7%BB%84%E6%A1%88%E4%BE%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="数组案例"><a href="#数组案例" class="headerlink" title="数组案例"></a>数组案例</h1><blockquote><p>普通算法：for、if…<br>不用第三方，内置的库<br><strong>用普通算法达到把问题解决</strong>的目的才是牛人。初学者尽量少依赖于第三方那个的库</p></blockquote><h2 id="倒序输出数组的值"><a href="#倒序输出数组的值" class="headerlink" title="倒序输出数组的值"></a>倒序输出数组的值</h2><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240801/%E9%80%86%E5%BA%8F%E8%BE%93%E5%87%BA%E6%95%B0%E7%BB%84%E7%9A%84%E5%80%BC.1vyk3ouh79.webp" alt="逆序输出数组的值"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//逆序输出</span><br>String[] names =&#123;<span class="hljs-string">&quot;rzx&quot;</span>,<span class="hljs-string">&quot;cool&quot;</span>,<span class="hljs-string">&quot;shuai&quot;</span>&#125;;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i= names.length-<span class="hljs-number">1</span>;i&gt;=<span class="hljs-number">0</span>;i--)<br>&#123;<br>    System.out.println(names[i]);<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="计算2个等长数组元素逐位的和"><a href="#计算2个等长数组元素逐位的和" class="headerlink" title="计算2个等长数组元素逐位的和"></a>计算2个等长数组元素逐位的和</h2><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240801/%E8%AE%A1%E7%AE%972%E4%B8%AA%E7%99%BB%E5%9C%BA%E6%95%B0%E7%BB%84%E5%85%83%E7%B4%A0%E9%80%90%E4%BD%8D.99t9cgf4wk.webp" alt="计算2个登场数组元素逐位"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//计算2个等长数组元素逐位的和</span><br><span class="hljs-type">int</span>[] nums1=&#123;<span class="hljs-number">6</span>,<span class="hljs-number">8</span>,<span class="hljs-number">11</span>&#125;;<br><span class="hljs-type">int</span>[] nums2=&#123;<span class="hljs-number">8</span>,<span class="hljs-number">6</span>,<span class="hljs-number">12</span>&#125;;<br><span class="hljs-type">int</span>[] nums3=<span class="hljs-keyword">new</span> <span class="hljs-title class_">int</span>[nums1.length];<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span><span class="hljs-number">0</span>;i&lt;=nums1.length-<span class="hljs-number">1</span>;i++)<br>&#123;<br>    nums3[i]=nums1[i] + nums2[i];<br>&#125;<br>System.out.println(Arrays.toString(nums3));<br></code></pre></td></tr></table></figure><h2 id="查找数组中最大值"><a href="#查找数组中最大值" class="headerlink" title="查找数组中最大值"></a>查找数组中最大值</h2><ul><li>思路很重要</li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240801/%E6%9F%A5%E6%89%BE%E6%95%B0%E7%BB%84%E4%B8%AD%E6%9C%80%E5%A4%A7%E5%80%BC.4g4egbufte.webp" alt="查找数组中最大值"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//查找数组中最大值</span><br><span class="hljs-type">int</span>[] nums=&#123;<span class="hljs-number">3</span>,<span class="hljs-number">5</span>,<span class="hljs-number">8</span>,<span class="hljs-number">93</span>,<span class="hljs-number">777</span>,<span class="hljs-number">666</span>,<span class="hljs-number">888</span>,<span class="hljs-number">999</span>,<span class="hljs-number">1888</span>,<span class="hljs-number">8888</span>,<span class="hljs-number">9999</span>,<span class="hljs-number">1314</span>&#125;;<br><span class="hljs-type">int</span> max=nums[<span class="hljs-number">0</span>];<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;nums.length;i++)<br>&#123;<br>    <span class="hljs-type">int</span> n=nums[i];<span class="hljs-comment">//找一个变量来存放循环取出来的值</span><br>    <span class="hljs-keyword">if</span> (n&gt;max)<br>    &#123;<br>        max=n;<span class="hljs-comment">//当取出来的值大于前一个最大值时，则更新最大值</span><br>    &#125;<br>&#125;<br>System.out.println(max);<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part1</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P1-11  数组其他</title>
    <link href="/2024/08/01/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part1-%E7%AC%94%E8%AE%B0/P1-11%20%E6%95%B0%E7%BB%84%E5%85%B6%E4%BB%96/"/>
    <url>/2024/08/01/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part1-%E7%AC%94%E8%AE%B0/P1-11%20%E6%95%B0%E7%BB%84%E5%85%B6%E4%BB%96/</url>
    
    <content type="html"><![CDATA[<h1 id="数组其他"><a href="#数组其他" class="headerlink" title="数组其他"></a>数组其他</h1><h2 id="一切类型皆可数组"><a href="#一切类型皆可数组" class="headerlink" title="一切类型皆可数组"></a>一切类型皆可数组</h2><ul><li>1、String[] a&#x3D;new String[10];<ul><li>String[] a&#x3D;{“ccc”,”yyds”,”rzx”};</li></ul></li><li>2、byte[] bytes&#x3D;new byte[];<ul><li>byte[] bytes&#x3D;{3,5,7,9,10,12};</li></ul></li></ul><h2 id="数组长度"><a href="#数组长度" class="headerlink" title="数组长度"></a>数组长度</h2><ul><li>1、数组有一个特殊的用法是：数组名.length</li><li>这样可以获得数组的长度，这样可以避免上面吧数组长度写死的问题<ul><li>int len &#x3D;al.length</li></ul></li><li>2、避免魔法数</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">int</span>[] sums =&#123;<span class="hljs-number">33</span>,<span class="hljs-number">66</span>,<span class="hljs-number">88</span>,<span class="hljs-number">333</span>,<span class="hljs-number">666</span>,<span class="hljs-number">888</span>&#125;;<br><span class="hljs-comment">//从第0个元素，遍历到第“6-1”个元素   这个6就是所谓的魔法数~</span><br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i= <span class="hljs-number">0</span>;i&lt;=<span class="hljs-number">6</span>-<span class="hljs-number">1</span>;i++)<br>&#123;<br>    System.out.println(sums[i]);<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="案例1：数组的正序遍历"><a href="#案例1：数组的正序遍历" class="headerlink" title="案例1：数组的正序遍历"></a>案例1：数组的正序遍历</h3><p>写法1</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">int</span>[] sums =&#123;<span class="hljs-number">33</span>,<span class="hljs-number">66</span>,<span class="hljs-number">88</span>,<span class="hljs-number">333</span>,<span class="hljs-number">666</span>,<span class="hljs-number">888</span>&#125;;<br><span class="hljs-comment">//从第0个元素，遍历到第“length-1”个元素</span><br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i= <span class="hljs-number">0</span>;i&lt;=sums.length-<span class="hljs-number">1</span>;i++)<br>&#123;<br>    System.out.println(sums[i]);<br>&#125;<br></code></pre></td></tr></table></figure><p>写法2</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">int</span>[] sums =&#123;<span class="hljs-number">33</span>,<span class="hljs-number">66</span>,<span class="hljs-number">88</span>,<span class="hljs-number">333</span>,<span class="hljs-number">666</span>,<span class="hljs-number">888</span>&#125;;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i= <span class="hljs-number">0</span>;i&lt;sums.length;i++)<br>&#123;<br>    System.out.println(sums[i]);<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="案例2：数组倒序遍历"><a href="#案例2：数组倒序遍历" class="headerlink" title="案例2：数组倒序遍历"></a>案例2：数组倒序遍历</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">int</span>[] sums =&#123;<span class="hljs-number">33</span>,<span class="hljs-number">66</span>,<span class="hljs-number">88</span>,<span class="hljs-number">333</span>,<span class="hljs-number">666</span>,<span class="hljs-number">888</span>&#125;;<br><span class="hljs-comment">//从第“length-1”个元素，遍历到第0个元素</span><br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i= sums.length-<span class="hljs-number">1</span>;i&gt;=<span class="hljs-number">0</span>;i--)<br>&#123;<br>    System.out.println(sums[i]);<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="增强for循环"><a href="#增强for循环" class="headerlink" title="增强for循环"></a>增强for循环</h2><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240801/%E5%A2%9E%E5%BC%BAfor%E5%BE%AA%E7%8E%AF.58h9y03glv.webp" alt="增强for循环"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">int</span>[] sums =&#123;<span class="hljs-number">33</span>,<span class="hljs-number">66</span>,<span class="hljs-number">88</span>,<span class="hljs-number">333</span>,<span class="hljs-number">666</span>,<span class="hljs-number">888</span>&#125;;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> n:sums)<span class="hljs-comment">//遍历nums的每个元素，每个遍历到的元素用变量n来获取，对于每个遍历到的元素，都执行一次循环体</span><br>&#123;<br>    System.out.println(n);<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="数组的打印"><a href="#数组的打印" class="headerlink" title="数组的打印"></a>数组的打印</h2><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240801/%E6%95%B0%E7%BB%84%E7%9A%84%E6%89%93%E5%8D%B0.9kg35jynxs.webp" alt="数组的打印"></p><ul><li>练习<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java">String[] strs=&#123;<span class="hljs-string">&quot;rzx&quot;</span>,<span class="hljs-string">&quot;nzs&quot;</span>,<span class="hljs-string">&quot;18&quot;</span>&#125;;<br>System.out.println(strs);<br><span class="hljs-type">String</span> <span class="hljs-variable">str1</span> <span class="hljs-operator">=</span>  Arrays.toString(strs);<span class="hljs-comment">//把数组转换为“可读性强”的字符串</span><br>System.out.println(str1);<br></code></pre></td></tr></table></figure></li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240801/%E6%95%B0%E7%BB%84%E6%89%93%E5%8D%B0.9nzp39ud3c.webp" alt="数组打印"></p>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part1</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P1-10  数组</title>
    <link href="/2024/08/01/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part1-%E7%AC%94%E8%AE%B0/P1-10%20%E6%95%B0%E7%BB%84/"/>
    <url>/2024/08/01/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part1-%E7%AC%94%E8%AE%B0/P1-10%20%E6%95%B0%E7%BB%84/</url>
    
    <content type="html"><![CDATA[<h1 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h1><h2 id="为什么有数组"><a href="#为什么有数组" class="headerlink" title="为什么有数组"></a>为什么有数组</h2><ul><li>1、如果需要记录全班同学的姓名，难道要声明60个String变量？</li><li>2、<strong>有序</strong>数据的集合就是数据（Array）</li><li>3、数组中每项都有一个编号，被称为数组下标<ul><li>通过下标就可以找到数组中指定的数据，也可以给指定位置赋值</li></ul></li></ul><h2 id="数组的定义和初始化"><a href="#数组的定义和初始化" class="headerlink" title="数组的定义和初始化"></a>数组的定义和初始化</h2><ul><li>1、int[] a&#x3D;{1,2,3,4,5,6,7,8,9,10};这个常用，指定初始值和长度<ul><li>int a[] &#x3D; {1,2,3,4,5,6,7,8,9,10};下面这个也行，功能没区别，就是书写格式变了一点</li></ul></li><li>2、int[] a&#x3D;new int[10];声明长度，不赋初始值<ul><li>int a[]&#x3D;new int[10];</li><li>每个元素的值为默认值</li><li>int，double等默认值是0；boolean默认值是false；String等默认值是null</li></ul></li></ul><h2 id="引用元素"><a href="#引用元素" class="headerlink" title="引用元素"></a>引用元素</h2><ul><li>1、数据组员下标从0开始，最后一个元素的下标为“长度-1”</li><li>2、引用数组的形式：数组名[下标]</li><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240801/%E6%95%B0%E7%BB%841.2krtnefljc.webp" alt="数组1"></li></ul><h2 id="数组-下标使用"><a href="#数组-下标使用" class="headerlink" title="数组+下标使用"></a>数组+下标使用</h2><ul><li>1、a[2]单独使用或者放到&#x3D;右边，就是取值<ul><li>放到&#x3D;左边就是赋值</li></ul></li><li>2、数组元素完全可以当做变量使用<ul><li>进行数学运算、赋值操作、自加自减等</li></ul></li><li>3、举例  元素的赋值&#x2F;取值</li></ul><h2 id="数组越界"><a href="#数组越界" class="headerlink" title="数组越界"></a>数组越界</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">int</span>[] a =&#123;<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>&#125;;<br>System.out.println(a[<span class="hljs-number">3</span>]);<br></code></pre></td></tr></table></figure><blockquote><p>数组下标超范围了<br><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240801/%E6%95%B0%E6%8D%AE%E8%B6%8A%E7%95%8C.4xug4m9epp.webp" alt="数据越界"></p></blockquote>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part1</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P1-9  循环结构</title>
    <link href="/2024/08/01/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part1-%E7%AC%94%E8%AE%B0/P1-9%20%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84/"/>
    <url>/2024/08/01/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part1-%E7%AC%94%E8%AE%B0/P1-9%20%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84/</url>
    
    <content type="html"><![CDATA[<h1 id="循环结构"><a href="#循环结构" class="headerlink" title="循环结构"></a>循环结构</h1><p><strong>目的：反复执行N次(或一直执行)某段代码</strong></p><ul><li>好比操场上跑圈一样，重复绕圈跑步，直到自己的目标</li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240801/%E6%93%8D%E5%9C%BA%E8%B7%91%E5%9C%88.5xajhhid1k.webp" alt="操场跑圈"></p><p>DRY原则:<strong>Don’t Repeat Yourself.</strong></p><ul><li>不要重复你自己，(不要重复复制粘贴代码)</li><li>当你发现程序里面有一些代码需要用<strong>复制粘贴</strong>来重复使用的时候，那就说明你的这个代码是有问题的，需要重构</li><li>重构的意思就是说用另外一种算法来把它重新写，而不是把之前的一大堆代码复制粘贴到新的地方去使用<br>三种语句：for(重点)、while(次之)、do……while(不讲)</li></ul><hr><h2 id="while语句"><a href="#while语句" class="headerlink" title="while语句"></a>while语句</h2><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240801/while.5q7bm2i11i.webp" alt="while"></p><p>举例：出了什么问题？</p><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240801/%E9%97%AE%E9%A2%98.5xajhkaiw3.webp" alt="问题"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//错误演示</span><br> <span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span><span class="hljs-number">3</span>;<br><span class="hljs-keyword">while</span> (i&lt;<span class="hljs-number">10</span>);<span class="hljs-comment">//如果后面加了; 那么i一直=3 就会一直满足如i&lt;10 ，所以一直在死循环 while (i&lt;10)&#123;&#125;;</span><br>&#123;<br>    System.out.println(i);<br>    i++;<br>&#125;<br>System.out.println(<span class="hljs-string">&quot;over&quot;</span>);<br></code></pre></td></tr></table></figure><h3 id="while案例："><a href="#while案例：" class="headerlink" title="while案例："></a>while案例：</h3><ul><li><p>1、从10倒数到0</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span><span class="hljs-number">10</span>;<br><span class="hljs-keyword">while</span> (i&gt;=<span class="hljs-number">0</span>)<br>&#123;<br>    System.out.println(i);<br>    i--;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>2、统计0到10的和</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//统计0到10的和</span><br><span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br><span class="hljs-type">int</span> <span class="hljs-variable">sum</span> <span class="hljs-operator">=</span><span class="hljs-number">0</span>;<br><span class="hljs-keyword">while</span> (i&lt;=<span class="hljs-number">10</span>)<br>&#123;<br>    sum = sum+i;<br>    System.out.println(<span class="hljs-string">&quot; sum=&quot;</span>+sum+<span class="hljs-string">&quot; i=&quot;</span>+i);<span class="hljs-comment">//输出过程，体验计算的过程</span><br>    i++;<br>&#125;<br>System.out.println(sum);<br></code></pre></td></tr></table></figure><p>while练习</p></li><li><p>1、用while实现：从5打印到11</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span><span class="hljs-number">5</span>;<br><span class="hljs-keyword">while</span> (i&lt;<span class="hljs-number">12</span>)<br>&#123;<br>    System.out.println(i);<br>    i++;<br>&#125;<br></code></pre></td></tr></table></figure><hr><h2 id="for循环结构"><a href="#for循环结构" class="headerlink" title="for循环结构"></a>for循环结构</h2><p>既生while何生for</p><blockquote><p>while、do……while、for都可以实现循环，可以互换。<br>不同需求，用不同语法难易程序不同<br>使用频率：for &gt;   while   &gt;   do……while</p></blockquote><h3 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h3><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240801/for%E5%BE%AA%E7%8E%AF.73tuqbwv7q.webp" alt="for循环"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">for</span>(表达式<span class="hljs-number">1</span>;表达式<span class="hljs-number">2</span>;表达式<span class="hljs-number">3</span>)<br>&#123;<br>    循环体<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>原理：<br>(1)先执行表达式1，只会执行一次<br>(2)执行表达式2，如果该表达式2结果为真，执行for循环体，然后执行下面第(3)步；如果为假，直接结束for循环<br>(3)执行表达式3，然后跳到第(2)步重新执行</p></blockquote><p>最常用用法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span><span class="hljs-number">0</span>;i&lt;=<span class="hljs-number">3</span>;i++)<br>&#123;<br>    System.out.println(i);<br>&#125;<br><span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span><span class="hljs-number">0</span>;<br></code></pre></td></tr></table></figure><p>上面的例子用while语句去理解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span><span class="hljs-number">0</span>;<br><span class="hljs-keyword">while</span> (i&lt;=<span class="hljs-number">3</span>)<br>&#123;<br>    System.out.println(i);<br>    i++;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="细节-作用域"><a href="#细节-作用域" class="headerlink" title="细节-作用域"></a>细节-作用域</h3><p><strong>区别在于作用域；for循环内定义变量的作用域问题</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span> (i=<span class="hljs-number">0</span>;i&lt;=<span class="hljs-number">3</span>;i++)<span class="hljs-comment">//里面的i=0，是引用了上面声明的变量i了</span><br>&#123;<br>    System.out.println(i);<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="for案例"><a href="#for案例" class="headerlink" title="for案例"></a>for案例</h3><blockquote><p>初始逻辑是什么;<br>循环条件式什么;<br>每次循环之后干什么;</p></blockquote><ul><li>1、从10倒数到0<blockquote><p>初始逻辑  int i&#x3D;10<br>循环条件  i&gt;&#x3D;0<br>每次循环后的动作  i–</p></blockquote></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i=<span class="hljs-number">10</span>;i&gt;=<span class="hljs-number">0</span>;i--)<br>&#123;<br>    System.out.println(i);<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>2、统计0到10的和</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">int</span> <span class="hljs-variable">sum</span> <span class="hljs-operator">=</span><span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span><span class="hljs-number">0</span>;i&lt;=<span class="hljs-number">10</span>;i++)<br>&#123;<br>    sum=sum+i;<br>&#125;<br>System.out.println(sum);<br></code></pre></td></tr></table></figure><ul><li>3、输出2,4,6,8,10</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span><span class="hljs-number">2</span>;i&lt;=<span class="hljs-number">10</span>;i=i+<span class="hljs-number">2</span>)<br>&#123;<br>    System.out.println(i);<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h3><ul><li>1、用for实现：从5打印到11<blockquote><p>初始逻辑  int i&#x3D;5<br>循环条件  i&lt;&#x3D;11<br>每次循环后的动作  i++</p></blockquote></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i=<span class="hljs-number">5</span>;i&lt;=<span class="hljs-number">11</span>;i++)<br>&#123;<br>    System.out.println(i);<br>&#125;<br></code></pre></td></tr></table></figure><hr><h2 id="循环结构其他用法"><a href="#循环结构其他用法" class="headerlink" title="循环结构其他用法"></a>循环结构其他用法</h2><blockquote><p>循环嵌套：循环里套着循环。原地转一圈，就跑一步。<br>嵌套循环可以是嵌套N层，但一般两层</p><p>三种循环(while、do……while、for)可以互相嵌套<br>不过使用最多的是for循环嵌套</p></blockquote><h3 id="for循环嵌套"><a href="#for循环嵌套" class="headerlink" title="for循环嵌套"></a>for循环嵌套</h3><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240801/for%E5%BE%AA%E7%8E%AF%E5%B5%8C%E5%A5%97.9dcv9thlon.webp" alt="for循环嵌套"></p><ul><li>练习<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"> <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">3</span>;i++)<br>&#123;<br>    System.out.println(<span class="hljs-string">&quot;进入内循环&quot;</span>);<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;j&lt;=<span class="hljs-number">3</span>;j++)<br>    &#123;<br>        System.out.println(i+<span class="hljs-string">&quot;,&quot;</span>+j);<br>    &#125;<br>    System.out.println(<span class="hljs-string">&quot;内循环结束&quot;</span>);<br>&#125;<br><br></code></pre></td></tr></table></figure></li></ul><hr><h3 id="break和continue"><a href="#break和continue" class="headerlink" title="break和continue"></a>break和continue</h3><ul><li>1、break和continue都可以和while、do while、for 一起用</li><li>2、break：强制结束循环</li><li>3、continue：不再执行本次循环后面的代码，进行下一次循环</li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240801/break%E5%92%8Ccontinue.6f0l6b9c79.webp" alt="break和continue"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;i&lt;=<span class="hljs-number">10</span>;i++)<br>&#123;<br>    <span class="hljs-keyword">if</span> (i%<span class="hljs-number">2</span>==<span class="hljs-number">0</span>)<br>    &#123;<br>        <span class="hljs-keyword">break</span>;<br>        <span class="hljs-comment">//continue;</span><br>    &#125;<br>    System.out.println(i);<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>大道至简</strong></p>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part1</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P1-8  选择结构</title>
    <link href="/2024/07/31/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part1-%E7%AC%94%E8%AE%B0/P1-8%20%E9%80%89%E6%8B%A9%E7%BB%93%E6%9E%84/"/>
    <url>/2024/07/31/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part1-%E7%AC%94%E8%AE%B0/P1-8%20%E9%80%89%E6%8B%A9%E7%BB%93%E6%9E%84/</url>
    
    <content type="html"><![CDATA[<h1 id="选择结构"><a href="#选择结构" class="headerlink" title="选择结构"></a>选择结构</h1><blockquote><p>目的：满足某些条件的时候才执行一段代码<br>两种语句：if、switch<br>if用的最多，可以代替switch</p></blockquote><h2 id="if"><a href="#if" class="headerlink" title="if"></a>if</h2><h3 id="第一种if"><a href="#第一种if" class="headerlink" title="第一种if"></a>第一种if</h3><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240731/%E7%AC%AC%E4%B8%80%E7%A7%8Dif.lz9ntdiq.webp" alt="第一种if"></p><ul><li>1、语句可以是单行语句，也可以是复合语句</li><li>2、如果是单行语句，{}可以省略，但<strong>不要省略！！！</strong></li><li>3、整个if是一个逻辑语句，因为不能直接在if后面加分号</li></ul><h3 id="第二种if"><a href="#第二种if" class="headerlink" title="第二种if"></a>第二种if</h3><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240731/%E7%AC%AC%E4%BA%8C%E7%A7%8Dif.4916jhsmbu.webp" alt="第二种if"></p><h3 id="第三种if"><a href="#第三种if" class="headerlink" title="第三种if"></a>第三种if</h3><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240731/%E7%AC%AC%E4%B8%89%E7%A7%8Dif.3yecqcg00w.webp" alt="第三种if"></p><h4 id="两个程序运行的结果"><a href="#两个程序运行的结果" class="headerlink" title="两个程序运行的结果"></a>两个程序运行的结果</h4><ol><li><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span><span class="hljs-number">5</span>;<br><span class="hljs-keyword">if</span> (i==<span class="hljs-number">6</span>);<br>&#123;<br>    System.out.println(<span class="hljs-string">&quot;666&quot;</span>);<br>&#125;<br>System.out.println(<span class="hljs-string">&quot;over&quot;</span>);<br></code></pre></td></tr></table></figure></li><li><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span><span class="hljs-number">5</span>;<br><span class="hljs-keyword">if</span> (i=<span class="hljs-number">6</span>)<br>&#123;<br>    System.out.println(<span class="hljs-string">&quot;666&quot;</span>);<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>    System.out.println(<span class="hljs-string">&quot;555&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure></li></ol><h3 id="if嵌套"><a href="#if嵌套" class="headerlink" title="if嵌套"></a>if嵌套</h3><ul><li>俄罗斯套娃</li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240731/if%E5%B5%8C%E5%A5%97.4uau5vtp32.webp" alt="if嵌套"></p><h2 id="switch"><a href="#switch" class="headerlink" title="switch"></a>switch</h2><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240731/switch.32hvazac75.webp" alt="switch"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">int</span> i=<span class="hljs-number">2</span>;<br><span class="hljs-keyword">switch</span> (i)<br>&#123;<br>    <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<br>        <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:<br>        System.out.println(<span class="hljs-string">&quot;2&quot;</span>);<br>        <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">case</span> <span class="hljs-number">5</span>:<br>    <span class="hljs-keyword">case</span> <span class="hljs-number">8</span>:<br>        System.out.println(<span class="hljs-string">&quot;rzx&quot;</span>);<br>        <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">default</span>:<br>        System.out.println(<span class="hljs-string">&quot;error&quot;</span>);<br>        <span class="hljs-keyword">break</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part1</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P1-7  运算符</title>
    <link href="/2024/07/31/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part1-%E7%AC%94%E8%AE%B0/P1-7%20%E8%BF%90%E7%AE%97%E7%AC%A6/"/>
    <url>/2024/07/31/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part1-%E7%AC%94%E8%AE%B0/P1-7%20%E8%BF%90%E7%AE%97%E7%AC%A6/</url>
    
    <content type="html"><![CDATA[<h1 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h1><h2 id="常用运算符"><a href="#常用运算符" class="headerlink" title="常用运算符"></a>常用运算符</h2><ul><li>+(加)、-(减)、*(乘)、&#x2F;(除)、%(取余)<ul><li>整数和整数运算，结果就是整数</li><li>数值提升</li></ul></li><li>先乘除后加减，可以使用()改变运算优先级</li><li>对于字符串也可以用+进行字符串连接操作</li></ul><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>3+(6+”a”)+(“b”+(1+2)*3)的结果是多少</p><blockquote><p>36ab9</p></blockquote><hr><h2 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h2><h2 id="a-b-将右边表达式的值赋值给左边的变量。这里的-不是相等判断，而是赋值操作"><a href="#a-b-将右边表达式的值赋值给左边的变量。这里的-不是相等判断，而是赋值操作" class="headerlink" title="a&#x3D;b;将右边表达式的值赋值给左边的变量。这里的&#x3D;不是相等判断，而是赋值操作"></a>a&#x3D;b;将右边表达式的值赋值给左边的变量。这里的&#x3D;不是<strong>相等判断</strong>，而是<strong>赋值操作</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">int</span> a;<br><span class="hljs-type">int</span> b;<br><span class="hljs-type">int</span> c;<br>a=<span class="hljs-number">20</span>;<span class="hljs-comment">//将数值20赋值给变量a</span><br>b=a-<span class="hljs-number">10</span>;<span class="hljs-comment">//先计算a-10，然后将计算结果赋值给变量b</span><br>c=a+b;<span class="hljs-comment">//先计算a+b，然后将计算结果赋值给变量c</span><br></code></pre></td></tr></table></figure></h2><h2 id="复合运算符"><a href="#复合运算符" class="headerlink" title="复合运算符"></a>复合运算符</h2><ul><li>能a&#x3D;a+10，就不要a+&#x3D;10。</li><li>代码越傻瓜越好<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java">a+=<span class="hljs-number">10</span>;<span class="hljs-comment">//等价于a=a+10</span><br>a-=<span class="hljs-number">10</span>;<span class="hljs-comment">//等价于a=a-10</span><br>a*=<span class="hljs-number">10</span>;<span class="hljs-comment">//等价于a=a*10</span><br>a/=<span class="hljs-number">10</span>;<span class="hljs-comment">//等价于a=a/10</span><br>a%=<span class="hljs-number">10</span>;<span class="hljs-comment">//等价于a=a%10</span><br>System.out.println(a);<br></code></pre></td></tr></table></figure></li></ul><hr><h3 id="自增-自减"><a href="#自增-自减" class="headerlink" title="自增&#x2F;自减"></a>自增&#x2F;自减</h3><ul><li>++x</li><li>x++</li><li>–y</li><li>y–<br>前后的区分，一个是前置，一个是后置</li></ul><h3 id="顺序执行"><a href="#顺序执行" class="headerlink" title="顺序执行"></a>顺序执行</h3><ul><li>程序从上往下逐条执行，一条执行结束在执行下一条</li><li>过去的就过去了，不会走回头路</li></ul><h2 id="关系运算符"><a href="#关系运算符" class="headerlink" title="关系运算符"></a>关系运算符</h2><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">&lt;   小于<br>&lt;=  小于等于<br>&gt;   大于<br>&gt;=  大于等于<br><span class="hljs-section">==  等于</span><br>!=  不等于<br>相比较的结果就是布尔类型（真/假）<br></code></pre></td></tr></table></figure><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><ul><li>1、不要把a&#x3D;&#x3D;b写成a&#x3D;b</li><li>2、String的相等比较不能用&#x3D;&#x3D;，要用equals<ul><li>s.equals(s1)</li><li>C# &#x2F;Python 都可以直接用&#x3D;&#x3D;去比较</li></ul></li></ul><h2 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h2><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240731/%E9%80%BB%E8%BE%91%E8%BF%90%E7%AE%97%E7%AC%A6.26ldvep0c2.webp" alt="逻辑运算符"></p><h2 id="三元运算符"><a href="#三元运算符" class="headerlink" title="三元运算符"></a>三元运算符</h2><p>表达式1?表达式2:表达式3</p><blockquote><p>如果表达式1的结算为真，以表达式2的值作为整个条件表达式的值，否则以表达式3的值作为整个条件表达式的值<br>简写的if else的写法，真就选第一个值，假就选第二个值</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">int</span> <span class="hljs-variable">a</span> <span class="hljs-operator">=</span><span class="hljs-number">3</span>;<br><span class="hljs-type">int</span> <span class="hljs-variable">b</span> <span class="hljs-operator">=</span> <span class="hljs-number">5</span>;<br><span class="hljs-type">int</span> <span class="hljs-variable">c</span> <span class="hljs-operator">=</span> (a&gt;b?<span class="hljs-number">888</span>:<span class="hljs-number">666</span>);<br>System.out.println(c);<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part1</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P1-6  变量</title>
    <link href="/2024/07/31/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part1-%E7%AC%94%E8%AE%B0/P1-6%20%E5%8F%98%E9%87%8F/"/>
    <url>/2024/07/31/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part1-%E7%AC%94%E8%AE%B0/P1-6%20%E5%8F%98%E9%87%8F/</url>
    
    <content type="html"><![CDATA[<h1 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h1><h2 id="定义变量"><a href="#定义变量" class="headerlink" title="定义变量"></a>定义变量</h2><p><strong>变量先定义，才能使用</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">int</span> <span class="hljs-variable">number</span> <span class="hljs-operator">=</span> <span class="hljs-number">26</span>;<br>System.out.println(number);<br></code></pre></td></tr></table></figure><h2 id="引用已有变量"><a href="#引用已有变量" class="headerlink" title="引用已有变量"></a>引用已有变量</h2><p>  两种作用</p><ul><li>1.读取变量的数据</li><li>2.重新赋值</li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240731/%E5%B7%B2%E6%9C%89%E5%8F%98%E9%87%8F.73tuoxzr3e.webp" alt="已有变量"></p><h2 id="常见错误"><a href="#常见错误" class="headerlink" title="常见错误"></a>常见错误</h2><ul><li>1、变量必须定义才能使用</li><li>2、数据类型错误</li><li>3、变量重名</li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240731/%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF.1e8idd0caq.webp" alt="常见错误"></p><h2 id="变量命名的规范"><a href="#变量命名的规范" class="headerlink" title="变量命名的规范"></a>变量命名的规范</h2><ul><li>1、要取有意义的变量名，不要a1、a2、x1<ul><li>这是程序员默认的潜规则</li><li>这样去写代码，显的不是很专业</li></ul></li><li>2、变量一般小写开头，遵守驼峰法<ul><li>除了第一个单词小写，后面的单词首字母大写<ul><li>比如helloWrold</li></ul></li></ul></li><li>3、如果英语很不好或者专业术语不知道怎么翻译或者非专业程序员，可以根据情况决定是否用中文变量名</li><li>关于<strong>代码坏味道</strong><ul><li>如果平时写代码都是a1、a2的变量的例子和代码风格写的不好的人，显的很不专业，如果进入公司的后续也很难在规范</li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part1</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P1-5  注释</title>
    <link href="/2024/07/31/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part1-%E7%AC%94%E8%AE%B0/P1-5%20%E6%B3%A8%E9%87%8A/"/>
    <url>/2024/07/31/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part1-%E7%AC%94%E8%AE%B0/P1-5%20%E6%B3%A8%E9%87%8A/</url>
    
    <content type="html"><![CDATA[<h1 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h1><h2 id="注释的作用"><a href="#注释的作用" class="headerlink" title="注释的作用"></a>注释的作用</h2><ul><li>被注释的内容，编译器会忽略</li><li>主要作用：对代码进行解释说明。</li><li>原则：适当的注释。自解释的代码<ul><li>终极目标：不写注释，别人也能看懂你的逻辑</li></ul></li><li><strong>副作用：暂时停用部分代码</strong></li></ul><h2 id="三种注释"><a href="#三种注释" class="headerlink" title="三种注释"></a>三种注释</h2><ul><li>1、单行注释：&#x2F;&#x2F;  本行中&#x2F;&#x2F;之后的为主<ul><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240731/%E5%8D%95%E8%A1%8C%E6%B3%A8%E9%87%8A.92q1f967uc.webp" alt="单行注释"></li></ul></li><li>2、多行注释：&#x2F;*    *&#x2F;<ul><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240731/%E5%A4%9A%E8%A1%8C%E6%B3%A8%E9%87%8A.51e20v24hg.webp" alt="多行注释"></li></ul></li><li>3、JavaDoc<ul><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240731/JavaDoc.9dcv8elfzn.webp" alt="JavaDoc"></li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part1</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P1-4 常用数据类型</title>
    <link href="/2024/07/31/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part1-%E7%AC%94%E8%AE%B0/P1-4%20%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
    <url>/2024/07/31/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part1-%E7%AC%94%E8%AE%B0/P1-4%20%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="常用数据类型"><a href="#常用数据类型" class="headerlink" title="常用数据类型"></a>常用数据类型</h1><h2 id="程序-命令-数据-逻辑"><a href="#程序-命令-数据-逻辑" class="headerlink" title="程序&#x3D;命令+数据+逻辑"></a>程序&#x3D;命令+数据+逻辑</h2><ul><li>方法&#x2F;函数<ul><li>查询可用日期,组装载人火箭</li></ul></li><li>数据类型<ul><li>限制每个数据的范围</li><li>int</li></ul></li><li>字面量<ul><li>比如下面的60，306</li></ul></li><li>变量<ul><li>变量就是用来获取别人给你数据的一个途径而已<ul><li>（好比：矿泉水瓶，里面装这水，水就是数据。当我喝了就是把数据给我了）</li></ul></li><li>变量就是数据的中转站，变量就是拿过来数据给别人使用的</li><li>比如date,weight<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">Date</span> <span class="hljs-variable">date</span> <span class="hljs-operator">=</span>查询可用日期(<span class="hljs-string">&quot;载人&quot;</span>)<br><span class="hljs-type">int</span> <span class="hljs-variable">weight</span> <span class="hljs-operator">=</span> <span class="hljs-number">60</span>+<span class="hljs-number">306</span><br><span class="hljs-type">Rocket</span> <span class="hljs-variable">rl</span> <span class="hljs-operator">=</span>组装载人火箭(weight)<br><span class="hljs-keyword">if</span>(date==Date.Today)<br>&#123;<br>  发射火箭(rl,<span class="hljs-number">3</span>);<br>&#125;<br></code></pre></td></tr></table></figure></li></ul></li></ul><h2 id="常用数据类型-1"><a href="#常用数据类型-1" class="headerlink" title="常用数据类型"></a>常用数据类型</h2><ul><li>整数：主要是int。还有long、short、byte等。<ul><li>1、0、-1、365</li></ul></li><li>浮点数：主要是float。还有double<ul><li>0.03、3.14、-1.68</li><li>单精度，双精度</li></ul></li><li>字符：char<ul><li>‘a’、’w’、’鑫’。一个汉字是一个字符，也只能是一个字符，空也不可以</li></ul></li><li>字符串：String<ul><li>“Hello”、”java”、”rzx18”</li><li>字符串中\和换行的转义(难点):”hello\world\n你好”<ul><li>\代表一个字符，显示出来就是\</li><li>\n是换行符</li></ul></li></ul></li><li>布尔值：boolean<ul><li>true、false  真假值</li></ul></li></ul><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><p>变量3部分：变量类型、变量名、变量值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">int</span> <span class="hljs-variable">il</span> <span class="hljs-operator">=</span> <span class="hljs-number">3</span>;<br><span class="hljs-type">int</span> <span class="hljs-variable">age</span> <span class="hljs-operator">=</span> <span class="hljs-number">9</span>;<br>String name=<span class="hljs-string">&quot;任宗鑫&quot;</span>;<br><br></code></pre></td></tr></table></figure><h4 id="规则"><a href="#规则" class="headerlink" title="规则"></a>规则</h4><ul><li>适应于标识符、变量名等命名规则<br><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240731/%E6%A0%87%E8%AF%86%E7%AC%A6%E5%91%BD%E5%90%8D%E8%A7%84%E5%88%99.1hs4b0eb18.webp" alt="标识符命名规则"></li></ul>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part1</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P1-3  编写第一个Java程序</title>
    <link href="/2024/07/30/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part1-%E7%AC%94%E8%AE%B0/P1-3%20%E7%BC%96%E5%86%99%E7%AC%AC%E4%B8%80%E4%B8%AAJava%E7%A8%8B%E5%BA%8F/"/>
    <url>/2024/07/30/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part1-%E7%AC%94%E8%AE%B0/P1-3%20%E7%BC%96%E5%86%99%E7%AC%AC%E4%B8%80%E4%B8%AAJava%E7%A8%8B%E5%BA%8F/</url>
    
    <content type="html"><![CDATA[<h1 id="编写第一个Java程序"><a href="#编写第一个Java程序" class="headerlink" title="编写第一个Java程序"></a>编写第一个Java程序</h1><ul><li>学编程不了解底层怎么办？<ul><li>所谓的底层知识的学习是自然而然的过程，不是刻意去学的</li><li>你一定是先会用再去研究底层，而不是一上来就研究底层</li></ul></li></ul><h2 id="建JAVA项目步骤"><a href="#建JAVA项目步骤" class="headerlink" title="建JAVA项目步骤"></a>建JAVA项目步骤</h2><blockquote><p>统一同Maven方式组织代码<br>无论普通项目、Maven、gradle，代码都是一样的<br>IDEA中快速输入System&#x2F;out.printin（）的方法</p></blockquote><ul><li><p>不会讲解太多快捷键、代码生成等</p><ul><li>代码生成工具是帮助熟练的人更快的写代码，而不是让初学者变成傻叉的</li></ul></li><li><p>创建Maven项目卡住了~ 2024 太新了 os：解决了</p><ul><li>解决步骤</li><li>选择Maven，设置JDK版本，选择maven项目的模板<br>org.apache.maven.archetypes:maven-archetype-quickstart就是普通Maven项目面板</li><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240731/Maven.361h863o5k.webp" alt="Maven"></li></ul></li><li><p>课件地址</p><ul><li><a href="https://github.com/yangzhongke/yzk18/tree/main/%E8%AF%BE%E7%A8%8B%E8%AF%BE%E4%BB%B6%E4%BB%A3%E7%A0%81%E7%AD%89/Part1">https://github.com/yangzhongke/yzk18/tree/main/%E8%AF%BE%E7%A8%8B%E8%AF%BE%E4%BB%B6%E4%BB%A3%E7%A0%81%E7%AD%89/Part1</a></li></ul></li></ul><p>创建项目步骤</p><ul><li>在src-main-java的文件创建class（类）<ul><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240730/%E6%96%B0%E5%BB%BA1.3rb4tq0emu.webp" alt="新建1"></li></ul></li><li>输入class的名字，然后点击回车<ul><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240730/%E5%90%8D%E5%AD%97.syuq7s55e.webp" alt="名字"></li></ul></li><li>写完hello代码后run编译运行<ul><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240730/Run.3uuqrfthc8.webp" alt="Run"></li></ul></li></ul><h3 id="键盘"><a href="#键盘" class="headerlink" title="键盘"></a>键盘</h3><ul><li>出现了一个从来没想到的问题，键盘的大写A怎么输入~  <ul><li>之前都是先按CapsLk按键，然后在按a</li><li>没想到直接Shift+字母键就可以打出大写字母了（快捷输入大写字母）</li></ul></li></ul><h3 id="关于缩进和大括号"><a href="#关于缩进和大括号" class="headerlink" title="关于缩进和大括号"></a>关于缩进和大括号</h3><ul><li>1、和Python不一样，Java中的缩进不是强制的，不过缩进强制可以让代码更清晰</li><li>Java中{}有同一行、换行两种习惯，没有区别，我喜欢换行（C#的格式）</li><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240730/%E5%90%8C%E4%B8%80%E8%A1%8C%E4%B8%8E%E6%8D%A2%E8%A1%8C.6f0l42tfys.webp" alt="同一行与换行"></li></ul><h3 id="常见错误"><a href="#常见错误" class="headerlink" title="常见错误"></a>常见错误</h3><p>编程是很严谨的。代码有错如何在IDEA中发现</p><ul><li>1、标点符号用的是中文（全角）符号</li><li>2、大小写敏感</li><li>3、少了分号  别;:、o0、1l分不清</li><li>4、代码写错了位置</li><li>5、拼写错误  面的故事（main）</li><li>6、忘记了写结尾的分号，每一个<strong>逻辑行</strong>都要以分号结尾</li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240730/%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF.58h9vh4jd9.webp" alt="常见错误"></p><blockquote><p><strong>严谨的语言更适合去工程化使用</strong><br>比如Java，C#就比较严谨<br>比如Python，Basic就不太严谨，所以建议先学严谨的编程语言，后在按照需求去学习其他的</p></blockquote><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>无论是开发控制台程序、窗口程序、网站、APP……代码其实都没变，只是调用不同的库而已。</p>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part1</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P1-2  搭建Java开发环境</title>
    <link href="/2024/07/30/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part1-%E7%AC%94%E8%AE%B0/P1-2%20%E6%90%AD%E5%BB%BAJava%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/"/>
    <url>/2024/07/30/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part1-%E7%AC%94%E8%AE%B0/P1-2%20%E6%90%AD%E5%BB%BAJava%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</url>
    
    <content type="html"><![CDATA[<h1 id="搭建Java开发环境"><a href="#搭建Java开发环境" class="headerlink" title="搭建Java开发环境"></a>搭建Java开发环境</h1><h2 id="为什么需要搭建开发环境"><a href="#为什么需要搭建开发环境" class="headerlink" title="为什么需要搭建开发环境"></a>为什么需要搭建开发环境</h2><h2 id="快速搭建步骤"><a href="#快速搭建步骤" class="headerlink" title="快速搭建步骤"></a>快速搭建步骤</h2><h3 id="JDK-IDEA"><a href="#JDK-IDEA" class="headerlink" title="JDK+IDEA"></a>JDK+IDEA</h3><ul><li>JDK：编译、运行Java程序，基本类库</li><li>IDEA：集成开发环境（IDE）<ul><li>还有Eclipse、NetBeans等</li></ul></li><li>版权意识：破解对于版权来说不好</li></ul><h3 id="JDK的版本"><a href="#JDK的版本" class="headerlink" title="JDK的版本"></a>JDK的版本</h3><ul><li>1.4……8、9、10、16等</li><li>为什么主流仍然是8&#x2F;1.8<ul><li>因为大多数公司都是8，为了稳定，不敢动而已</li><li>但是学技术的还是要会新的东西的</li></ul></li><li>学的东西用高版本也兼容</li></ul><h3 id="JDK安装"><a href="#JDK安装" class="headerlink" title="JDK安装"></a>JDK安装</h3><ul><li>浏览器搜索“JDK8下载”，官方名“Java SE Development Kit 8”</li><li>Windows、MAC都一样<ul><li>官方下载放心</li><li>国内第三方网站的下载慎点，太多坑了<ul><li>都是捆绑软件</li></ul></li><li>初学者不用配置环境变量</li></ul></li><li>JDK8的下载地址<ul><li><a href="https://www.oracle.com/java/technologies/downloads/#java8-windows">https://www.oracle.com/java/technologies/downloads/#java8-windows</a></li><li>直接傻瓜式安装即可，修改一下“安装路径”就行。看图一步步来</li><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240731/Java1.1zi5zjrajp.webp" alt="Java1"></li><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240731/java2.3gob1avfae.webp" alt="java2"></li><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240731/java3.92q1f5wq3r.webp" alt="java3"></li><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240731/java4.1vyk1ty7tz.webp" alt="java4"></li></ul></li></ul><h3 id="IDEA安装"><a href="#IDEA安装" class="headerlink" title="IDEA安装"></a>IDEA安装</h3><ul><li>搜“IDEA Java” 或官网<a href="http://www.jetbrains.com.cn/">www.jetbrains.com.cn</a></li><li>直接傻瓜式安装即可，修改一下“安装路径”就行。看图一步步来</li><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240731/IDEA1.6f0l4tazqv.webp" alt="IDEA1"></li><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240731/IDEA2.7ljwdezwcs.webp" alt="IDEA2"></li><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240731/IDEA3.5xajg89m74.webp" alt="IDEA3"></li><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240731/IDEA4.361h85ni5d.webp" alt="IDEA4"></li><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240731/IDEA5.2venf08a02.webp" alt="IDEA5"></li></ul>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part1</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>学会学习-10   课程总结</title>
    <link href="/2024/07/29/%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A020240727/%E5%AD%A6%E4%BC%9A%E5%AD%A6%E4%B9%A0-10%20%E8%AF%BE%E7%A8%8B%E6%80%BB%E7%BB%93/"/>
    <url>/2024/07/29/%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A020240727/%E5%AD%A6%E4%BC%9A%E5%AD%A6%E4%B9%A0-10%20%E8%AF%BE%E7%A8%8B%E6%80%BB%E7%BB%93/</url>
    
    <content type="html"><![CDATA[<h1 id="课程总结"><a href="#课程总结" class="headerlink" title="课程总结"></a>课程总结</h1><h2 id="学习-学-习"><a href="#学习-学-习" class="headerlink" title="学习 &#x3D; 学  + 习"></a>学习 &#x3D; 学  + 习</h2><ul><li>学习就是逃离舒适区的过程</li><li>学习得感觉很舒服，也许就是方法不对</li></ul><hr><h2 id="学习的三个阶段"><a href="#学习的三个阶段" class="headerlink" title="学习的三个阶段"></a>学习的三个阶段</h2><blockquote><p>无知无能：你不会开车<br>有知无能：我知道车上有油门，刹车一样<br>无知有能：开车无意识的熟练；比如打字一样。</p></blockquote><ul><li>无知无能  →  有知无能  这个阶段核心：学习</li><li>有知无能  →  无知有能  这个阶段核心：反复练习</li></ul><hr><h3 id="没有动力怎么办"><a href="#没有动力怎么办" class="headerlink" title="没有动力怎么办"></a>没有动力怎么办</h3><p>《知识就是力量：怎么逼自己成为一个上进的人》—罗振宇</p><ul><li>绑架自己</li></ul><hr><h2 id="本世纪三大绝症"><a href="#本世纪三大绝症" class="headerlink" title="本世纪三大绝症"></a>本世纪三大绝症</h2><ul><li>1、焦虑症（选择恐惧症）<ul><li>解决方案：SWOT分析+抛硬币</li></ul></li><li>2、松鼠症（资料收集狂）<ul><li>解决方案：设定刹车目标</li></ul></li><li>3、懒癌（拖延症）<ul><li>解决方案：to do list</li></ul></li></ul><hr><h2 id="把书读薄、用输出倒逼输入"><a href="#把书读薄、用输出倒逼输入" class="headerlink" title="把书读薄、用输出倒逼输入"></a>把书读薄、用输出倒逼输入</h2><blockquote><p>写笔记<br>做导图<br>写文章<br>录制Vlog</p></blockquote><p>输出要有结构，你的知识就会自动吸附在结构之上，结构会强化神经元的连接（知识网）</p><hr><h2 id="成功是一种习惯，失败也是一种习惯"><a href="#成功是一种习惯，失败也是一种习惯" class="headerlink" title="成功是一种习惯，失败也是一种习惯"></a>成功是一种习惯，失败也是一种习惯</h2><h2 id="知识的存储能力，人类早已经被电脑代替了；知识的搜素和链接能力，才是学习的核心竞争力"><a href="#知识的存储能力，人类早已经被电脑代替了；知识的搜素和链接能力，才是学习的核心竞争力" class="headerlink" title="知识的存储能力，人类早已经被电脑代替了；知识的搜素和链接能力，才是学习的核心竞争力"></a>知识的存储能力，人类早已经被电脑代替了；知识的搜素和链接能力，才是学习的核心竞争力</h2><p>学会提问、善用搜素、记笔记</p><hr><h2 id="知行合一"><a href="#知行合一" class="headerlink" title="知行合一"></a>知行合一</h2><h3 id="哲理小故事——上帝与落水者"><a href="#哲理小故事——上帝与落水者" class="headerlink" title="哲理小故事——上帝与落水者"></a>哲理小故事——上帝与落水者</h3><ul><li>有多个版本，这只是其中之一<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs">一个基督徒，掉到了海里。<br><br>他在海里挣扎的时候，遇到了一艘船，船上的人要救他，他说：<br><br>“不，我要等我的上帝来救我。”<br><br>他在海里继续挣扎。<br><br>然后又来了一艘船，船上的人要救他，他还是说：<br><br>“不行，我要等我的上帝来救我。”<br><br>最后，他精疲力尽被淹死了。<br><br>他的灵魂来到了天堂，见到了上帝，他埋怨上帝为什么不去救他，上帝说：<br><br>“其实，我已经派了两艘船去救你，是你自己不愿意上来。”<br><br></code></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <categories>
      
      <category>学习方法</category>
      
      <category>学会如何学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学习如何学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>学会学习-9   像傻子一样搜索，像聪明人一样提问</title>
    <link href="/2024/07/29/%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A020240727/%E5%AD%A6%E4%BC%9A%E5%AD%A6%E4%B9%A0-9%20%E5%83%8F%E5%82%BB%E5%AD%90%E4%B8%80%E6%A0%B7%E6%90%9C%E7%B4%A2%EF%BC%8C%E5%83%8F%E8%81%AA%E6%98%8E%E4%BA%BA%E4%B8%80%E6%A0%B7%E6%8F%90%E9%97%AE/"/>
    <url>/2024/07/29/%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A020240727/%E5%AD%A6%E4%BC%9A%E5%AD%A6%E4%B9%A0-9%20%E5%83%8F%E5%82%BB%E5%AD%90%E4%B8%80%E6%A0%B7%E6%90%9C%E7%B4%A2%EF%BC%8C%E5%83%8F%E8%81%AA%E6%98%8E%E4%BA%BA%E4%B8%80%E6%A0%B7%E6%8F%90%E9%97%AE/</url>
    
    <content type="html"><![CDATA[<h1 id="像傻子一样搜索，像聪明人一样提问"><a href="#像傻子一样搜索，像聪明人一样提问" class="headerlink" title="像傻子一样搜索，像聪明人一样提问"></a>像傻子一样搜索，像聪明人一样提问</h1><p>适应于所有方面（包括关于英语、编程、数学……）</p><h2 id="如何提问？"><a href="#如何提问？" class="headerlink" title="如何提问？"></a>如何提问？</h2><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240728/%E6%9C%89%E4%BA%BA%E5%9C%A8%E5%90%97.7sn458xklh.webp" alt="有人在吗"></p><p>模拟对话</p><ul><li>请教人：老师，你在吗？</li><li>老师：在</li><li>请教人：那我能请教您一个问题吗？</li><li>老师：我……  OS：有话请直说，老师要崩溃了~</li></ul><h3 id="1-动一下脑子"><a href="#1-动一下脑子" class="headerlink" title="1.动一下脑子"></a>1.动一下脑子</h3><h3 id="2-文档"><a href="#2-文档" class="headerlink" title="2.文档"></a>2.文档</h3><ul><li>在使用工具中报的错，80%的解决方法都能在官方的文档中找到<ul><li>有什么陷阱啊</li><li>有哪些注意的问题</li><li>常规遇到的一些错误的解决方案</li></ul></li></ul><h3 id="3-搜索"><a href="#3-搜索" class="headerlink" title="3.搜索"></a>3.搜索</h3><ul><li>尝试去网上搜索问题去解决</li></ul><h3 id="4-群提问-发帖（专业论坛）"><a href="#4-群提问-发帖（专业论坛）" class="headerlink" title="4.群提问&#x2F;发帖（专业论坛）"></a>4.群提问&#x2F;发帖（专业论坛）</h3><ul><li>求助高人<ul><li>不要说废话，比如模拟对话那样~<br><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240729/%E5%9C%A8%E5%90%97%E5%9C%A8%E5%90%97.1aowd4hqt3.webp" alt="在吗在吗"></li></ul></li><li>模版： XXX你好&#x2F;大家好 + 问题 + 谢谢    <ul><li>适度礼貌</li></ul></li><li>怎么描述清楚问题<ul><li>第一：你要干什么？<ul><li>例子：我要写一个java识别验证码的一个程序</li></ul></li><li>第二：你希望的结果是什么？<ul><li>例子：希望是能够识别带数字和字母的验证码，我用了一个什么什么库，然后写了一个什么什么代码，但是运行的过程中报了一个这样的错误信息（错误信息写出来）</li><li>我到别的论坛上看到了，说这个问题可以用什么什么方案来解决，但是我用了他说的这几种方式都还是不行</li><li>那么我的这个java版本是1.8</li><li>我的这个代码是什么什么</li><li>我用的这个库的版本是1.6.8</li><li>运行出错的截图等</li></ul></li><li>第三：你做了那些事情，遇到了什么样的结果或问题<ul><li>你自己解决这个问题的难点在哪里？</li></ul></li><li>第四：提供足够的信息（相关环境、代码、定位信息、版本、截图等）<ul><li>操作系统</li><li>软件版本</li><li>相关的一些代码或者有一些报错截图</li></ul></li></ul></li><li>注意的点<ul><li><strong>不要问傻问题！！！</strong><ul><li>比如：发帖在百度，说我的代码怎么运行不起来了，代码也不贴。 这是问鬼吗？</li></ul></li></ul></li></ul><h3 id="扩展阅读（必读）—《提问的智慧》"><a href="#扩展阅读（必读）—《提问的智慧》" class="headerlink" title="扩展阅读（必读）—《提问的智慧》"></a>扩展阅读（必读）—《提问的智慧》</h3><blockquote><p>背景：一个大牛程序员写的。<br>原因：有很多人问他傻瓜问题，所得到的经验<br>方面：对所有领域都有作用</p></blockquote><ul><li>1、藐视不愿思考（或者在提问前“不做他们该做的事”的人）</li><li>2、提问前先：自己尝试、搜素、查文档……</li><li>3、使用有意义且描述清楚的标题</li><li>4、别要求使用私人电邮回复<ul><li>请把修改后的代码发到我的邮箱</li></ul></li><li>5、清楚明确的表达你的问题以及需求</li><li>6、不要期望别人调试你的代码，把问题简化为最少的几行</li><li>7、客气一点</li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240729/%E5%A6%82%E4%BD%95%E6%8F%90%E9%97%AE.6t70t9mo22.webp" alt="如何提问"></p><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240729/%E6%89%A9%E5%B1%95%E9%98%85%E8%AF%BB.7egoflhdid.webp" alt="扩展阅读"></p><h2 id="如何搜索？"><a href="#如何搜索？" class="headerlink" title="如何搜索？"></a>如何搜索？</h2><h3 id="最大难题"><a href="#最大难题" class="headerlink" title="最大难题"></a>最大难题</h3><ul><li>搜什么关键词</li><li>学习策略：反复调整</li><li>搜<strong>搜索引擎 语法</strong></li></ul><h3 id="两个工具"><a href="#两个工具" class="headerlink" title="两个工具"></a>两个工具</h3><ul><li>1.快速帮助发现你写的程序中哪有问题的一个工具<ul><li>文件比较工具：<ul><li>免费：DiffMerge</li><li>收费：UltraCompare，BeyondCompare</li></ul></li></ul></li><li>2.防止哪一天你的作业，你写的代码突然丢了的这样一款工具<ul><li>代码、文档防丢失：<ul><li>代码备份：Git</li><li>文件备份：<ul><li>国内：坚果云、百度网盘<ul><li>文档用坚果云</li><li>视频用网盘</li></ul></li><li>国外：DropBox、OneDrive……</li></ul></li></ul></li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>学习方法</category>
      
      <category>学会如何学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学习如何学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>共享文件夹的连接</title>
    <link href="/2024/07/29/%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6%E5%A4%B9%E7%9A%84%E8%BF%9E%E6%8E%A5/"/>
    <url>/2024/07/29/%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6%E5%A4%B9%E7%9A%84%E8%BF%9E%E6%8E%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="共享文件夹的连接"><a href="#共享文件夹的连接" class="headerlink" title="共享文件夹的连接"></a>共享文件夹的连接</h1><h2 id="1-第一步打开命令行"><a href="#1-第一步打开命令行" class="headerlink" title="1.第一步打开命令行"></a>1.第一步打开命令行</h2><ul><li><p>Win+R 输入 </p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livescript"><span class="hljs-string">\\WIN-0EB6Q7A0LB8</span><br></code></pre></td></tr></table></figure><ul><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240729/Win.6t70syfkqb.webp" alt="Win"></li></ul></li><li><p>点击确定</p><ul><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240729/CMD%E8%BE%93%E5%85%A5.4qr84wfiet.webp" alt="CMD输入"></li></ul></li></ul><h2 id="2-选择共享的文件夹"><a href="#2-选择共享的文件夹" class="headerlink" title="2.选择共享的文件夹"></a>2.选择共享的文件夹</h2><ul><li>右键共享的文件夹</li><li>选择 映射网络驱动器<ul><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240729/%E6%98%A0%E5%B0%84%E7%BD%91%E7%BB%9C%E9%A9%B1%E5%8A%A8%E5%99%A8.3uuqpg5tyu.webp" alt="映射网络驱动器"></li></ul></li><li>点击确定即可<ul><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240729/%E5%AE%8C%E6%88%901.9rjawgmcxi.webp" alt="完成1"></li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>电脑</category>
      
    </categories>
    
    
    <tags>
      
      <tag>共享文件</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>学会学习-8   学了很多，仍然什么都不会</title>
    <link href="/2024/07/28/%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A020240727/%E5%AD%A6%E4%BC%9A%E5%AD%A6%E4%B9%A0-8%20%E5%AD%A6%E4%BA%86%E5%BE%88%E5%A4%9A%EF%BC%8C%E4%BB%8D%E7%84%B6%E4%BB%80%E4%B9%88%E9%83%BD%E4%B8%8D%E4%BC%9A/"/>
    <url>/2024/07/28/%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A020240727/%E5%AD%A6%E4%BC%9A%E5%AD%A6%E4%B9%A0-8%20%E5%AD%A6%E4%BA%86%E5%BE%88%E5%A4%9A%EF%BC%8C%E4%BB%8D%E7%84%B6%E4%BB%80%E4%B9%88%E9%83%BD%E4%B8%8D%E4%BC%9A/</url>
    
    <content type="html"><![CDATA[<h1 id="学了很多，仍然什么都不会"><a href="#学了很多，仍然什么都不会" class="headerlink" title="学了很多，仍然什么都不会"></a>学了很多，仍然什么都不会</h1><p>适应于所有方面（包括关于英语、编程、数学……）</p><h2 id="目前教育的问题"><a href="#目前教育的问题" class="headerlink" title="目前教育的问题"></a>目前教育的问题</h2><ul><li>学完的知识都不知道有什么用途？（学那么多，有什么用呢？）</li></ul><h3 id="书：《卓越密码：如何成为专家》"><a href="#书：《卓越密码：如何成为专家》" class="headerlink" title="书：《卓越密码：如何成为专家》"></a>书：《卓越密码：如何成为专家》</h3><ul><li>知识分类<ul><li>元知识（基础知识）<ul><li>比如数学的微积分、求导概念方程等</li><li>计算机的基础语法等</li></ul></li><li>领域知识（专业知识）<ul><li>计算机的专业术语、工作流程、业务流程等</li></ul></li><li>客户知识</li></ul></li></ul><h2 id="怎么把基础知识和专业知识去结合使用呢？"><a href="#怎么把基础知识和专业知识去结合使用呢？" class="headerlink" title="怎么把基础知识和专业知识去结合使用呢？"></a>怎么把基础知识和专业知识去结合使用呢？</h2><h3 id="陷阱"><a href="#陷阱" class="headerlink" title="陷阱"></a>陷阱</h3><ul><li>C语言必读的10本书<ul><li>还没开始学，就已经被怕跑了</li></ul></li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240728/%E5%BF%85%E8%AF%BB10%E6%9C%AC%E4%B9%A6.231rtn63ho.webp" alt="必读10本书"></p><h3 id="英语的看法"><a href="#英语的看法" class="headerlink" title="英语的看法"></a>英语的看法</h3><ul><li>只会英语专业的人已经不值钱了，因为各个行业的人都在学习英语，虽然没有英专的人口音正，但只要不影响沟通即可<ul><li>建议：要尝试找到英语和某一个行业结合<ul><li>例子：做外贸行业的英语</li></ul></li></ul></li></ul><h3 id="不要“过度学习”，学完一个阶段就尝试应用起来，在实践中再去逐渐接触更高级的“基础知识”"><a href="#不要“过度学习”，学完一个阶段就尝试应用起来，在实践中再去逐渐接触更高级的“基础知识”" class="headerlink" title="不要“过度学习”，学完一个阶段就尝试应用起来，在实践中再去逐渐接触更高级的“基础知识”"></a>不要“过度学习”，学完一个阶段就尝试应用起来，在实践中再去逐渐接触更高级的“基础知识”</h3><ul><li>步骤<ul><li>1.学习完一个阶段后总结一下</li><li>2.想一想可以把学习到的知识应用到哪里去？去实际的解决他人或自己的问题</li><li>3.在实践的过程中，自然而然会接触到更高级的“基础知识”</li><li>4.这才是对于知识的<strong>吸收</strong>，而不是单纯的存放在脑子里不去调用练习的沉沙<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="hljs-bullet">-</span> 数学<br><span class="hljs-bullet">  -</span> 数学的微积分能用在哪里呢？建筑行业还是？<br><span class="hljs-bullet">-</span> 编程语言<br><span class="hljs-bullet">  -</span> 不要迷失在框架中，能用简单的代码去解决复杂化的问题，比单单只会用框架厉害多了<br><span class="hljs-bullet">-</span> 英语<br></code></pre></td></tr></table></figure></li></ul></li></ul><h2 id="作业"><a href="#作业" class="headerlink" title="作业"></a>作业</h2><ul><li>暂无</li></ul>]]></content>
    
    
    <categories>
      
      <category>学习方法</category>
      
      <category>学会如何学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学习如何学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>学会学习-7   用输出倒逼输入</title>
    <link href="/2024/07/27/%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A020240727/%E5%AD%A6%E4%BC%9A%E5%AD%A6%E4%B9%A0-7%20%E7%94%A8%E8%BE%93%E5%87%BA%E5%80%92%E9%80%BC%E8%BE%93%E5%85%A5/"/>
    <url>/2024/07/27/%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A020240727/%E5%AD%A6%E4%BC%9A%E5%AD%A6%E4%B9%A0-7%20%E7%94%A8%E8%BE%93%E5%87%BA%E5%80%92%E9%80%BC%E8%BE%93%E5%85%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="用输出倒逼输入"><a href="#用输出倒逼输入" class="headerlink" title="用输出倒逼输入"></a>用输出倒逼输入</h1><h2 id="什么是输入，输出？"><a href="#什么是输入，输出？" class="headerlink" title="什么是输入，输出？"></a>什么是输入，输出？</h2><ul><li>笔记、视频、文章</li><li>对找工作有帮助</li><li>表达力</li></ul><h2 id="为什么输出可以促进输入呢？"><a href="#为什么输出可以促进输入呢？" class="headerlink" title="为什么输出可以促进输入呢？"></a>为什么输出可以促进输入呢？</h2><ul><li>费曼学习法<ul><li>把自己学到的知识可以输出给其他人</li><li>一边加深自己对知识的理解</li><li>一边倒逼自己去查其他的资料（输入）</li></ul></li><li>不一定非得对人去输出，也可以对一个事物</li><li>比如程序员的Rubber Duck Debugging  小黄鸭版的程序Debug<ul><li>锻炼表达能力和写作能力</li><li>在现在这个互联网很发达的时代，可以用视频、文本、代码等开源出去，让各路高手来评论，来促使自己的进步</li></ul></li></ul><h2 id="如何输出：3W（学习知识万能公式）"><a href="#如何输出：3W（学习知识万能公式）" class="headerlink" title="如何输出：3W（学习知识万能公式）"></a>如何输出：3W（学习知识万能公式）</h2><h3 id="Why"><a href="#Why" class="headerlink" title="Why"></a>Why</h3><p>为什么</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs">例子：数据库（为什么需要它呢？）<br>因为可以利用数据库可以达到储存数据的目的<br></code></pre></td></tr></table></figure><h3 id="What"><a href="#What" class="headerlink" title="What"></a>What</h3><p>这是什么东西</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">例子：数据库（这是什么东西？）<br>可以用数据库的SQL语句来达到<span class="hljs-strong">**增删改查**</span>的目的<br></code></pre></td></tr></table></figure><h3 id="How"><a href="#How" class="headerlink" title="How"></a>How</h3><p>这个东西怎么用</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql">例子：数据库（这个东西怎么用呢？）<br>代码语句调用<span class="hljs-keyword">SQL</span>语句<br></code></pre></td></tr></table></figure><h2 id="作业"><a href="#作业" class="headerlink" title="作业"></a>作业</h2><blockquote><p>从这个视频开始，每天学习的知识都写文章进行输出（文章&#x2F;视频&#x2F;Duck）<br>逼着自己写博客<br>逼着自己录视频</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>学习方法</category>
      
      <category>学会如何学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学习如何学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>学会学习-6   治疗“学无力”  失败是成功之父，成功是成功之母</title>
    <link href="/2024/07/27/%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A020240727/%E5%AD%A6%E4%BC%9A%E5%AD%A6%E4%B9%A0-6%20%E6%B2%BB%E7%96%97%E2%80%9C%E5%AD%A6%E6%97%A0%E5%8A%9B%E2%80%9D/"/>
    <url>/2024/07/27/%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A020240727/%E5%AD%A6%E4%BC%9A%E5%AD%A6%E4%B9%A0-6%20%E6%B2%BB%E7%96%97%E2%80%9C%E5%AD%A6%E6%97%A0%E5%8A%9B%E2%80%9D/</url>
    
    <content type="html"><![CDATA[<h1 id="治疗“学无力”"><a href="#治疗“学无力”" class="headerlink" title="治疗“学无力”"></a>治疗“学无力”</h1><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs">失败是成功之父，成功是成功之母<br><br></code></pre></td></tr></table></figure><hr><h2 id="Trial-and-error"><a href="#Trial-and-error" class="headerlink" title="Trial and error"></a>Trial and error</h2><blockquote><p>一段成功代码的背后真相：是不断的<strong>删除</strong>和<strong>重构</strong>才有可能出现的产物之一。<br>所以失败是<strong>必然</strong>的，成功是<strong>偶然</strong>的</p><p>只有你失败了，站起来继续前进，才有可能<strong>守得云开见月明</strong></p></blockquote><h2 id="能耐-能力-耐力"><a href="#能耐-能力-耐力" class="headerlink" title="能耐&#x3D;能力+耐力"></a>能耐&#x3D;能力+耐力</h2><ul><li>自身的能力和坚持不限的耐力才是底气</li><li>而你有了相应的能力后，出现机会才能把握住<ul><li>而不是出现了一堆机会，而你没有能力去匹配</li><li>别人都是风口上的猪，而你只能眼睁睁看着</li></ul></li></ul><h2 id="成功是成功之母"><a href="#成功是成功之母" class="headerlink" title="成功是成功之母"></a>成功是成功之母</h2><ul><li>成功是一种习惯，会给予你<strong>成功的信心</strong></li><li>不要轻言放弃，最好不要让*<strong>失败成为一种习惯</strong></li></ul><h2 id="学无力的倾向或表现"><a href="#学无力的倾向或表现" class="headerlink" title="学无力的倾向或表现"></a>学无力的倾向或表现</h2><ul><li>我能做XX吗？</li><li>XX会怎么样？</li><li>怎么做XX？</li><li>如果做XX失败了，怎么办？</li><li>说到底还是：之前失败了太多次了，不敢相信能成功。</li></ul><h2 id="命运"><a href="#命运" class="headerlink" title="命运"></a>命运</h2><ul><li>命：由自己的能力来决定</li><li>运：由自己的行动来决定（付出&#x2F;结果）</li><li>成功学的虚幻：马后炮</li></ul><h2 id="作业"><a href="#作业" class="headerlink" title="作业"></a>作业</h2><p>描述你经历过千辛万苦搞定事情的经历以及收获</p><blockquote><p>成考计算机本的时候需要学习<strong>高数</strong><br>我才发现高数挺有意思的，后来的结果也不错，因为我觉得那场考试让我自己很舒服，知识得到了验证。<br>可惜的是上学的时候从来没有关注过<br>但自己还是要前进，加油！</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>学习方法</category>
      
      <category>学会如何学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学习如何学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>学会学习-5   如果选择学习资料</title>
    <link href="/2024/07/27/%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A020240727/%E5%AD%A6%E4%BC%9A%E5%AD%A6%E4%B9%A0-5%20%E5%A6%82%E4%BD%95%E9%80%89%E6%8B%A9%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/"/>
    <url>/2024/07/27/%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A020240727/%E5%AD%A6%E4%BC%9A%E5%AD%A6%E4%B9%A0-5%20%E5%A6%82%E4%BD%95%E9%80%89%E6%8B%A9%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/</url>
    
    <content type="html"><![CDATA[<h1 id="如果选择学习资料"><a href="#如果选择学习资料" class="headerlink" title="如果选择学习资料"></a>如果选择学习资料</h1><h2 id="陷阱一：碎片化学习"><a href="#陷阱一：碎片化学习" class="headerlink" title="陷阱一：碎片化学习"></a>陷阱一：碎片化学习</h2><ul><li>公众号</li><li>短视频（震惊、XXX别再这么说了）<ul><li>焦虑和虚假的满足感</li><li>千万别陷入在碎片化的学习中</li></ul></li><li>养鱼视频&#x2F;9元微课（免费的视频吸引你，后面引导你交钱去学习后面的付费课程。比如：培训机构）</li></ul><hr><h2 id="陷阱二：过度学习"><a href="#陷阱二：过度学习" class="headerlink" title="陷阱二：过度学习"></a>陷阱二：过度学习</h2><ul><li>陷入技术或知识的深度，无限地钻牛角尖</li></ul><h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><ul><li>找经典教材</li><li>找大纲（比如招聘需求）<ul><li>以此为纲来组织各种的材料，设定<strong>刹车时刻</strong><ul><li>比如：拿别人出版的书的目录去作为大纲，围绕这个大纲去准备学习资料。因为想要出版，就要经过出版社。出版社的要求对于大纲来说很严格，因为这本书要清晰明了。所以围绕大纲一般不会错</li></ul></li><li>形成知识树后，然后去分层式学习，避免过度学习</li><li>比如：你现在要转Java程序员，不可能你什么经验都没有就可以去当高级的Java程序员<ul><li>所以去寻找你的目标（Java初级程序员）的招聘需求，看20-100个，看看要求的技术栈，选择出现最多的5个，慢慢分层式学习，然后去扩展即可，但涉及到更深的方面建议<strong>刹车</strong></li></ul></li></ul></li></ul><hr><h2 id="作业"><a href="#作业" class="headerlink" title="作业"></a>作业</h2><ul><li>搜素<strong>裂变 招生</strong>、<strong>鱼塘 流量课程</strong>、<strong>贩卖焦虑</strong></li></ul><h2 id="找裂变-招生看到了原理"><a href="#找裂变-招生看到了原理" class="headerlink" title="找裂变 招生看到了原理"></a>找<strong>裂变 招生</strong>看到了原理<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs">就是根据人的利益，生存等需求去制造产品而已。<br>就好比地推，注册账号送一杯奶茶等等<br>例子：瑞幸咖啡<br></code></pre></td></tr></table></figure></h2><p>找<strong>鱼塘 流量课程</strong>看到了量</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">多个手机+多个手机号+多个号等组成的鱼塘养成计划。也好像韭菜养成一样，割一茬涨一茬<br></code></pre></td></tr></table></figure><hr><p>找<strong>贩卖焦虑</strong>的时候看到一个不错的话</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs">你若不抽出时间来创造自己想要的生活，你最终将不得不花费大量的时间，来应付自己不想要的生活！<br>你现在的任务就是认真学习，努力充实自己，并不是焦虑时光。<br>你在七八月做的事，十二月自有答复<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>学习方法</category>
      
      <category>学会如何学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学习如何学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>学会学习-4   笔记写得好，知识学得牢</title>
    <link href="/2024/07/27/%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A020240727/%E5%AD%A6%E4%BC%9A%E5%AD%A6%E4%B9%A0-4%20%E7%AC%94%E8%AE%B0%E5%86%99%E5%BE%97%E5%A5%BD%EF%BC%8C%E7%9F%A5%E8%AF%86%E5%AD%A6%E5%BE%97%E7%89%A2/"/>
    <url>/2024/07/27/%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A020240727/%E5%AD%A6%E4%BC%9A%E5%AD%A6%E4%B9%A0-4%20%E7%AC%94%E8%AE%B0%E5%86%99%E5%BE%97%E5%A5%BD%EF%BC%8C%E7%9F%A5%E8%AF%86%E5%AD%A6%E5%BE%97%E7%89%A2/</url>
    
    <content type="html"><![CDATA[<h1 id="笔记写得好，知识学得牢"><a href="#笔记写得好，知识学得牢" class="headerlink" title="笔记写得好，知识学得牢"></a>笔记写得好，知识学得牢</h1><h2 id="为什么要记笔记？"><a href="#为什么要记笔记？" class="headerlink" title="为什么要记笔记？"></a>为什么要记笔记？</h2><h3 id="把书读薄，提炼精华"><a href="#把书读薄，提炼精华" class="headerlink" title="把书读薄，提炼精华"></a>把书读薄，提炼精华</h3><ul><li><p>整理笔记不是一蹴而就，而是知识漏斗的过程，多次复习</p></li><li><p>笔记一定要自己记（不要拿别人的笔记直接用，需要自己总结在记一遍）</p></li><li><p>整体步骤</p><ul><li>学习内容 → 标记重难点 → 整理笔记（形成正式笔记，不能copy，要总结精简）→ 整理知识树（初级，中级学习）</li><li>看书学习：<ul><li>学习内容 → 划重难点、补充想法（用铅笔）→ 整理笔记（纸质版：建议纸质版&#x2F;电子版：太容易CV了） → 整理知识树</li></ul></li><li>看网页的等电子资料学习<ul><li>学习内容 → 划重难点、补充想法（参考：网页打印为文本pdf，然后标记高亮）→ 整理笔记（纸质版：建议纸质版&#x2F;电子版：太容易CV了） → 整理知识树</li></ul></li><li>听课、学视频<ul><li>学习内容 → 记随堂笔记（康奈尔笔记法） → 整理笔记本 → 整理知识树</li></ul></li></ul></li><li><p>知识树</p><ul><li>思维导图：把零散知识点连接到<strong>知识</strong>中，符合大脑认知规律</li><li>思维导图的参考：课程目录、大纲</li><li>思维导图的误区：记录太细节以及无价值知识（举例）<ul><li>一次性制作：应该是<strong>一边学习，一边完善（增加、修改、删除）</strong></li></ul></li><li>思维导图什么时候用？<ul><li><strong>经常拿出来复习</strong></li></ul></li><li>只需要总结写上去，细节的内容都在笔记上</li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240727/%E7%AC%94%E8%AE%B0.7p6yzstm3.webp" alt="笔记"></p></li></ul><h2 id="作业"><a href="#作业" class="headerlink" title="作业"></a>作业</h2><ul><li>1、找《康奈尔笔记法》的资料，看是否有借鉴的意义</li><li>2、找《学习如果学习》目前的内容的笔记做二次整理，并且构建思维导图</li><li>3、把最近学完的一门课整理思维导图</li></ul><h3 id="康奈尔笔记法"><a href="#康奈尔笔记法" class="headerlink" title="康奈尔笔记法"></a>康奈尔笔记法</h3><ul><li>Step1 根据课程内容做笔记，要求快速、精简、易辩识，避免大纲</li><li>Step2 在休息间隙或当天晚些时候，花时间通读你的笔记</li><li>Step3 找出课堂&#x2F;演讲中的主要观点，并在左栏列出对应问题</li><li>Step4 盖住笔记，看着左侧的问题，尝试复述要点</li><li>Step5 在底部边栏为整个课堂&#x2F;演讲内容写下最精简准确的总结。</li><li>Step6 重新回溯要点，注意全局而非片面的事实或观点。</li><li>Step7 进入反思过程，做一个更好的思考者。<ul><li>问自己一些更有价值的问题，如这些知识和观点的意义是什么？他们的依据是什么？我们怎么把它们应用到我已经知道的事物中？还有什么是我可能没想到、别人没涉及的？</li></ul></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">总结：好像不适合我，因为我习惯了一边记录，一边看视频。<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>学习方法</category>
      
      <category>学会如何学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学习如何学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>学会学习-3  选择恐惧症与收集控</title>
    <link href="/2024/07/26/%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A020240727/%E5%AD%A6%E4%BC%9A%E5%AD%A6%E4%B9%A0-3%20%E9%80%89%E6%8B%A9%E6%81%90%E6%83%A7%E7%97%87%E4%B8%8E%E6%94%B6%E9%9B%86%E6%8E%A7/"/>
    <url>/2024/07/26/%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A020240727/%E5%AD%A6%E4%BC%9A%E5%AD%A6%E4%B9%A0-3%20%E9%80%89%E6%8B%A9%E6%81%90%E6%83%A7%E7%97%87%E4%B8%8E%E6%94%B6%E9%9B%86%E6%8E%A7/</url>
    
    <content type="html"><![CDATA[<h1 id="选择恐惧症与收集控"><a href="#选择恐惧症与收集控" class="headerlink" title="选择恐惧症与收集控"></a>选择恐惧症与收集控</h1><h2 id="选择恐惧症-变成语言学Java还是C"><a href="#选择恐惧症-变成语言学Java还是C" class="headerlink" title="选择恐惧症 变成语言学Java还是C#"></a>选择恐惧症 变成语言学Java还是C#</h2><p>1.原因</p><ul><li>害怕失去，害怕缺点</li><li>心理学：布里丹之驴</li></ul><p>2.分析</p><ul><li>万事万物都是优缺点共存的，需要trade off（折中）</li><li>解决方法：排除明显不靠谱的选项外，列出待选项的优缺点，然后打分。</li><li>如果还无法决定？toss a coin（抛硬币）<figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs 1c">大多数失败不是由于决策错误，而是由于<span class="hljs-string">&quot;优柔寡断，四面出击&quot;</span><br>  <span class="hljs-punctuation">-</span> 杨中科老师的例子：上大学时，各种语言都学个遍，最后钻透Delphi语言，但没想到毕业时，Delphi已经没落，最后有编程语言的底子，直接转到了Java<br></code></pre></td></tr></table></figure>3.总结</li><li><strong>一旦选择决定了，就坚定执行下去</strong></li><li><strong>路是走出来的，不是选出来的</strong></li><li><strong>行动  &gt; 选择</strong></li></ul><h2 id="收集控"><a href="#收集控" class="headerlink" title="收集控"></a>收集控</h2><p>1.原因</p><ul><li>完美心态</li><li>害怕失去</li></ul><p>2.分析</p><ul><li>存到硬盘中的不是知识，存到脑子中的才是知识</li><li>存到脑子中的是知识，把知识实践起来才是<strong>学习</strong>，要知行合一</li><li>搜集资料设定目标（一套视频资料或一本书）<ul><li>书的学习效率要比视频教程高</li><li>一本书就够了，只要不是烂到渣，学下去没有错</li><li>及时刹车</li><li>不要<strong>过度学习</strong></li></ul></li></ul><h2 id="作业"><a href="#作业" class="headerlink" title="作业"></a>作业</h2><ul><li>记笔记（结合直接的情况），写到评论区</li><li>完成第二课《大战拖延症》的作业</li><li>清理收藏夹，清理硬盘。把剩下的开始学习，记笔记。<ul><li>收藏夹，硬盘。只留最重要的，然后开始学习</li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>学习方法</category>
      
      <category>学会如何学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学习如何学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P1-1  学习第一课</title>
    <link href="/2024/07/25/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part1-%E7%AC%94%E8%AE%B0/P1-1%20%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%B8%80%E8%AF%BE/"/>
    <url>/2024/07/25/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part1-%E7%AC%94%E8%AE%B0/P1-1%20%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%B8%80%E8%AF%BE/</url>
    
    <content type="html"><![CDATA[<h1 id="学习第一课"><a href="#学习第一课" class="headerlink" title="学习第一课"></a>学习第一课</h1><hr><h2 id="学习资料"><a href="#学习资料" class="headerlink" title="学习资料"></a>学习资料</h2><ul><li>尽量记笔记，自己写，尽量不要去拷贝其他人的课件，代码等。</li><li>有输入，才有输出。</li></ul><hr><h2 id="什么是编程？"><a href="#什么是编程？" class="headerlink" title="什么是编程？"></a>什么是编程？</h2><p>编程：编写能够<strong>控制计算机</strong>来执行<strong>特定任务</strong>的<strong>代码</strong></p><hr><h2 id="什么是编程语言？"><a href="#什么是编程语言？" class="headerlink" title="什么是编程语言？"></a>什么是编程语言？</h2><ul><li>编程语言是程序员和计算机沟通的语言，用编程语言编写的就是代码。</li><li>自然语言：下班买几个苹果回来，如果看到西瓜，就买一个。<ul><li>脑子正常的人会理解上面的意思，但如果让机器来理解呢？</li><li>针对上面不同的意图，编程语言应该怎么写？有歧义吗？</li><li>机器很笨，只懂0，1，与或非。所以让机器运行起来，不出现问题，那么写出的编程语言应该逻辑性合理，不能有多种意思让机器自己去猜，是什么情况。毕竟机器不是人。</li></ul></li></ul><hr><h2 id="编程语言有哪些？学哪个？"><a href="#编程语言有哪些？学哪个？" class="headerlink" title="编程语言有哪些？学哪个？"></a>编程语言有哪些？学哪个？</h2><p> 编程语言有很多种，但只需要学会主流中任意一种，其他的就会很快学会</p><hr><h2 id="学编程究竟学的是什么？"><a href="#学编程究竟学的是什么？" class="headerlink" title="学编程究竟学的是什么？"></a>学编程究竟学的是什么？</h2><ul><li>语法？<ul><li>精通一门编程语言后，在去学习其他的编程语言会很快</li></ul></li><li>开发工具？<ul><li>java</li><li>ida等</li></ul></li><li>框架？<ul><li>ssh</li><li>ssm</li><li>java boot<blockquote><p> 所以我们要学会思维方式，而并非是语法，开发工具，框架而已。你会站在计算机的角色去思考问题，那么你换任何一个编程语言都可以行的通。</p></blockquote></li></ul></li></ul><hr><h2 id="学习心态"><a href="#学习心态" class="headerlink" title="学习心态"></a>学习心态</h2><ul><li>不要小看</li><li>不要吓Niao</li></ul><hr><h2 id="编程的学习方法是什么？"><a href="#编程的学习方法是什么？" class="headerlink" title="编程的学习方法是什么？"></a>编程的学习方法是什么？</h2><ul><li>不要题海战术</li><li>不要背代码，代码背不完。</li><li>要：理解，记笔记，根据笔记去写（神似即可），脱稿流利写……<ul><li>理解这个程序1.先读取文件中的内容 2.存储到数据库中。</li><li>去靠这个思路去写，不会了就参考前辈的。会了之后删除，继续按照这个思路去写，直到可以脱稿流利的写出来，代码不需要完全一样。就好似张三丰对张无忌的武功传授，你只需要记住这个武功的精髓，而并非是一招一式。</li><li>要有自己的思想</li></ul></li></ul><hr><h2 id="除了编程语言还有什么要学？"><a href="#除了编程语言还有什么要学？" class="headerlink" title="除了编程语言还有什么要学？"></a>除了编程语言还有什么要学？</h2><ul><li>编程语言只是框架，只学语法，几乎什么都做不了。因为领域知识才是肉，就想学人类语言。语法只是骨架，用来连接和支撑人类的各种器官而已。</li><li>APP：网络通讯，界面，设备API……  </li><li>后端开发：数据库、网络通讯、文件…..</li><li>最主要的还是：领域知识（技术领域知识+业务领域知识），就好比做项目，你只会技术，但是不知道业务流程怎么实现，那你怎么去写呢~ 对吧</li><li>下面这个例子，查询数据库&gt;5 是语法，但写入文件是业务领域知识。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">if</span>(查询数据库 &gt;<span class="hljs-number">5</span>)<br>&#123;<br>  写入文件<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><hr><h2 id="这门课的目的"><a href="#这门课的目的" class="headerlink" title="这门课的目的"></a>这门课的目的</h2><ul><li>掌握核心Java语法（用玩的方式去学习）</li><li>先用最简单的代码掌握最核心的语法，尽快做东西。事无巨细、追求完美的讲课是违反认知规律的偷懒行为。掌握解决问题的能力。</li><li>问：会用你封装的库有什么意思？<ul><li>会安排库源码分析环节。</li></ul></li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240731/%E8%AF%BE%E7%A8%8B%E8%AE%A1%E5%88%92.6m3t05b6x7.webp" alt="课程计划"></p>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part1</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>创建知识库</title>
    <link href="/2024/07/25/%E6%90%AD%E5%BB%BA%E7%9F%A5%E8%AF%86%E5%BA%93/"/>
    <url>/2024/07/25/%E6%90%AD%E5%BB%BA%E7%9F%A5%E8%AF%86%E5%BA%93/</url>
    
    <content type="html"><![CDATA[<h1 id="创建知识库"><a href="#创建知识库" class="headerlink" title="创建知识库"></a>创建知识库</h1><blockquote><p> 知识库搭建好，然后部署到github上面所需要的工具：</p><ul><li><p><strong>npm</strong></p></li><li><p><strong>docsify框架</strong></p></li></ul></blockquote><h4 id="1-查看npm安装了没？-没有安装，需要安装一下"><a href="#1-查看npm安装了没？-没有安装，需要安装一下" class="headerlink" title="1.查看npm安装了没？ 没有安装，需要安装一下~"></a>1.查看npm安装了没？ 没有安装，需要安装一下~</h4><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs coffeescript"><span class="hljs-built_in">npm</span> -v  <br></code></pre></td></tr></table></figure><h4 id="2-安装docsify并查看安装版本"><a href="#2-安装docsify并查看安装版本" class="headerlink" title="2.安装docsify并查看安装版本"></a>2.安装docsify并查看安装版本</h4><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm">npm install -g docsify-<span class="hljs-keyword">cli</span><br></code></pre></td></tr></table></figure><p>如果cmd运行不动，就需要翻墙去运行</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">docsify</span> -v  查看安装版本<br></code></pre></td></tr></table></figure><h4 id="3-创建一个文件夹（repository）"><a href="#3-创建一个文件夹（repository）" class="headerlink" title="3.创建一个文件夹（repository）"></a>3.创建一个文件夹（repository）</h4><h4 id="4-进入文件夹目录"><a href="#4-进入文件夹目录" class="headerlink" title="4.进入文件夹目录"></a>4.进入文件夹目录</h4><h4 id="5-初始化文件夹"><a href="#5-初始化文件夹" class="headerlink" title="5.初始化文件夹"></a>5.初始化文件夹</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp">docsify <span class="hljs-keyword">init</span>   然后y确认<br></code></pre></td></tr></table></figure><h4 id="6-启动网站"><a href="#6-启动网站" class="headerlink" title="6.启动网站"></a>6.启动网站</h4><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">docsify serve</span><br></code></pre></td></tr></table></figure><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240725/%E7%9F%A5%E8%AF%86%E5%BA%931.54xnq0cauw.webp" alt="知识库1"></p><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><h4 id="1-README-md代表网站里面的内容，只需要修改这个就可以改动网站。"><a href="#1-README-md代表网站里面的内容，只需要修改这个就可以改动网站。" class="headerlink" title="1.README.md代表网站里面的内容，只需要修改这个就可以改动网站。"></a>1.README.md代表网站里面的内容，只需要修改这个就可以改动网站。</h4><p>docsify是不用重启的，实时同步新的改变</p><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240725/%E7%9F%A5%E8%AF%86%E5%BA%933.1lbq079l4e.webp" alt="知识库3"></p><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240725/%E7%9F%A5%E8%AF%86%E5%BA%934.7w6py2yezl.webp" alt="知识库4"></p><p>内容代码分析</p><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240725/%E4%B8%80%E7%BA%A7%E6%A0%87%E9%A2%98.9rjaqpauib.webp" alt="一级标题"></p><h4 id="2-src是一个图片链接，这些图片的存放方式全部是放在了第三方存储里面，然后Markdown里面只放了图片的链接。"><a href="#2-src是一个图片链接，这些图片的存放方式全部是放在了第三方存储里面，然后Markdown里面只放了图片的链接。" class="headerlink" title="2.src是一个图片链接，这些图片的存放方式全部是放在了第三方存储里面，然后Markdown里面只放了图片的链接。"></a>2.src是一个图片链接，这些图片的存放方式全部是放在了第三方存储里面，然后Markdown里面只放了图片的链接。</h4><p>这个地方，很明显就是放在了Github的cdn加速上</p><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240725/%E5%9B%BE%E7%89%87%E9%93%BE%E6%8E%A5.7w6py2yevk.webp" alt="图片链接"></p><h4 id="3-修改主题"><a href="#3-修改主题" class="headerlink" title="3.修改主题"></a>3.修改主题</h4><p>index.html的文件里面可以修改主题，主题一共有5种，修改配置文件，即可变化网站主题</p><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240725/%E4%B8%BB%E9%A2%98%E4%BF%AE%E6%94%B9.175a9c1abn.webp" alt="主题修改"></p><h4 id="4-网站封面（开启封面功能）"><a href="#4-网站封面（开启封面功能）" class="headerlink" title="4.网站封面（开启封面功能）"></a>4.网站封面（开启封面功能）</h4><p>coverpage:true  添加这个代码，就可以打开封面功能，文件：_coverpage.md</p><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240725/%E5%B0%81%E9%9D%A2.86tjr8dmyg.webp" alt="封面"></p><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240725/%E5%B0%81%E9%9D%A21.5c0vlfyg8b.webp" alt="封面1"></p><h4 id="5-导航栏"><a href="#5-导航栏" class="headerlink" title="5.导航栏"></a>5.导航栏</h4><p>loadNavbar:true 添加这个代码，就可以打开导航栏功能  文件：_navbar.md</p><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240725/%E5%AF%BC%E8%88%AA%E6%A0%8F.ic0pcfe0s.webp" alt="导航栏"></p><h2 id="上传github的静态网站"><a href="#上传github的静态网站" class="headerlink" title="上传github的静态网站"></a>上传github的静态网站</h2><blockquote><p>一个github只能运行一个静态网站</p></blockquote><h4 id="遇到的报错问题"><a href="#遇到的报错问题" class="headerlink" title="遇到的报错问题"></a>遇到的报错问题</h4><h5 id="error-remote-origin-already-exists"><a href="#error-remote-origin-already-exists" class="headerlink" title="error: remote origin already exists."></a>error: remote origin already exists.</h5><h6 id="原因："><a href="#原因：" class="headerlink" title="原因："></a>原因：</h6><p>当你在git push到GitHub的时候报错 出现error: remote origin already exists. 翻译过来呢就是 错误:远程源已经存在。</p><h6 id="解决方案："><a href="#解决方案：" class="headerlink" title="解决方案："></a>解决方案：</h6><p>第一: 查看远程库的信息: git remote -v<br>第二: 删除现有的远程仓库: git remote rm origin<br>第三: 建立新的远程仓库地址: git remote add origin + 远程仓库地址</p>]]></content>
    
    
    <categories>
      
      <category>搭建环境</category>
      
    </categories>
    
    
    <tags>
      
      <tag>搭建知识库</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>学会学习-2 大战拖延症</title>
    <link href="/2024/07/25/%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A020240727/%E5%AD%A6%E4%BC%9A%E5%AD%A6%E4%B9%A0-2%20%E5%A4%A7%E6%88%98%E6%8B%96%E5%BB%B6%E7%97%87/"/>
    <url>/2024/07/25/%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A020240727/%E5%AD%A6%E4%BC%9A%E5%AD%A6%E4%B9%A0-2%20%E5%A4%A7%E6%88%98%E6%8B%96%E5%BB%B6%E7%97%87/</url>
    
    <content type="html"><![CDATA[<h1 id="大战拖延症"><a href="#大战拖延症" class="headerlink" title="大战拖延症"></a>大战拖延症</h1><h2 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h2><ul><li>三流的人+<strong>一流的执行力</strong> &gt; 一流的人+<strong>三流的执行力</strong></li></ul><hr><h2 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h2><ul><li>例子：《海绵宝宝 第二季：拖延症》，可以对照这视频看看自己有没有这些问题</li></ul><hr><h2 id="拖延的原因"><a href="#拖延的原因" class="headerlink" title="拖延的原因"></a>拖延的原因</h2><ul><li>干扰太多（手机，朋友等）</li><li>借口太多，所谓完美</li><li>没有目标，计划没有可操作性</li></ul><h3 id="对抗拖延症"><a href="#对抗拖延症" class="headerlink" title="对抗拖延症"></a>对抗拖延症</h3><ul><li>第一招：手机静音放进包里，告知亲友自己什么时间点到什么时间点在学校或在做运动~</li><li>第二招：允许不完美，够用就行，让<strong>借口</strong>住嘴</li><li>第三招：定计划，设截止日期，任务分解到半天<ul><li>比如：英语学习三个月，第一个月背单词，第二个月学语法，第三个月刷题等，<ul><li>然后再细化到每周，每天，哪个时间点来完成对应的部分</li></ul></li></ul></li></ul><hr><h2 id="工具：to-do-list"><a href="#工具：to-do-list" class="headerlink" title="工具：to do list"></a>工具：to do list</h2><ul><li><p>每天需要做的事情（待办事宜）</p><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240726/%E5%BE%85%E5%8A%9E%E4%BA%8B%E5%AE%9C.7p3i4c3uc3.webp" alt="待办事宜"></p></li><li><p>机动时间</p><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240726/%E6%9C%BA%E5%8A%A8%E6%97%B6%E9%97%B4.77dgfr2gr8.webp" alt="机动时间"></p></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs">计划不能改，留出适当“机动时间”<br>“更好的一个计划”不如“马上去做”<br></code></pre></td></tr></table></figure><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240726/%E5%B9%B2%E5%B0%B1%E5%AE%8C%E4%BA%86.7i0a8wll9u.webp" alt="干就完了"></p><p><strong>just do it 干就完了</strong></p><hr><h3 id="定计划注意"><a href="#定计划注意" class="headerlink" title="定计划注意"></a>定计划注意</h3><ul><li>1.新的想法加入《待办事宜》，不影响本周计划</li><li>2.做计划的时候：先做最重要的事情，不要用<strong>不重要但是简单</strong>的事情麻痹自己，假装很忙</li></ul><hr><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><ul><li>执行力为王！</li><li>排除干扰，定下可执行的计划，并坚持执行</li></ul><hr><h2 id="作业"><a href="#作业" class="headerlink" title="作业"></a>作业</h2><ul><li>1.看<strong>海绵宝宝 拖延症</strong>的视频，对照自己，总结自己有哪些相似的地方</li><li>2.戒了吧<ul><li>第一周：把手机放起来并静音，自己定下可以看手机的时间，其他时间不能碰</li><li>第二周：把手机放起来并静音或关机，一天不碰<ul><li>之后平时手机静音，自己定时来检查手机的时间段，每天看手机对自己有没有影响</li></ul></li></ul></li><li>3.定未来七天的计划，评论区回复。持续执行下去，每天回复自己的评论来打卡进度</li></ul><hr><h2 id="自己的分析"><a href="#自己的分析" class="headerlink" title="自己的分析"></a>自己的分析</h2><ul><li>1.之前的跑步，学习英语等计划都慢慢<strong>搁浅</strong>了，为什么呢？拖延症？王者荣耀？<ul><li>也许是睡懒觉没精力，没有冥想等</li><li>要慢慢捡起来了</li></ul></li><li>2.just do it</li><li>3.早中晚都要利用到，把之前拉下的在补回来。</li><li>早上早起学习英语，然后冥想；上班中午看历史&#x2F;学习；晚上跑步，回来后继续学习，睡前看书。</li></ul>]]></content>
    
    
    <categories>
      
      <category>学习方法</category>
      
      <category>学会如何学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学习如何学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>博客更换主题</title>
    <link href="/2024/07/24/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0/"/>
    <url>/2024/07/24/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0/</url>
    
    <content type="html"><![CDATA[<h2 id="博客更换主题"><a href="#博客更换主题" class="headerlink" title="博客更换主题"></a>博客更换主题</h2><p>1.这个地址是github上你想更换主题的地址，然后文件夹命名为fluid<br><img src="https://s2.loli.net/2024/07/24/TzA4FewlNPOkaZp.png" alt="更换主题.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/fluid-dev/hexo-theme-fluid.git themes/fluid<br></code></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2024/07/24/hDJ3BX85MmsAr4H.png" alt="命令运行.png"><br>2.修改配置文件成新主题的文件夹名称</p><p><img src="https://s2.loli.net/2024/07/24/RhficMNg6lJwx2Y.png" alt="修改主题.png"></p><p>3.清理缓存</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo clean</span><br></code></pre></td></tr></table></figure><p>4.重新生成</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">hexo <span class="hljs-selector-tag">g</span><br></code></pre></td></tr></table></figure><p>5.开启去预览测试</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo s</span><br></code></pre></td></tr></table></figure><p>6.没有问题后更新到github上面去</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo d</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>搭建环境</category>
      
    </categories>
    
    
    <tags>
      
      <tag>搭建博客</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>学会学习-1 学习的秘密</title>
    <link href="/2024/07/24/%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A020240727/%E5%AD%A6%E4%BC%9A%E5%AD%A6%E4%B9%A0-1%20%E5%AD%A6%E4%B9%A0%E7%9A%84%E5%AF%86%E7%A0%81/"/>
    <url>/2024/07/24/%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A020240727/%E5%AD%A6%E4%BC%9A%E5%AD%A6%E4%B9%A0-1%20%E5%AD%A6%E4%B9%A0%E7%9A%84%E5%AF%86%E7%A0%81/</url>
    
    <content type="html"><![CDATA[<h1 id="学习的秘密"><a href="#学习的秘密" class="headerlink" title="学习的秘密"></a>学习的秘密</h1><p>为什么老师讲的都能懂，自己确做不出来？</p><hr><p>课程大纲<br><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240726/%E8%AF%BE%E7%A8%8B%E5%A4%A7%E7%BA%B2.4n7m2psbob.webp" alt="课程大纲"></p><hr><h2 id="什么是学习"><a href="#什么是学习" class="headerlink" title="什么是学习"></a>什么是学习</h2><ul><li>学习  &#x3D; 学+习</li><li>学    &#x3D; 预习+听课+扩展学习</li><li>习    &#x3D; 练习+测试+笔记+创造</li></ul><hr><h2 id="学习的真相"><a href="#学习的真相" class="headerlink" title="学习的真相"></a>学习的真相</h2><ul><li>动机都很美好，过程很痛苦，坚持下来的人很少</li><li>为什么看老师的作品（代码）能看懂？为啥自己写不出来？<br>看懂了≠ 学会了<br>最主要的是：形成肌肉记忆，比如打字、用筷子吃饭等</li><li>为什么离开鼓谱就不会打了？为什么照着老师的能做出来？为啥自己搞不出来？<br>模仿是“学”，创造是“习”：习得武功</li></ul><hr><h1 id="怎样成为一个高手（罗辑思维-183）"><a href="#怎样成为一个高手（罗辑思维-183）" class="headerlink" title="怎样成为一个高手（罗辑思维-183）"></a>怎样成为一个高手（罗辑思维-183）</h1><h2 id="核心：探究学习的真相"><a href="#核心：探究学习的真相" class="headerlink" title="核心：探究学习的真相"></a>核心：<strong>探究学习的真相</strong></h2><h2 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h2><p>1.理论</p><ul><li>异类：一万小时理论，但只靠时间来评价，并不可靠。</li><li><strong>刻意练习才是真实的对应着一万小时理论</strong></li><li>工程学的见解<ul><li>面对一个具体的目标，我们能不能拆解为具体的行为，一张一张的图纸，一颗一颗的钉子，我钉上去，就能够把这个工程建造出来（比如万维钢的课）</li></ul></li></ul><p>2.套路</p><ul><li>把前辈的经验封装在一个小的概念当中，然后后人拿来就用，而不是至于临场重新去思考。</li><li>第一种套路<ul><li>就是在教科书上找不着，但是一定是这行的前辈给你总结出的最值钱的经验</li></ul></li><li>第二种套路<ul><li>概念<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs">所有的教科书本质上一个学期就跟你讲几个概念，不论学科，其实那么多章的内容，每一章就讲一个概念<br>只要知道这个概念本身是什么？就够了<br></code></pre></td></tr></table></figure></li></ul></li><li>顶级高手的成才之路<ul><li>就是学别人成型的套路。把整座大厦拆成一个一个的砖头去训练，这样精度更高。</li><li>比如，健美，每一天针对不同的肌肉群去训练，然后劳逸结合的去恢复。</li></ul></li><li><strong>重复</strong>（非常关键）<ul><li>重复，反复重复。必须靠大量地重复训练</li><li><strong>针对性重复练习，这就是练习的本质</strong></li></ul></li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240726/%E5%A5%97%E8%B7%AF.2obfcf3aq5.webp" alt="套路"></p><hr><h1 id="有效的学习方法"><a href="#有效的学习方法" class="headerlink" title="有效的学习方法"></a>有效的学习方法</h1><p>原理：甩脂机：被动减肥。只需要你站上去就会瘦，就好比<strong>莫扎特效应</strong>一样的假哦</p><h2 id="刻意"><a href="#刻意" class="headerlink" title="刻意"></a>刻意</h2><p>1.所谓的刻意就是<strong>持续地做你不会做的事</strong></p><ul><li>心理学的区域：舒适区→<strong>学习区（脱离舒适区）</strong>→恐慌区<ul><li><p>好比学习英语的理论（学习N+1难度的知识）</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs markdown">例子1：<br><span class="hljs-bullet">-</span> 泰格 伍兹（打高尔夫的老虎）<br><span class="hljs-bullet">  -</span> 特点是他在挥杆的半途当中，如果球场上出现了意外情况（比如有人乱跑，有人乱喊），他觉得这个动作打不好了，他能中途停下来，生生地停住，然后调整一下重新开始。<br><span class="hljs-bullet">  -</span> 为什么这个操作能让他在球场上成为<span class="hljs-strong">**神**</span>一般的存在呢<br><span class="hljs-bullet">-</span> 因为专业的运动员早就把挥杆练成了肌肉记忆，下意识的行为，当你脑子想停就停不住了。因为处于失控。<br><br>例子2：<br><span class="hljs-bullet">  -</span> 扎克伯格：不断挑战非舒适区。每年一个小目标（比如学中文等）<br></code></pre></td></tr></table></figure></li><li><p>永远不能让自己失控</p></li><li><p>那些高考状元不一定毕业之后就比其他人混的好，毕竟那是应试教育的锅。高分低能的来由</p></li><li><p>普通人的方便法门：进入好的学习环境，就会被动地被拖离舒适区，进入学习区</p><ul><li>好的学习环境特指<strong>能够提供即时反馈的环境</strong></li><li>贝尔实验室有一个不成文的规定：就是你在这里面，不管多牛。都有一项义务：这个实验室的所有年轻人问你问题，你不能回避，你必须给予回答。这就是在一个非常小的范围内，去建立一个即时的反馈系统。</li></ul></li><li><p><strong>想学习没有舒服的事，学习的本质就是脱离舒服</strong></p></li></ul></li></ul><hr><h1 id="互联网的发展让学习变的更好了吗？"><a href="#互联网的发展让学习变的更好了吗？" class="headerlink" title="互联网的发展让学习变的更好了吗？"></a>互联网的发展让学习变的更好了吗？</h1><h2 id="好处"><a href="#好处" class="headerlink" title="好处"></a>好处</h2><ul><li>互联网的发展让知识和信息变得越来越丰富</li><li>对于高手来讲，能够更快地去和新技术或新知识去融合，和旧知识去融合成新的知识。这个记忆库是不断长出来的活体结构，新知识也需要经过相互融合关联，然后带着各自的结构去融合到对应的树枝上面去</li></ul><h2 id="坏处"><a href="#坏处" class="headerlink" title="坏处"></a>坏处</h2><ul><li>可是对于学习者、阅读者来说，它带来另外一种负担，就是你不断地要做选择，不断地要做选什么的决策。<ul><li>你想一想知识的底层概念经过一代一代人的演化，在经过一层一层的超链接文本，你还能那么简单地找到某个知识的底层概念的来源吗？</li></ul></li><li>但是选择这件事情，你真以为是你在选吗？那你觉得聪明人在做什么呢？<ul><li>他们做的大量的工作就是取影响你的选择。</li><li>比如：微信上的文章标题带有一个（深度干货），和你工作还有关系，你会不会点呢？</li><li>比如：抖音短视频的核心是什么？ 快进快出被，多巴胺快速分泌让你快乐。</li><li>比如：谷歌公司的核心收入就是广告。核心战略就是一件事，就是不断地让你快进快出。出自于谷歌的用户体验设计师：<strong>让用户快进快出</strong>是他们的核心战略，他们的广告才会卖得出去。</li></ul></li></ul><hr><h2 id="记笔记，做成笔记本"><a href="#记笔记，做成笔记本" class="headerlink" title="记笔记，做成笔记本"></a>记笔记，做成笔记本</h2><ul><li>高手也许家中不会有太多的藏书，但会有很多很多的学习笔记。好比：钱钟书<blockquote><p>人类不仅创造了工具，工具反过来也在塑造人类，比如互联网<br>每个时代出现的新工具都会带来两个方面<br>1.工具的便利性<br>2.把现有的人类分成两拨人<br>  一拨人躺在工具的便利性上去享受，从而自己慢慢<strong>浅薄</strong>堕落（停止和退后）<br>  另外一拨人在研究这个工具的原理，利用这个工具去研发开拓其他的工具或地盘，去开拓新边疆，去寻找新文明的发展道路（前进）<br>例子：互联网的发展，大公司的工作模式<br>1.大部分人躺在那个越来越开阔的舒适区里面去享受（好比微信支付和支付宝的便利性，但花呗呢，借呗呢<del>）<br>2.可是总有一部分人带着满身的伤痛，呲牙咧嘴，痛苦不堪地想那个非舒适区（学习区）进发<br>大公司发展的越好，那么加班熬夜的情况也就越多。看看北上广深</del></p></blockquote></li></ul><hr><h1 id="阅读作业"><a href="#阅读作业" class="headerlink" title="阅读作业"></a>阅读作业</h1><h2 id="时间管理、拖延症"><a href="#时间管理、拖延症" class="headerlink" title="时间管理、拖延症"></a>时间管理、拖延症</h2><ul><li>GTD管理法则配合番茄钟</li><li>拖延症只是身体的一种表现或<strong>浅薄</strong>的堕落而已，毕竟实在舒适区内</li></ul><h2 id="如果记笔记"><a href="#如果记笔记" class="headerlink" title="如果记笔记"></a>如果记笔记</h2><ul><li>通过学习新知识，变成一片树叶与脑中的记忆库的旧知识进行结合，变成新的知识结构和记忆库进行相互关联的作用。</li><li>记笔记就是在加深这个融合的过程。</li></ul>]]></content>
    
    
    <categories>
      
      <category>学习方法</category>
      
      <category>学会如何学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学习如何学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
