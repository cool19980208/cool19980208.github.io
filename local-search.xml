<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>精读阅读理解精通核心必备词汇-2</title>
    <link href="/2024/08/14/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD/%E7%B2%BE%E8%AF%BB%E9%98%85%E8%AF%BB%E7%90%86%E8%A7%A3%E7%B2%BE%E9%80%9A%E6%A0%B8%E5%BF%83%E5%BF%85%E5%A4%87%E8%AF%8D%E6%B1%87-2/"/>
    <url>/2024/08/14/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD/%E7%B2%BE%E8%AF%BB%E9%98%85%E8%AF%BB%E7%90%86%E8%A7%A3%E7%B2%BE%E9%80%9A%E6%A0%B8%E5%BF%83%E5%BF%85%E5%A4%87%E8%AF%8D%E6%B1%87-2/</url>
    
    <content type="html"><![CDATA[<h1 id="精读阅读理解精通核心必备词汇-2"><a href="#精读阅读理解精通核心必备词汇-2" class="headerlink" title="精读阅读理解精通核心必备词汇-2"></a>精读阅读理解精通核心必备词汇-2</h1><hr><p>串词是手段，理解句子是核心</p><ul><li>理解句子的时候，你可以知道有些单词很重要，有些单词没那么重要。<ul><li>名词和动词是句子的核心：n 和 v</li><li>形容词，因为它是修饰名词的，所以不那么重要；表示程度的副词也是这样<ul><li>形容词只需要先记住是形容好的方面还是坏的方面即可</li></ul></li><li>副词和形容词都是起修饰作用的</li></ul></li></ul><hr><p> a few  &#x3D;some 有些：几个       a few friends  一些朋友，如果没有a了   few friends 几乎没有朋友 ，否定词</p><p> a little &#x3D; some  </p><p> to表示目的</p><hr><p> co-founder   ：co表示共同  found 表示建立，创立  er表示人</p><p> tion 名词的后缀</p><p> a number of : 许多</p><p> prevent &#x3D; stop的高级表达  阻止</p><p> raise 三个意思 1.筹款  2.饲养  3.提高&#x2F;提升</p><p> for a living  以……谋生</p><p> by  通过</p><p> play a part in  扮演 什么样的角色</p><p> 在一个人名后面，  逗号后面的句子都是头衔，不需要知道</p><hr><p> 原文(1)：</p><blockquote><p>Humans may not have landed on Mars(火星)just yet,but that isn’t stopping a European company from devising a plan to send four people to the Red Planet within the next few years.</p></blockquote><ul><li>参考译文：人类可能还没有登陆火星，但这并不能阻止一家欧洲公司制定计划，在未来几年内将四人送上这颗红色星球。</li></ul><hr><p> 原文(2)：</p><blockquote><p>This project, called Mars One, aims to send a small group<br> of people to Mars in 2022 and eventually establish a permanent colonyon the planet.</p></blockquote><ul><li>参考译文：这个名为“火星一号”的项目旨在2022年将一小群人送上火星并最终在火星上建立一个永久殖民地。</li></ul><hr><p> 原文(3)：</p><blockquote><p>“Everything we need to go to Mars exists,”said Mars One co-founder Bas Lansdorp in March 2014.</p></blockquote><ul><li>参考译文：“我们去火星需要的一切条件都存在，”“火星一号”联合创始人巴斯 ·兰斯多普于2014年3月说。</li></ul><hr><p> 原文(4)：</p><blockquote><p>“We have the rockets to send people to Mars, the equipment to land on Mars,the robots to prepare the settlement for humans.</p></blockquote><ul><li>参考译文：“我们有火箭送人去火星，有设备登陆火星，有机器人为人类定居做准备。</li></ul><hr><p> 原文(5)：</p><blockquote><p>For a one-way mission, all the technology exists.</p></blockquote><ul><li>参考译文：“对于单程任务，所有的技术都存在。</li></ul><hr><p> 原文(6)：</p><blockquote><p>Yet the four astronauts(宇航员)chosen for the trip will be stuck on Mars-forever.</p></blockquote><ul><li>参考译文:然而，为这次旅行选择的四名宇航员将永远停留在火星上。</li></ul><hr><p> 原文(7)：</p><blockquote><p>And despite Mars One’s thorough planning,there are a number<br>of challenges that may prevent the mission from ever taking place.</p></blockquote><ul><li>参考译文:尽管“火星一号”计划周密，但仍有许多挑战可能阻止任务的进行。</li></ul><hr><p> 原文(8)：</p><blockquote><p>The biggest road block could be the mission’s huge cost ($6 billion)</p></blockquote><ul><li>参考译文:最大的障碍可能是这项任务的巨额成本(60亿美元)</li></ul><hr><p> 原文(9)：</p><blockquote><p>However, Lansdorp is confident that Mars One will be able<br> to fund the project by selling the broadcast rights for the mission and subsequent experlences living on the planet.</p></blockquote><ul><li>参考译文:不过，兰斯多普相信，“火星一号”将能够通过出售播放权以及随后在火星上的生活经历为这个项目提供资金。</li></ul><hr><p> 原文(10)：</p><blockquote><p>Those broadcast rights will also play a part in helping to select the people who will be sent to Mars. Lansdorp said the company will hold a selection process similar to a reality show.</p></blockquote><ul><li>参考译文:那些播放权也将有助于选择被送往火星的人。兰斯多普表示，该公司将举办一个类似真人秀的选拔过程。</li></ul><hr><p> 原文(11)：</p><blockquote><p>Lansdorp is expecting at least l million applications from people around the world.In addition to the cost,several other potential problems could inhibit(阻止)the mission to Mars.</p></blockquote><ul><li>:参考译文:兰斯多普预计全球至少有100万人申请。除了成本之外，还有其他几个潜在的问题可能会阻碍火星任务。</li></ul><hr><p> 原文(12)：</p><blockquote><p>“It’s even more challenging to send people there with life support, with food, with air, with all the other things like books,entertainment, means of communication and means of providing for their own resources for a long stay on Mars, ”said Adam Baker,senior lecturer in space engineering at Kingston University in London.</p></blockquote><ul><li>参考译文:伦敦金斯敦大学航天工程高级讲师亚当·贝克说:“给载去那里的人提供生命物需、食物、空气，以及书籍、娱乐设施、通信设备和为他们在火星上长期停留供应自己的资源等都是更具挑战性的。这么做所需要的火箭绝对是巨大的。”</li></ul><hr><p> 原文(13)：</p><blockquote><p>“The sheer size of the rockets you’d need to do this would<br>be absolutely colossal.”</p></blockquote><ul><li>参考译文：“这么做所需要的火箭绝对是巨大的。</li></ul><h2 id="在都串完词后去进行-阅读理解的做题"><a href="#在都串完词后去进行-阅读理解的做题" class="headerlink" title="在都串完词后去进行 阅读理解的做题"></a>在都串完词后去进行 阅读理解的做题</h2>]]></content>
    
    
    <categories>
      
      <category>学位英语</category>
      
      <category>精读阅读理解精通核心必备词汇</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学位英语</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>精读阅读理解精通核心必备词汇-1</title>
    <link href="/2024/08/14/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD/%E7%B2%BE%E8%AF%BB%E9%98%85%E8%AF%BB%E7%90%86%E8%A7%A3%E7%B2%BE%E9%80%9A%E6%A0%B8%E5%BF%83%E5%BF%85%E5%A4%87%E8%AF%8D%E6%B1%87-1/"/>
    <url>/2024/08/14/%E5%AD%A6%E4%BD%8D%E8%8B%B1%E8%AF%AD/%E7%B2%BE%E8%AF%BB%E9%98%85%E8%AF%BB%E7%90%86%E8%A7%A3%E7%B2%BE%E9%80%9A%E6%A0%B8%E5%BF%83%E5%BF%85%E5%A4%87%E8%AF%8D%E6%B1%87-1/</url>
    
    <content type="html"><![CDATA[<h1 id="精读阅读理解精通核心必备词汇-1"><a href="#精读阅读理解精通核心必备词汇-1" class="headerlink" title="精读阅读理解精通核心必备词汇-1"></a>精读阅读理解精通核心必备词汇-1</h1><hr><p>串词是手段，理解句子是核心</p><ul><li>理解句子的时候，你可以知道有些单词很重要，有些单词没那么重要。<ul><li>名词和动词是句子的核心：n 和 v</li><li>形容词，因为它是修饰名词的，所以不那么重要；表示程度的副词也是这样<ul><li>形容词只需要先记住是形容好的方面还是坏的方面即可</li></ul></li><li>副词和形容词都是起修饰作用的</li></ul></li></ul><hr><h2 id="for"><a href="#for" class="headerlink" title="for"></a>for</h2><p>for 表示原因</p><blockquote><p>The first year of school in America ,known as kindergarten,usually begins between the ages of five and  six.</p></blockquote><ul><li>A of B：B的A </li><li>known as kindergarten  这一句算是插入语句：两个逗号之间，生硬的插入了一个词组，它的重要性远远不如这个句子的其他成分</li></ul><hr><p>如果在阅读理解中，给了你一个结论，结论后面有一个such as(例如)，一定记住，<strong>such as前面的这句话或者单词就特别的重要</strong></p><p>support：支持；拥护</p><h2 id="while"><a href="#while" class="headerlink" title="while"></a>while</h2><p>while ：在….期间；在….的过程中；……然而（对比两件事物）</p><ul><li>约等于 问~</li><li>A while B 在阅读理解中是有强对比的关系，约等于but</li></ul><h2 id="a和an的用法"><a href="#a和an的用法" class="headerlink" title="a和an的用法"></a>a和an的用法</h2><ul><li>an后面的单词第一个字母一般都是a，e，i，o，u 都是元音</li></ul><h2 id="result-in-from"><a href="#result-in-from" class="headerlink" title="result in&#x2F;from"></a>result in&#x2F;from</h2><p>result in 引起：A result in B  A:吃肉  B:胖   吃肉引起了胖<br>result from 因  B result fron A   A:吃肉  B:胖    胖因为吃肉</p><h2 id="so"><a href="#so" class="headerlink" title="so"></a>so</h2><p>so 后面的句子一般很重要，结论</p><p>so可以表示作为</p><h2 id="ship"><a href="#ship" class="headerlink" title="ship"></a>ship</h2><p>partnership：伙伴关系  加了ship是关系<br>partner:配偶，性伴侣，合伙人</p><h2 id="前缀-后缀"><a href="#前缀-后缀" class="headerlink" title="前缀&#x2F;后缀"></a>前缀&#x2F;后缀</h2><p>unknown— un 否定词的前缀</p><p>dis—  表示否定的前缀</p><p>far from 远离：远离真相 &#x3D; 否定词</p><p>usually—ly代表副词的后缀</p><p>al后缀，一般形容词比较多—moral</p><hr><p>原文(1)：</p><blockquote><p>The first year of school in America,known as kindergarten, usually begins between the ages of five and six.</p></blockquote><ul><li>参考译文:在美国，学校的第一年，称为幼儿园，通常从五至六岁开始。</li></ul><hr><p>原文(2)：</p><blockquote><p>Among rich countries such a late start is very strange.</p></blockquote><ul><li>参考译文:在发达国家中，起步这么晚是很奇怪的</li></ul><hr><p>原文(3)：</p><blockquote><p>President 0bama believes it is an economic and social problem his education secretary goes as far as to say that it is “morally wrong”</p></blockquote><ul><li>参考译文:奥巴马总统认为这是一个经济和社会问题;他的教育部长甚至说这是“道德上的错误”</li></ul><hr><p>原文(4)：</p><blockquote><p>This statement has some support, as it is clear from research into vocabulary that youngsters from poor families enter kindergarten well behind those from rich families–a disadvantage that usually lasts a lifetime.</p></blockquote><ul><li>参考译文:这一说法得到了一些支持，因为对词汇的研究表明，贫困家庭的孩子上幼儿园的时间远远落后于富裕家庭的孩子–这一劣势通常会持续一生。</li></ul><hr><p>原文(5)：</p><blockquote><p>Children from households on welfare knew 525 words by the age of three,while the children of professionals had mastered l,116.</p></blockquote><ul><li>参考译文:领取救济金家庭的孩子三岁知道525个单词，而专业人士的孩子掌握了1116个单词。</li></ul><hr><p>原文(6)：</p><blockquote><p>Pre-school can help close this gap.</p></blockquote><ul><li>参考译文:学前教育有助于缩小这种差距。</li></ul><hr><p>原文(7)：</p><blockquote><p>So in a speech last month, Mr. Obama called for a partnership between the federal government and the states to expand it to every American child.</p></blockquote><ul><li>参考译文:因此，在上个月的一次演讲中，奥巴马呼吁联邦政府与各州建立伙伴关系，将其扩大到每一个美国儿童。</li></ul><hr><p>原文(8)：</p><blockquote><p>It later became known that “every” meant those who come from families with incomes of up to 200% above the poverty line—equal to an income of $47,000 for a family of four.</p></blockquote><ul><li>参考译文:后来人们知道，“每一个”指的是那些收入高于贫困线200%的家庭–相当于四口之家47000美元的收入。</li></ul><hr><p>原文(9)：</p><blockquote><p>Some critics say that sending children to school at the age of four does not work.</p></blockquote><ul><li>参考译文:一些批评人士说，在四岁的时候送孩子上学是行不通的</li></ul><hr><p>原文(10)：</p><blockquote><p>(10)The evidence suggests otherwise.</p></blockquote><ul><li>参考译文:证据表明情况并非如此。</li></ul><hr><p>原文(11)：</p><blockquote><p>For example, on March 20th new results were announced from a study of 9-to-11-year-olds in New Jersey.</p></blockquote><ul><li>参考译文:例如，3月20日，新泽西州一项针对9-11岁儿童的研究公布了新的结果。</li></ul><hr><p>原文(12)：</p><blockquote><p>This report found that disadvantaged children who had attended pre-school had better literacy(读写能力),language, maths and science skills.</p></blockquote><ul><li>参考译文:这份报告发现，上过学前班的弱势儿童有更好的识字能力、语言、数学和科学技能。</li></ul><hr><p>原文(13)：</p><blockquote><p>And two years of pre-kindergarten were better than one.</p></blockquote><ul><li>参考译文:两年的学前教育比一年更好。</li></ul><hr><p>原文(14)：</p><blockquote><p>Some studies also follow the effects of early learning over lifetimes, such as its effect on crime rates and other factors that may eventually burden society.</p></blockquote><ul><li>参考译文:一些研究还关注早期学习在一生中的影响，比如它对犯罪率的影响以及其他可能最终给社会带来负担的因素</li></ul><hr><p>原文(15)：</p><blockquote><p>Critics have singled out a government scheme called Head Start,created in 1965, which provides poor households with a range of services including school-based early education.</p></blockquote><ul><li>参考译文:批评人士特别指出了1965年建立的一个名为“启蒙计划”的政府计划，该计划为贫困家庭提供一系列服务，包括基于学校的早期教育。</li></ul>]]></content>
    
    
    <categories>
      
      <category>学位英语</category>
      
      <category>精读阅读理解精通核心必备词汇</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学位英语</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P4-3 案例：PDF合并</title>
    <link href="/2024/08/14/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part4-%E7%AC%94%E8%AE%B0/P4-3%20%E6%A1%88%E4%BE%8B%EF%BC%9APDF%E5%90%88%E5%B9%B6/"/>
    <url>/2024/08/14/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part4-%E7%AC%94%E8%AE%B0/P4-3%20%E6%A1%88%E4%BE%8B%EF%BC%9APDF%E5%90%88%E5%B9%B6/</url>
    
    <content type="html"><![CDATA[<h1 id="PDF合并"><a href="#PDF合并" class="headerlink" title="PDF合并"></a>PDF合并</h1><hr><h2 id="需求说明"><a href="#需求说明" class="headerlink" title="需求说明"></a>需求说明</h2><blockquote><p>有一堆英语考试真题(PDF格式)，要求把他们合并成一个PDF文件</p><p>无准备的写代码哦，可以看看真实的程序员解决问题的过程</p></blockquote><p>思路</p><ul><li>把文件夹中所有的PDF遍历一遍，然后读取二进制内容</li><li>然后逐个的去写入一个新的PDF中</li></ul><hr><h3 id="自己的写法"><a href="#自己的写法" class="headerlink" title="自己的写法"></a>自己的写法</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs java">String[] PDFFiles= IOHelpers.getFilesRecursively(<span class="hljs-string">&quot;D:/JavaTest1/PDFTest3&quot;</span>,<span class="hljs-string">&quot;pdf&quot;</span>);<span class="hljs-comment">//读取文件夹下pdf格式的文件</span><br><span class="hljs-type">PDDocument</span> <span class="hljs-variable">newdoc</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">PDDocument</span>();<span class="hljs-comment">//新的PDF文件</span><br><span class="hljs-keyword">for</span> (String PDFFile : PDFFiles)<br>&#123;<br>    <span class="hljs-type">PDDocument</span> <span class="hljs-variable">doc</span> <span class="hljs-operator">=</span> PDFHelpers.openFile(PDFFile);  <span class="hljs-comment">//读取对应路径的pdf文件</span><br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;doc.getNumberOfPages();i++)<br>    &#123;<br>        <span class="hljs-type">PDPage</span> <span class="hljs-variable">page</span> <span class="hljs-operator">=</span> doc.getPage(i);<span class="hljs-comment">//获取文件中的每一页</span><br>        newdoc.addPage(page);<span class="hljs-comment">//添加到新的PDF文件中</span><br>    &#125;<br>    <span class="hljs-comment">//PDFHelpers.close(doc);//关闭pdf</span><br>&#125;<br><span class="hljs-keyword">try</span> &#123;<br>    newdoc.save(<span class="hljs-string">&quot;D:/JavaTest1/PDFTest3/1.pdf&quot;</span>);<span class="hljs-comment">//保存到这个文件中</span><br>&#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;<br>    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">RuntimeException</span>(e);<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="遇到的问题总结"><a href="#遇到的问题总结" class="headerlink" title="遇到的问题总结"></a>遇到的问题总结</h4><ul><li><p>报错： COSStream has been closed and cannot be read. Perhaps its enclosing PDDocument has been closed? </p><ul><li>翻译：COSStream已关闭，无法读取。也许它的附件PDDocument已经关闭了?</li><li>解决方法：&#x2F;&#x2F;PDFHelpers.close(doc);&#x2F;&#x2F;关闭pdf 注释关闭的代码就解决了</li></ul></li><li><p>保存的PDF中 11-238页都是空白</p><ul><li>解决方法：更新版本(2.0.32)就好了,但是如果用最新版(3.0.3)时，报错了</li><li>遇到了依赖不行，可以用三步走（印象笔记上搜索  Dependency ‘XXX:‘ not found，三步解决 ）<ul><li>分析：有可能是yzk18-docs 的PDFHelpers 不兼容最新版</li></ul></li></ul></li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240814/%E7%89%88%E6%9C%AC.6m3tki2dkk.png" alt="版本"></p><p>报错：<img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240814/%E7%89%88%E6%9C%AC%E6%8A%A5%E9%94%991.9rjbjg4vft.webp" alt="版本报错1"></p><hr><p>遇到问题的处理过程</p><ul><li>1.搜索：编程语言+用的库+自己的目的  比如： java pdfbox 空白页<ul><li>百度—中文社区</li><li>谷歌—英文社区</li></ul></li><li>2.如果是之前的旧方法现在又代替的方法了，就替换最新的</li><li>3.库的版本问题，看看新版修复了没</li></ul><hr><h3 id="杨中科老师的写法"><a href="#杨中科老师的写法" class="headerlink" title="杨中科老师的写法"></a>杨中科老师的写法</h3><ul><li>背景介绍：录课的时候是2021-06-10  那时候我上述写的这个被锁定的问题还没有修复</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> IOException &#123;<br>    <span class="hljs-type">PDFMergerUtility</span> <span class="hljs-variable">merger</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">PDFMergerUtility</span>();<br>    String[] pdfFiles = IOHelpers.getFilesRecursively(<span class="hljs-string">&quot;F:\\网友提供的阅读\\已经使用\\广东自考学位真题&quot;</span>,<span class="hljs-string">&quot;pdf&quot;</span>);<br>    <span class="hljs-comment">//String[] pdfFiles = IOHelpers.getFilesRecursively(&quot;F:\\网友提供的阅读\\已经使用\\考研英语阅读1997-2015&quot;,&quot;pdf&quot;);</span><br>    <span class="hljs-keyword">for</span>(String pdfFile : pdfFiles)<br>    &#123;<br>        merger.addSource(pdfFile);<br>    &#125;<br>    merger.setDestinationFileName(<span class="hljs-string">&quot;d:/1.pdf&quot;</span>);<br>    merger.mergeDocuments(MemoryUsageSetting.setupMainMemoryOnly());<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part4</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P4-2 案例：对英语真题进行词频分析</title>
    <link href="/2024/08/14/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part4-%E7%AC%94%E8%AE%B0/P4-2%20%E6%A1%88%E4%BE%8B%EF%BC%9A%E5%AF%B9%E8%8B%B1%E8%AF%AD%E7%9C%9F%E9%A2%98%E8%BF%9B%E8%A1%8C%E8%AF%8D%E9%A2%91%E5%88%86%E6%9E%90/"/>
    <url>/2024/08/14/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part4-%E7%AC%94%E8%AE%B0/P4-2%20%E6%A1%88%E4%BE%8B%EF%BC%9A%E5%AF%B9%E8%8B%B1%E8%AF%AD%E7%9C%9F%E9%A2%98%E8%BF%9B%E8%A1%8C%E8%AF%8D%E9%A2%91%E5%88%86%E6%9E%90/</url>
    
    <content type="html"><![CDATA[<h1 id="案例：对英语真题进行词频分析"><a href="#案例：对英语真题进行词频分析" class="headerlink" title="案例：对英语真题进行词频分析"></a>案例：对英语真题进行词频分析</h1><hr><h2 id="需求说明"><a href="#需求说明" class="headerlink" title="需求说明"></a>需求说明</h2><ul><li>有一堆英语考试真题(PDF格式)，要求读取它们，然后分析出来每个单词出现的词频，然后输出到一个文本文件中，每行是一个“单词 词频”。暂不实现按照词频排序，因为涉及到stream或者SQL</li><li>先分析思路，写出伪代码，然后实现。不能没有准备的写代码<ul><li>怎么分析思路呢？1.<ul><li>先站在人的角度去看这个需求，正常人的方式怎么进行？</li><li>然后切换到计算机的视角去，看看怎么利用计算机去达到这个目的</li></ul></li></ul></li></ul><p>思路分析</p><blockquote><p>声明一个LinkedHashMap，Key是单词(忽略大小写),Value是词频<br>遍历每一个pdf文件<br>{<br>读取这个pdf的所有文本<br>对于文件按照 空格，口号，句号等来分割为单词。然后全部转为小写<br>然后在遍历每一个单词，看在map中是否存在，不存在则新增，存在则词频+1<br>}</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>    LinkedHashMap&lt;String,Integer&gt; map =<span class="hljs-keyword">new</span> <span class="hljs-title class_">LinkedHashMap</span>&lt;&gt;();<br>    String[] PDFFiles= IOHelpers.getFilesRecursively(<span class="hljs-string">&quot;D:/JavaTest1/PDFTest2&quot;</span>,<span class="hljs-string">&quot;pdf&quot;</span>);<span class="hljs-comment">//获取文件夹下所有的pdf文件</span><br>    <span class="hljs-keyword">for</span> (String Files :PDFFiles)<br>    &#123;<br>        <span class="hljs-type">PDDocument</span> <span class="hljs-variable">doc</span> <span class="hljs-operator">=</span> PDFHelpers.openFile(Files);  <span class="hljs-comment">//读取对应路径的pdf文件</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">text</span> <span class="hljs-operator">=</span> PDFHelpers.parseText(doc);<span class="hljs-comment">//pdf的txt文本提取成字符串</span><br>        String[] texts = text.toLowerCase().split(<span class="hljs-string">&quot;\\s|\\.|\\,|\\:|\\!|\\?|;|\\(|\\)&quot;</span>);<span class="hljs-comment">//符号转成小写并分割</span><br>        <span class="hljs-keyword">for</span> (String word:texts)<br>        &#123;<br>            <span class="hljs-keyword">if</span> (!isEnglishWord(word))<span class="hljs-comment">//如果这个word不是英语单词，则跳过</span><br>            &#123;<br>                <span class="hljs-keyword">continue</span>;<span class="hljs-comment">//处理下一个单词</span><br>            &#125;<br><br>            <span class="hljs-keyword">if</span> (word.equals(<span class="hljs-string">&quot;&quot;</span>))<br>            &#123;<br>                <span class="hljs-keyword">continue</span>;<br>            &#125;<br>            <span class="hljs-type">Integer</span> <span class="hljs-variable">frqe</span> <span class="hljs-operator">=</span>map.get(word);<span class="hljs-comment">//获得当前的词频</span><br>            <span class="hljs-keyword">if</span> (frqe==<span class="hljs-literal">null</span>)<span class="hljs-comment">//如果为null就证明不存在</span><br>            &#123;<br>                map.put(word,<span class="hljs-number">1</span>);<br>            &#125;<br>            <span class="hljs-keyword">else</span><br>            &#123;<br>                map.put(word,frqe+<span class="hljs-number">1</span>);<span class="hljs-comment">//存在就词频+1</span><br><br>            &#125;<br><br>        &#125;<br><br>        PDFHelpers.close(doc);<span class="hljs-comment">//关闭pdf*/</span><br>    &#125;<br>    <span class="hljs-type">String</span> <span class="hljs-variable">outputString</span> <span class="hljs-operator">=</span><span class="hljs-string">&quot;&quot;</span>;<br>    <span class="hljs-keyword">for</span> (String word:map.keySet())<span class="hljs-comment">//keyset()是map中所有key的集合</span><br>    &#123;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">freq</span> <span class="hljs-operator">=</span>map.get(word);<br>        outputString =outputString+word+<span class="hljs-string">&quot;=&quot;</span>+freq+<span class="hljs-string">&quot;\r\n&quot;</span>;<br><br>    &#125;<br>    <span class="hljs-comment">//System.out.println(outputString);</span><br>    IOHelpers.writeAllText(<span class="hljs-string">&quot;D:/JavaTest1/PDFTest2/1.txt&quot;</span>,outputString);<br><br><br>&#125;<br><span class="hljs-comment">//判断字符串中是否是一个英文单词(全部由英文字母组成)</span><br><span class="hljs-keyword">public</span>  <span class="hljs-keyword">static</span>  <span class="hljs-type">boolean</span> <span class="hljs-title function_">isEnglishWord</span><span class="hljs-params">(String s)</span><br>&#123;<br>    <span class="hljs-type">int</span> numbers=s.length();<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span><span class="hljs-number">0</span>;i&lt;numbers;i++)<br>    &#123;<br>        <span class="hljs-type">char</span> <span class="hljs-variable">ch</span> <span class="hljs-operator">=</span>s.charAt(i);<br>        <span class="hljs-keyword">if</span> (Character.isLowerCase(ch)==<span class="hljs-literal">false</span>)<span class="hljs-comment">//只要碰到一个非字母，函数就返回false</span><br>        &#123;<br>            <span class="hljs-keyword">return</span>  <span class="hljs-literal">false</span>;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span>  <span class="hljs-literal">true</span>;<span class="hljs-comment">//如果运行到这里，就说明每个都是字母</span><br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part4</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P4-1 办公自动化简介以及PDF文件分析</title>
    <link href="/2024/08/12/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part4-%E7%AC%94%E8%AE%B0/P4-1%20%E5%8A%9E%E5%85%AC%E8%87%AA%E5%8A%A8%E5%8C%96%E7%AE%80%E4%BB%8B%E4%BB%A5%E5%8F%8APDF%E6%96%87%E4%BB%B6%E5%88%86%E6%9E%90/"/>
    <url>/2024/08/12/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part4-%E7%AC%94%E8%AE%B0/P4-1%20%E5%8A%9E%E5%85%AC%E8%87%AA%E5%8A%A8%E5%8C%96%E7%AE%80%E4%BB%8B%E4%BB%A5%E5%8F%8APDF%E6%96%87%E4%BB%B6%E5%88%86%E6%9E%90/</url>
    
    <content type="html"><![CDATA[<h1 id="办公自动化简介以及PDF文件分析"><a href="#办公自动化简介以及PDF文件分析" class="headerlink" title="办公自动化简介以及PDF文件分析"></a>办公自动化简介以及PDF文件分析</h1><hr><h2 id="什么是办公自动化"><a href="#什么是办公自动化" class="headerlink" title="什么是办公自动化"></a>什么是办公自动化</h2><ul><li>非IT专业人员打交道最多的三种文件：Word、Excel、PDF<ul><li>Excel中的VBA脚本，用的是Basic的语言，非常小众了现在<blockquote><p>办公自动化就是把人工手动的操作方法通过编程自动化去完成<br>这个阶段讲：Word、Excel、PDF文件的读写，图表，简化日常工作</p></blockquote></li></ul></li></ul><h2 id="使用YZK-Docs"><a href="#使用YZK-Docs" class="headerlink" title="使用YZK-Docs"></a>使用YZK-Docs</h2><ul><li>1、Maven中引入yzk18-docs</li><li>2、看文档研究PDFHelpers的用法。 <ul><li>就是对PDFbox的简单封装，没有封装的方法直接参考PDFbox的文档即可</li></ul></li><li>3、案例：把一个PDF文件中的文字提取到一个文本文档中，图片保存到同级目录下，文件名用递增序号</li></ul><p>思路</p><ul><li>1.PDF文档的不同：<ul><li>扫描版</li><li>加密版</li><li>文字版(开源一般都只对文字版管用)</li><li>限制<ul><li>1、有的是纯扫描版文件，全都是图片，无法简单的提取文字，需要调用OCR等功能。OCR精度较高，所以都是收费的</li><li>2、一些被加密等PDF文件需要特殊处理</li><li>3、PDF的不可替代性的格式。所以用代码去实现提取PDF中的文字，无法达到完美的还原出来里面所有的内容</li></ul></li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//案例：把一个PDF文件中的文字提取到一个文本文档中，图片保存到同级目录下，文件名用递增序号</span><br><span class="hljs-type">PDDocument</span> <span class="hljs-variable">doc</span> <span class="hljs-operator">=</span> PDFHelpers.openFile(<span class="hljs-string">&quot;D:/JavaTest1/PDFtest/03 1.1 提升信息敏感度的三种方法，成为信息收集的「有心人」.pdf&quot;</span>);  <span class="hljs-comment">//读取对应路径的pdf文件</span><br><span class="hljs-type">int</span> <span class="hljs-variable">docNumbr</span> <span class="hljs-operator">=</span> doc.getNumberOfPages();<span class="hljs-comment">//获取pdf多少页</span><br><span class="hljs-type">String</span> <span class="hljs-variable">text</span> <span class="hljs-operator">=</span> PDFHelpers.parseText(doc);<span class="hljs-comment">//pdf的txt文本提取成字符串</span><br>IOHelpers.writeAllText(<span class="hljs-string">&quot;D:/JavaTest1/PDFtest/有心人.txt&quot;</span>,text);<span class="hljs-comment">//字符串写入txt</span><br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span><span class="hljs-number">0</span>;i&lt;docNumbr;i++)<br>&#123;<br>    <span class="hljs-type">PDPage</span> <span class="hljs-variable">page</span> <span class="hljs-operator">=</span> doc.getPage(i);<span class="hljs-comment">//获取页数</span><br>    List&lt;<span class="hljs-type">byte</span>[]&gt; bytes = PDFHelpers.parseImages(page,<span class="hljs-string">&quot;png&quot;</span>);<span class="hljs-comment">//获取当前页的图片信息</span><br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">byte</span>[] bytes1 :bytes)<br>    &#123;<br>        IOHelpers.writeAllBytes(<span class="hljs-string">&quot;D:/JavaTest1/PDFtest/图片/&quot;</span>+i+<span class="hljs-string">&quot;.png&quot;</span>,bytes1);<span class="hljs-comment">//写入图片</span><br>    &#125;<br>&#125;<br><br>PDFHelpers.close(doc);<span class="hljs-comment">//关闭pdf</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part4</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P3-11 异常</title>
    <link href="/2024/08/12/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part3-%E7%AC%94%E8%AE%B0/P3-11%20%E5%BC%82%E5%B8%B8/"/>
    <url>/2024/08/12/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part3-%E7%AC%94%E8%AE%B0/P3-11%20%E5%BC%82%E5%B8%B8/</url>
    
    <content type="html"><![CDATA[<h1 id="异常"><a href="#异常" class="headerlink" title="异常"></a>异常</h1><hr><h2 id="什么是异常"><a href="#什么是异常" class="headerlink" title="什么是异常"></a>什么是异常</h2><ul><li>1、异常是程序执行过程中出现的“意外”情况。<ul><li>但异常不是bug哦</li></ul></li><li>2、异常我们肯定不陌生<ul><li>比如：数组访问越界、Integer.parseInt()失败、读取不存在的文件等</li><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240812/%E5%BC%82%E5%B8%B81.6pnff3juac.webp" alt="异常1"></li></ul></li><li>3、异常可以让程序出现意外情况的时候立即通知调用者<ul><li>遇到异常的时候，程序也会在异常点停止，以免造成进一步的破坏</li><li>可以和C语言或Go语言的错误码等实现方式比较</li></ul></li></ul><h2 id="Java异常"><a href="#Java异常" class="headerlink" title="Java异常"></a>Java异常</h2><ul><li><p>1、Java中的异常是一种特殊的类，他们直接或者间接继承自Throwable</p><ul><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240812/Throwable.syv83f922.webp" alt="Throwable"></li><li>直接或者间接继承自RuntimeException的异常叫做“运行时异常”，属于<strong>非检查异常</strong></li><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240812/RuntimeException.9kg3kways9.webp" alt="RuntimeException"></li><li>其他所有的异常叫做“检查异常”，属于<strong>非运行时异常</strong></li></ul></li><li><p>2、一个方法上可以通过throws关键字说明这个方法可能会抛出哪些异常（了解即可）</p><ul><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240812/%E5%A3%B0%E6%98%8E%E5%BC%82%E5%B8%B81.9gwhn65yc3.webp" alt="声明异常1"></li><li>调用这个方法的代码要么catch(抓住)这些异常，要么继续声明throws</li></ul></li><li><p>3、调用一个声明throws非RuntimeException的方法，必须对异常做处理：要么catch，要么继续throws</p><ul><li>怎么去看非RuntimeException呢？<ul><li>(可以从错误的继承链中看看是否能找到RuntimeException)</li></ul></li><li>IDEA提供的快捷写的模板只能是printStacktrace，这不是一个好习惯，不建议用它默认写的这个报错。2024的IDEA模板改成了throw new RuntimeException(e)，非常不错</li><li>IDEA的快捷方式catch<ul><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240812/catch.361hpah4i9.webp" alt="catch"></li></ul></li><li>IDEA的快捷方式throws<ul><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240812/throws.pf9ada8lu.webp" alt="throws"></li></ul></li></ul></li><li><p>4、对于初学者，如果不知道如何处理的话，就throw new RuntimeException(e);</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">try</span> <br>&#123;<br>    <span class="hljs-type">FileInputStream</span> <span class="hljs-variable">fis</span> <span class="hljs-operator">=</span><span class="hljs-keyword">new</span> <span class="hljs-title class_">FileInputStream</span>(<span class="hljs-string">&quot;d:/1.txt&quot;</span>);<br>&#125; <span class="hljs-keyword">catch</span> (FileNotFoundException e) <br>&#123;<br>    <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">RuntimeException</span>(e);<span class="hljs-comment">//用这个去处理</span><br>&#125;<br></code></pre></td></tr></table></figure><ul><li>5、杨中科封装的库，很多地方就是把检查异常catch住，然后重新抛成RuntimeException了</li><li>6、可以自己catch处理的地方<ul><li>比如：检测用户输入的是否是合法的整数，就可以用catch住Integer.parseInt()的异常。</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java">String s=<span class="hljs-string">&quot;1b2&quot;</span>;<br><span class="hljs-keyword">try</span><br>&#123;<br>    <span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span>Integer.parseInt(s);<span class="hljs-comment">//字符串转换成int</span><br>    System.out.println(i);<br>&#125;<br><span class="hljs-keyword">catch</span>(NumberFormatException e)<br>&#123;<br>    System.out.println(<span class="hljs-string">&quot;不是合法的整数&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part3</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P3-10 Java中基本的数据结构</title>
    <link href="/2024/08/11/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part3-%E7%AC%94%E8%AE%B0/P3-10%20Java%E4%B8%AD%E5%9F%BA%E6%9C%AC%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    <url>/2024/08/11/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part3-%E7%AC%94%E8%AE%B0/P3-10%20Java%E4%B8%AD%E5%9F%BA%E6%9C%AC%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</url>
    
    <content type="html"><![CDATA[<h1 id="Java中基本的数据结构"><a href="#Java中基本的数据结构" class="headerlink" title="Java中基本的数据结构"></a>Java中基本的数据结构</h1><hr><h2 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h2><ul><li>《数据结构》是研究数据在计算机中存储的学科。数组就是一种基础的可以<strong>顺序存储****固定数量</strong>数据的数据结构。</li><li>Java中还有很多其他数据结构的类&#x2F;接口<ul><li>比如Set、Map、List等，他们还有很多子类<ul><li>比如：LinkedList、ArrayList….</li></ul></li></ul></li><li>这次，介绍最常用的两个：LinkedList、LinkedHashMap。先讲非泛型写法，在介绍泛型。</li></ul><h3 id="LinkedList"><a href="#LinkedList" class="headerlink" title="LinkedList"></a>LinkedList</h3><ul><li>数组的长度在声明的时候就确定了，无法在运行时改变数组对象的长度。</li><li>需要一种能在运行时动态添加内容的数据结构，这就是LinkedList。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">LinkedList</span> <span class="hljs-variable">l1</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">LinkedList</span>();<br>l1.add(<span class="hljs-string">&quot;3&quot;</span>);<span class="hljs-comment">//添加元素</span><br>l1.add(<span class="hljs-number">6</span>);<br>l1.add(<span class="hljs-number">8</span>);<br>System.out.println(l1.size());<span class="hljs-comment">//获取数据个数</span><br>System.out.println(l1.get(<span class="hljs-number">2</span>));<span class="hljs-comment">//获取指定序号的元素</span><br></code></pre></td></tr></table></figure><h3 id="LinkedHashMap"><a href="#LinkedHashMap" class="headerlink" title="LinkedHashMap"></a>LinkedHashMap</h3><ul><li>1、编程中，有时候需要一种类似“字典”的数据结构：也就是保存“一对数据”。<ul><li>比如实现英汉词典的时候，就是一堆由“英文-中文解释”组成的“键值对”<ul><li>英文是“健”（key），中文是“值”(Value)</li><li>键不能重复，但值可以重复</li></ul></li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">LinkedHashMap</span> <span class="hljs-variable">map</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">LinkedHashMap</span>();<br>map.put(<span class="hljs-string">&quot;Hello&quot;</span>,<span class="hljs-string">&quot;你好&quot;</span>);<span class="hljs-comment">//放入键值对，如果已经存在则覆盖</span><br>System.out.println(map.get(<span class="hljs-string">&quot;Hello&quot;</span>));<span class="hljs-comment">//根据键获取值，如果不存在，则返回null</span><br></code></pre></td></tr></table></figure><ul><li>演示：做一个简单的英汉词典，如果查询不存在则提示“查不到”</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">LinkedHashMap</span> <span class="hljs-variable">map</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">LinkedHashMap</span>();<br>map.put(<span class="hljs-string">&quot;Hello&quot;</span>,<span class="hljs-string">&quot;你好&quot;</span>);<span class="hljs-comment">//放入键值对，如果已经存在则覆盖</span><br><span class="hljs-comment">//System.out.println(map.get(&quot;Hello&quot;));//根据键获取值，如果不存在，则返回null</span><br>map.put(<span class="hljs-string">&quot;dog&quot;</span>,<span class="hljs-string">&quot;狗&quot;</span>);<br>map.put(<span class="hljs-string">&quot;cat&quot;</span>,<span class="hljs-string">&quot;猫&quot;</span>);<br><span class="hljs-type">String</span> <span class="hljs-variable">s</span> <span class="hljs-operator">=</span><span class="hljs-string">&quot;dat&quot;</span>;<br><span class="hljs-type">Object</span> <span class="hljs-variable">ojt</span> <span class="hljs-operator">=</span> map.get(s);<span class="hljs-comment">//只能用Object类型去接收值</span><br><span class="hljs-keyword">if</span> (ojt==<span class="hljs-literal">null</span>)<br>&#123;<br>    System.out.println(<span class="hljs-string">&quot;查不到&quot;</span>);<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>    System.out.println(ojt);<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="泛型入门"><a href="#泛型入门" class="headerlink" title="泛型入门"></a>泛型入门</h2><ul><li>1、LinkedList、LinkedHashMap中的数据可以放入任意类型，不仅容易造成数据混乱，在取出来数据的时候还需要做类型转换。这时候就可以用泛型</li><li>2、使用泛型的数据结构，就可以限制放入数据的类型，这样取出来的数据类型也就确定了。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java">LinkedList&lt;String&gt; list =<span class="hljs-keyword">new</span> <span class="hljs-title class_">LinkedList</span>&lt;String&gt;();<span class="hljs-comment">//new后面的String类型可以省略</span><br>list.add(<span class="hljs-string">&quot;你好&quot;</span>);<br><span class="hljs-type">String</span> <span class="hljs-variable">s</span> <span class="hljs-operator">=</span> list.getLast();<span class="hljs-comment">//返回值类型也变成了String</span><br>System.out.println(s);<br><br><br><br>LinkedHashMap&lt;String,String&gt; map =<span class="hljs-keyword">new</span> <span class="hljs-title class_">LinkedHashMap</span>&lt;&gt;();<span class="hljs-comment">//LinkedHashMap 需要两个类型，第一个是key的，第二个是value的</span><br>map.put(<span class="hljs-string">&quot;cat&quot;</span>,<span class="hljs-string">&quot;猫&quot;</span>);<br><span class="hljs-type">String</span> <span class="hljs-variable">s</span> <span class="hljs-operator">=</span>map.get(<span class="hljs-string">&quot;cat&quot;</span>);<br>System.out.println(s);<br></code></pre></td></tr></table></figure><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><ul><li>1、关于int等类型的问题：对于基本数据类型，不能直接用在声明泛型类型中，必须用对应的包装类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java">LinkedList &lt;<span class="hljs-type">int</span>&gt; p1 =<span class="hljs-keyword">new</span> <span class="hljs-title class_">LinkedList</span>&lt;<span class="hljs-type">int</span>&gt;();  <span class="hljs-comment">//这种声明是错误的</span><br><br>LinkedList&lt;Integer&gt; p1 =<span class="hljs-keyword">new</span> <span class="hljs-title class_">LinkedList</span>&lt;&gt;();<span class="hljs-comment">//这种声明才是正确的，用了int的包装类</span><br></code></pre></td></tr></table></figure><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240811/int%E6%B3%9B%E5%9E%8B%E6%8A%A5%E9%94%99.1vyki32ln5.webp" alt="int泛型报错"></p><ul><li>2、演示：使用泛型保存学生的“姓名-成绩”，然后提供成绩查询功能</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java">LinkedHashMap &lt;String,Integer&gt; map =<span class="hljs-keyword">new</span> <span class="hljs-title class_">LinkedHashMap</span>&lt;&gt;(); <span class="hljs-comment">//key 是String类型，value是Integer类型(int的包装类型)</span><br>map.put(<span class="hljs-string">&quot;张三&quot;</span>,<span class="hljs-number">80</span>);<br>map.put(<span class="hljs-string">&quot;李四&quot;</span>,<span class="hljs-number">60</span>);<br>map.put(<span class="hljs-string">&quot;王麻子&quot;</span>,<span class="hljs-number">95</span>);<br>map.put(<span class="hljs-string">&quot;夏天&quot;</span>,<span class="hljs-number">99</span>);<br><span class="hljs-type">Integer</span> <span class="hljs-variable">s</span> <span class="hljs-operator">=</span>map.get(<span class="hljs-string">&quot;夏&quot;</span>);<span class="hljs-comment">//也可以用int去接收数据，但是最好使用Integer，因为它可以接受null</span><br><span class="hljs-keyword">if</span> (s==<span class="hljs-literal">null</span>)<br>&#123;<br>    System.out.println(<span class="hljs-string">&quot;此人查不到&quot;</span>);<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>    System.out.println(<span class="hljs-string">&quot;成绩为：&quot;</span>+s);<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part3</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P3-9 Integer和Int</title>
    <link href="/2024/08/11/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part3-%E7%AC%94%E8%AE%B0/P3-9%20Integer%E5%92%8CInt/"/>
    <url>/2024/08/11/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part3-%E7%AC%94%E8%AE%B0/P3-9%20Integer%E5%92%8CInt/</url>
    
    <content type="html"><![CDATA[<h1 id="Integer和Int"><a href="#Integer和Int" class="headerlink" title="Integer和Int"></a>Integer和Int</h1><hr><h2 id="Int不能为空"><a href="#Int不能为空" class="headerlink" title="Int不能为空"></a>Int不能为空</h2><ul><li>1、复习：null表示一个变量没有指向任何对象。int、double、boolean等基础数据类型不可以为null。</li><li>2、null和0，null和””都不是一个意思。编程的时候，有时需要表示“整数变量没有值”的情况，所以用0有时是不行的。</li><li>3、而且Java中所谓“一切皆对象”，但是int等不是对象，因此诞生了Integer等“包装类”<ul><li>Integer就是你可以认为这是一种可以为null的整数</li></ul></li></ul><h3 id="Integer的使用"><a href="#Integer的使用" class="headerlink" title="Integer的使用"></a>Integer的使用</h3><ul><li>i4不能直接等于i2，除非是在不等于null的时候，要不然会报错：“NullPointerException”<ul><li>因为i2是Integer是可以为null的，int不行</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java">Integer i1=<span class="hljs-number">3</span>;<br>Integer i2=<span class="hljs-literal">null</span>;<br><span class="hljs-type">int</span> i3=i1;<span class="hljs-comment">//(int)i1  老语法的写法</span><br><span class="hljs-keyword">if</span> (i2!=<span class="hljs-literal">null</span>)<br>&#123;<br>    <span class="hljs-type">int</span> i4=i2;<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>    System.out.println(<span class="hljs-string">&quot;i2是null&quot;</span>);<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="Integer原理其实很简单"><a href="#Integer原理其实很简单" class="headerlink" title="Integer原理其实很简单"></a>Integer原理其实很简单</h3><ul><li>探究原理可以用java反编译看看：jd-gui.exe</li><li>自己也可以写，比如下面的这个样子</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MyInteger</span> &#123;<br><span class="hljs-keyword">private</span>  <span class="hljs-type">int</span> value;<br><br><span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">getValue</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-keyword">return</span> value;<br>&#125;<br><br><span class="hljs-keyword">public</span> MyInteger <span class="hljs-title function_">setValue</span><span class="hljs-params">(<span class="hljs-type">int</span> value)</span> &#123;<br>    <span class="hljs-built_in">this</span>.value = value;<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>;<br>&#125;<br>&#125;<br><br><br><span class="hljs-comment">//用法</span><br><span class="hljs-type">MyInteger</span> <span class="hljs-variable">i1</span> <span class="hljs-operator">=</span><span class="hljs-keyword">new</span> <span class="hljs-title class_">MyInteger</span>();<br>i1.setValue(<span class="hljs-number">3</span>);<br>System.out.println(i1.getValue());<br></code></pre></td></tr></table></figure><h3 id="其他类"><a href="#其他类" class="headerlink" title="其他类"></a>其他类</h3><ul><li>int–&gt;Integer</li><li>long–&gt;Long</li><li>boolean–&gt;Boolean</li><li>…..这些其他的类都是为了解决基础数据类型不能为null的问题</li></ul><h3 id="小彩蛋"><a href="#小彩蛋" class="headerlink" title="小彩蛋"></a>小彩蛋</h3><ul><li>null和空有什么区别？<ul><li>白话解释：null就是我手里什么都没有；空就是 我手里有一个数量为0的羊肉串</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java">String s=<span class="hljs-literal">null</span>;<span class="hljs-comment">//null是没有字符串对象</span><br>String s1=<span class="hljs-string">&quot;&quot;</span>;<span class="hljs-comment">//长度为零的字符串</span><br>System.out.println(s);<br>System.out.println(s1);<br>System.out.println(s1.length());<br>System.out.println(s.length());<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part3</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P3-8 简单的继承</title>
    <link href="/2024/08/10/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part3-%E7%AC%94%E8%AE%B0/P3-8%20%E7%AE%80%E5%8D%95%E7%9A%84%E7%BB%A7%E6%89%BF/"/>
    <url>/2024/08/10/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part3-%E7%AC%94%E8%AE%B0/P3-8%20%E7%AE%80%E5%8D%95%E7%9A%84%E7%BB%A7%E6%89%BF/</url>
    
    <content type="html"><![CDATA[<h1 id="简单的继承"><a href="#简单的继承" class="headerlink" title="简单的继承"></a>简单的继承</h1><hr><h2 id="类继承语法"><a href="#类继承语法" class="headerlink" title="类继承语法"></a>类继承语法</h2><ul><li>1、复习：A类从B类继承，那么B类就是父类，A类就是子类。类的继承可以简化类的声明<ul><li>extends Person 继承</li></ul></li><li>2、语法</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ChineseTest</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Person</span>&#123;  <span class="hljs-comment">//extends Person  继承于Person这个类</span><br>    <span class="hljs-keyword">private</span> String hukou;<br><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getHukou</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> hukou;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> ChineseTest <span class="hljs-title function_">setHukou</span><span class="hljs-params">(String hukou)</span> &#123;<br>        <span class="hljs-built_in">this</span>.hukou = hukou;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h2 id="继承惹上变量"><a href="#继承惹上变量" class="headerlink" title="继承惹上变量"></a>继承惹上变量</h2><ul><li>1、父类类型的变量可以指向子类类型的对象<ul><li>Person p1 &#x3D;new ChineseTest();</li></ul></li><li>2、如果父类类型指向的对象是子类类型的，那么可以用<strong>显式转换</strong>为子类类型的变量。如果转换出错，会抛异常<ul><li>ChineseTest p2 &#x3D;(ChineseTest) p1</li></ul></li><li>3、能够使用什么方法，取决于变量的类型<ul><li>为什么显式转换后，就可以set hukou呢？</li><li>因为Chinese类型有这个方法，而Person没有</li></ul></li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240810/%E7%BB%A7%E6%89%BF1.8hge7g1z72.png" alt="继承1"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">Person</span> <span class="hljs-variable">p1</span> <span class="hljs-operator">=</span><span class="hljs-keyword">new</span> <span class="hljs-title class_">ChineseTest</span>();<span class="hljs-comment">//父类类型的变量可以指向子类类型的对象</span><br><br><span class="hljs-comment">//ChineseTest c= new Person();//子类类型的变量不能指向父类类型的对象</span><br>p1.setAge(<span class="hljs-number">18</span>);<br>p1.setName(<span class="hljs-string">&quot;C&quot;</span>);<br>p1.sayHello();<br><br><span class="hljs-type">ChineseTest</span> <span class="hljs-variable">p2</span> <span class="hljs-operator">=</span>(ChineseTest) p1;<span class="hljs-comment">//显式转换。代表程序员确认：p1指向的一定是Chinese对象</span><br>p2.setHukou(<span class="hljs-string">&quot;河南&quot;</span>);<br>System.out.println(p2.getHukou());<br></code></pre></td></tr></table></figure><h2 id="Object"><a href="#Object" class="headerlink" title="Object"></a>Object</h2><ul><li>Java里所有类都直接或者间接继承自Object类</li></ul>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part3</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P3-7 JavaBean</title>
    <link href="/2024/08/10/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part3-%E7%AC%94%E8%AE%B0/P3-7%20JavaBean/"/>
    <url>/2024/08/10/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part3-%E7%AC%94%E8%AE%B0/P3-7%20JavaBean/</url>
    
    <content type="html"><![CDATA[<h1 id="JavaBean"><a href="#JavaBean" class="headerlink" title="JavaBean"></a>JavaBean</h1><hr><h2 id="为什么Javabean"><a href="#为什么Javabean" class="headerlink" title="为什么Javabean"></a>为什么Javabean</h2><ul><li>1、Java中没有C#、Kotlin等语言中的属性的语法，为了规范Java中“属性”的语法，Java制定了JavaBean规范，按照JavaBean规范来编写，能够更简单的和其他框架一起使用</li><li>2、JavaBean的规范细节非常多，这里只讲最重要的几点。其他以后自己研究</li></ul><h3 id="JavaBean主要规则"><a href="#JavaBean主要规则" class="headerlink" title="JavaBean主要规则"></a>JavaBean主要规则</h3><ul><li>1、必须是public类</li><li>2、成员变量用private，通过public的setter、getter方法访问</li><li>3、也可以只提供getter方法，这样的属性叫只读属性；<ul><li>也可以只提供setter方法，这样的属性叫只写属性；</li><li>如果getter&#x2F;setter都有，就叫可读可写属性</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">private</span> <span class="hljs-type">int</span> age;<br><span class="hljs-keyword">private</span> String name;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setAge</span><span class="hljs-params">(<span class="hljs-type">int</span> value)</span><span class="hljs-comment">//可读可写</span><br>&#123;<br>    <span class="hljs-built_in">this</span>.age=value;<br>&#125;<br><span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">getAge</span><span class="hljs-params">()</span><br>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.age;<br>&#125;<br><span class="hljs-keyword">public</span>  <span class="hljs-keyword">void</span>  <span class="hljs-title function_">setName</span><span class="hljs-params">(String value)</span><br>&#123;<br>    <span class="hljs-built_in">this</span>.name=value;<br>&#125;<br><span class="hljs-keyword">public</span> String <span class="hljs-title function_">getName</span><span class="hljs-params">()</span><br>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.name;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">private</span> <span class="hljs-type">int</span> age;<br><span class="hljs-keyword">private</span> String name;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setAge</span><span class="hljs-params">(<span class="hljs-type">int</span> value)</span><span class="hljs-comment">//可写</span><br>&#123;<br>    <span class="hljs-built_in">this</span>.age=value;<br>&#125;<br><br><span class="hljs-keyword">public</span>  <span class="hljs-keyword">void</span>  <span class="hljs-title function_">setName</span><span class="hljs-params">(String value)</span><br>&#123;<br>    <span class="hljs-built_in">this</span>.name=value;<br>&#125;<br><br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">private</span> <span class="hljs-type">int</span> age;<br><span class="hljs-keyword">private</span> String name;<br><br><span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">getAge</span><span class="hljs-params">()</span><span class="hljs-comment">//可读</span><br>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.age;<br>&#125;<br><br><span class="hljs-keyword">public</span> String <span class="hljs-title function_">getName</span><span class="hljs-params">()</span><br>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.name;<br>&#125;<br></code></pre></td></tr></table></figure><hr><h3 id="Chain-Setter-链式编程"><a href="#Chain-Setter-链式编程" class="headerlink" title="Chain Setter-链式编程"></a>Chain Setter-链式编程</h3><ul><li>链式编程：可以简化代码,用起来更简单<ul><li>需要把类的方法void改成类名Cat</li><li>达到类似C#的写法：test(new Cat{Name&#x3D;”Cool”,age&#x3D;18})</li></ul></li><li>但链式编程这个方式并不符合JavaBean规范，因为规范要求setter方法返回值必须是void。因此部分“死板”的框架不支持这种写法</li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240810/%E9%93%BE%E5%BC%8F%E7%BC%96%E7%A8%8B.6t719xiqts.webp" alt="链式编程"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Cat</span> &#123;<br><span class="hljs-keyword">private</span> <span class="hljs-type">int</span> age;<br><span class="hljs-keyword">private</span> String name;<br><span class="hljs-keyword">public</span> Cat <span class="hljs-title function_">setAge</span><span class="hljs-params">(<span class="hljs-type">int</span> value)</span><span class="hljs-comment">//把void改成类名Cat</span><br>&#123;<br>    <span class="hljs-built_in">this</span>.age=value;<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>;<br>&#125;<br><span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">getAge</span><span class="hljs-params">()</span><br>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.age;<br>&#125;<br><span class="hljs-keyword">public</span>  Cat  <span class="hljs-title function_">setName</span><span class="hljs-params">(String value)</span><span class="hljs-comment">//把void改成类名Cat</span><br>&#123;<br>    <span class="hljs-built_in">this</span>.name=value;<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>;<br>&#125;<br><span class="hljs-keyword">public</span> String <span class="hljs-title function_">getName</span><span class="hljs-params">()</span><br>&#123;<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.name;<br>&#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><br><span class="hljs-type">Cat</span> <span class="hljs-variable">c</span> <span class="hljs-operator">=</span><span class="hljs-keyword">new</span> <span class="hljs-title class_">Cat</span>();<br>    c.setAge(<span class="hljs-number">1</span>);<br>    c.setName(<span class="hljs-string">&quot;岁岁&quot;</span>);<br>    <span class="hljs-comment">//System.out.println(&quot;猫猫的名字叫：&quot;+c.getName()+&quot;,&quot;+c.getAge()+&quot;岁了。&quot;);</span><br><br><span class="hljs-type">Cat</span> <span class="hljs-variable">c</span> <span class="hljs-operator">=</span><span class="hljs-keyword">new</span> <span class="hljs-title class_">Cat</span>().setAge(<span class="hljs-number">1</span>).setName(<span class="hljs-string">&quot;岁岁&quot;</span>);<span class="hljs-comment">//链式编程将上面三句合成了一句</span><br><br>    <span class="hljs-comment">//分解上面这一句的过程</span><br>    Cat c=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Cat</span>();<br>    <span class="hljs-type">Cat</span> <span class="hljs-variable">c1</span> <span class="hljs-operator">=</span>c.setAge(<span class="hljs-number">1</span>);<br>    <span class="hljs-type">Cat</span> <span class="hljs-variable">c2</span> <span class="hljs-operator">=</span>c1.setName(<span class="hljs-string">&quot;岁岁&quot;</span>);<br></code></pre></td></tr></table></figure><h3 id="JavaBean代码生成"><a href="#JavaBean代码生成" class="headerlink" title="JavaBean代码生成"></a>JavaBean代码生成</h3><ul><li>简化getter&#x2F;setter代码编写的方法，只要写private成员变量。其他帮你生成</li><li>步骤：<ul><li>1、IDEA中生成代码：右键[Generate]–&gt;[Getter&#x2F;Setter]<ul><li>SetterTemplate中可以选择风格：JavaBean和链式编程</li></ul></li></ul></li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240810/%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%901.5fki5wuq8f.webp" alt="代码生成1"></p><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240810/get%E5%92%8Cset.4cksv0ywcv.webp" alt="get和set"></p><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240810/%E8%A7%84%E8%8C%83.8ojm2ki7v4.webp" alt="规范"></p><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240810/%E7%94%9F%E6%88%90%E4%BB%A3%E7%A0%81%E5%90%8E1.4n7mo6e4ib.webp" alt="生成代码后1"></p><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240810/%E9%93%BE%E5%BC%8F%E7%BC%96%E7%A8%8B%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90.92q1tfqiq9.webp" alt="链式编程代码生成"></p><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240810/%E9%93%BE%E5%BC%8F%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%902.4g4esqrz2q.webp" alt="链式代码生成2"></p><ul><li>2、Lombok(*):加上一个@Data，然后会在编译生成的代码中自动增加getter&#x2F;setter等其他方法<ul><li>缺点：依赖于这个插件</li><li>所以爱者很爱，烦着很烦</li><li>我学习的时候，IDEA不能直接添加@Data到classpath了，只能引用然后添加插件才能使用</li></ul></li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240810/%E6%8F%92%E4%BB%B61.8ojm2l48ar.webp" alt="插件1"></p><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240810/%E6%8F%92%E4%BB%B6%E6%95%88%E6%9E%9C.7sn4n4ujus.webp" alt="插件效果"></p>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part3</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P3-6 类的其他语法</title>
    <link href="/2024/08/09/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part3-%E7%AC%94%E8%AE%B0/P3-6%20%E7%B1%BB%E7%9A%84%E5%85%B6%E4%BB%96%E8%AF%AD%E6%B3%95/"/>
    <url>/2024/08/09/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part3-%E7%AC%94%E8%AE%B0/P3-6%20%E7%B1%BB%E7%9A%84%E5%85%B6%E4%BB%96%E8%AF%AD%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h1 id="类的其他语法"><a href="#类的其他语法" class="headerlink" title="类的其他语法"></a>类的其他语法</h1><hr><h2 id="成员变量"><a href="#成员变量" class="headerlink" title="成员变量"></a>成员变量</h2><ul><li>1、所有类型的局部变量必须初始化，而成员变量声明时候可以不初始化。<ul><li>对成员变量，对于基本数值类型默认初始值为0、false</li><li>String、Person等非基本类型从初始化为null（从命名上看的出来，首字母大写是类的写法）</li><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240809/%E7%B1%BB.6t718xnuqq.webp" alt="类"></li></ul></li><li>2、当成员变量和局部变量（方法的参数也可以看作局部变量）重名的时候，age被看作局部变量，因此为了避免混乱，建议访问类成员变量、方法的时候加上**this.**，在类部门this代表当前对象。<ul><li>**this.**也可以调用当前类的成员方法</li></ul></li></ul><h3 id="null"><a href="#null" class="headerlink" title="null"></a>null</h3><ul><li>1、当一个变量指向null的时候表示<strong>变量不执行任何对象</strong></li><li>2、Java的基本数据类型（byte、short、int、long、float、double、char、boolean）变量不可以被赋值为null<ul><li>其他类（包括String）变量可以被赋值为null</li></ul></li><li>3、对于一个指向null的变量调用如何方法都会报错<ul><li>碰到<strong>NullPointerException</strong>不要慌</li><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240809/%E6%8A%A5%E9%94%99.5fki4wcspu.webp" alt="报错"></li></ul></li></ul><h3 id="public-公有-和protected-受保护的"><a href="#public-公有-和protected-受保护的" class="headerlink" title="public(公有)和protected(受保护的)"></a>public(公有)和protected(受保护的)</h3><ul><li>1、谁都可以访问的叫public；只有本类才能访问的是private。这就是<strong>封装</strong></li><li>2、一般情况下，成员变量声明为private，不希望外部访问的方法也是private，希望别人调用的方法声明为public<br><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240809/public.60u5r7fuba.webp" alt="public"></li></ul>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part3</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P3-5 “搞”对象</title>
    <link href="/2024/08/09/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part3-%E7%AC%94%E8%AE%B0/P3-5%20%E2%80%9C%E6%90%9E%E2%80%9D%E5%AF%B9%E8%B1%A1/"/>
    <url>/2024/08/09/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part3-%E7%AC%94%E8%AE%B0/P3-5%20%E2%80%9C%E6%90%9E%E2%80%9D%E5%AF%B9%E8%B1%A1/</url>
    
    <content type="html"><![CDATA[<h1 id="“搞”对象"><a href="#“搞”对象" class="headerlink" title="“搞”对象"></a>“搞”对象</h1><hr><h2 id="同一个类的不同对象是独立的"><a href="#同一个类的不同对象是独立的" class="headerlink" title="同一个类的不同对象是独立的"></a>同一个类的不同对象是独立的</h2><ul><li>问题：有几个Preson对象呢？<ul><li>答案：2个<br>例子：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java">Person p1=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Person</span>();<span class="hljs-comment">//只有new出来的才是一个新的对象</span><br>p1.setAge(<span class="hljs-number">18</span>);<br>p1.setName(<span class="hljs-string">&quot;Cool&quot;</span>);<br>p1.sayHello();<br><br>Person p2=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Person</span>();<br>p2.setAge(<span class="hljs-number">88</span>);<br>p2.setName(<span class="hljs-string">&quot;X&quot;</span>);<br>p2.sayHello();<br><br>p1.sayHello();<span class="hljs-comment">//18</span><br></code></pre></td></tr></table></figure></li></ul></li></ul><h3 id="复习原始数据类型"><a href="#复习原始数据类型" class="headerlink" title="复习原始数据类型"></a>复习原始数据类型</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">int</span> i= <span class="hljs-number">10</span>;<br><span class="hljs-type">int</span> j=i;<span class="hljs-comment">//把i&quot;当前&quot;的值赋值给j</span><br>i=<span class="hljs-number">20</span>;<span class="hljs-comment">//这是i后来的值，与之前的操作没有关系</span><br>System.out.println(j);<br><br></code></pre></td></tr></table></figure><h2 id="类变量复制"><a href="#类变量复制" class="headerlink" title="类变量复制"></a>类变量复制</h2><ul><li>1、Preson p2&#x3D;p1;  变量p2指向p1”当前”所指向的对象</li><li>2、画对象关系图，分析有几个Preson类的对象<ul><li>1个</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java">Person p1=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Person</span>();<br>p1.setAge(<span class="hljs-number">18</span>);<br>p1.setName(<span class="hljs-string">&quot;Cool&quot;</span>);<br>p1.sayHello();<br>Person p2=p1;<span class="hljs-comment">//Preson p2=p1;  变量p2指向p1&quot;当前&quot;所指向的对象</span><br><span class="hljs-comment">//让p2变量指向p1&quot;当前指向的对象&quot;</span><br>p2.setAge(<span class="hljs-number">80</span>);<br>p2.setName(<span class="hljs-string">&quot;X&quot;</span>);<br>p2.sayHello();<br>p1.sayHello();<span class="hljs-comment">//结果是多少     80</span><br></code></pre></td></tr></table></figure><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240809/%E7%94%BB%E5%9B%BE1.7ax2xgky1i.webp" alt="画图1"></p><h2 id="参数变量赋值"><a href="#参数变量赋值" class="headerlink" title="参数变量赋值"></a>参数变量赋值</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <br>&#123;<br>    Person p1=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Person</span>();<br>    p1.setAge(<span class="hljs-number">18</span>);<br>    p1.setName(<span class="hljs-string">&quot;Cool&quot;</span>);<br>    p1.sayHello();<br>    test(p1);<br>    p1.sayHello();<span class="hljs-comment">//这个值是多少呢？  666 Cool</span><br>&#125;<br><span class="hljs-keyword">static</span>  <span class="hljs-keyword">void</span> <span class="hljs-title function_">test</span><span class="hljs-params">(Person p)</span><br>&#123;<br>    p.setAge(<span class="hljs-number">666</span>);<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h3><ul><li>当Person的变量又重新new了一个新对象的时候，那上次连接的对象就会断开连接，后续练习到新对象上去</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">Person</span> <span class="hljs-variable">p1</span> <span class="hljs-operator">=</span><span class="hljs-keyword">new</span> <span class="hljs-title class_">Person</span>();<br>p1.setAge(<span class="hljs-number">18</span>);<br>p1.setName(<span class="hljs-string">&quot;Cool&quot;</span>);<br>p1.sayHello();<br><br>Person p2=p1;<br>p1=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Person</span>();<br>p1.setAge(<span class="hljs-number">26</span>);<br>p1.setName(<span class="hljs-string">&quot;X&quot;</span>);<br>p1.sayHello();<span class="hljs-comment">//这个值是什么呢？  26</span><br><br>p2.sayHello();<span class="hljs-comment">//这个值是什么呢？  18</span><br></code></pre></td></tr></table></figure><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240809/%E7%94%BB%E5%9B%BE2.7p7hux8hw.webp" alt="画图2"></p>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part3</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P3-4 类的基本语法</title>
    <link href="/2024/08/09/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part3-%E7%AC%94%E8%AE%B0/P3-4%20%E7%B1%BB%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/"/>
    <url>/2024/08/09/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part3-%E7%AC%94%E8%AE%B0/P3-4%20%E7%B1%BB%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h1 id="类的基本语法"><a href="#类的基本语法" class="headerlink" title="类的基本语法"></a>类的基本语法</h1><hr><h2 id="类的基础知识"><a href="#类的基础知识" class="headerlink" title="类的基础知识"></a>类的基础知识</h2><ul><li>1、private：只能类内部访问；public：其他类也可以访问</li><li>2、类的定义由成员变量和方法组成<ul><li>方法：动作<ul><li>大多数情况都是public</li></ul></li><li>成员变量：状态<ul><li>大多数情况都是private</li></ul></li></ul></li></ul><h2 id="Java中定义一个类的语法"><a href="#Java中定义一个类的语法" class="headerlink" title="Java中定义一个类的语法"></a>Java中定义一个类的语法</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Person</span> <br>&#123;<br>    <span class="hljs-keyword">private</span>  <span class="hljs-type">int</span> age;<span class="hljs-comment">//成员变量</span><br>    <span class="hljs-keyword">private</span> String name;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setAge</span><span class="hljs-params">(<span class="hljs-type">int</span> value)</span><br>    &#123;<br>        <span class="hljs-built_in">this</span>.age = value;<span class="hljs-comment">//给当前对象赋值</span><br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setName</span><span class="hljs-params">(String value)</span><br>    &#123;<br>        <span class="hljs-built_in">this</span>.name=value;<br>    &#125;<br>    <span class="hljs-keyword">public</span>  <span class="hljs-keyword">void</span> <span class="hljs-title function_">sayHello</span><span class="hljs-params">()</span><br>    &#123;<br>        System.out.println(<span class="hljs-string">&quot;大家好，我是&quot;</span>+<span class="hljs-built_in">this</span>.name+<span class="hljs-string">&quot;,我今年&quot;</span>+<span class="hljs-built_in">this</span>.age+<span class="hljs-string">&quot;岁了。&quot;</span>);<span class="hljs-comment">//取值</span><br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">hi</span><span class="hljs-params">()</span><br>    &#123;<br>        <span class="hljs-comment">//static方法</span><br>        System.out.println(<span class="hljs-string">&quot;Hello wrold!&quot;</span>);<br>        <span class="hljs-comment">//this.age=5;  static方法中不能直接访问非static成员</span><br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="创建类的对象"><a href="#创建类的对象" class="headerlink" title="创建类的对象"></a>创建类的对象</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java">Person p1=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Person</span>();<br><span class="hljs-comment">//Preson p1:声明Preson类型的的变量p1</span><br><span class="hljs-comment">//new Person():创建Person类的一个对象 或者说是 把Preson实例化</span><br><span class="hljs-comment">//Person p1=new Person(): 1.声明Preson类型的的变量p1 2.创建Person类的一个对象 3.把变量p1指向这个对象</span><br><br></code></pre></td></tr></table></figure><h3 id="方法调用"><a href="#方法调用" class="headerlink" title="方法调用"></a>方法调用</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">p1.setAge(<span class="hljs-number">18</span>);<span class="hljs-comment">//调用p1变量“当前所指向对象”的setAge方法</span><br></code></pre></td></tr></table></figure><h2 id="类的另一种解读"><a href="#类的另一种解读" class="headerlink" title="类的另一种解读"></a>类的另一种解读</h2><ul><li>类是把对象的若干个状态(成员变量)和相关的方法聚集到一个模板中的机制</li><li>new一个类就是根据类的模板实例化出来一个对象<ul><li>不同的对象之间互不干扰</li></ul></li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240809/new.esfd7hugj.webp" alt="new"></p><h2 id="static"><a href="#static" class="headerlink" title="static"></a>static</h2><ul><li>static方法和对象无关，因此可以直接通过类名调用<ul><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240809/%E7%B1%BB%E5%90%8D%E8%B0%83%E7%94%A8.5j442hv6i4.webp" alt="类名调用"></li><li>直接用类目. 去访问static方法</li><li>用p1.hi()的话，是没有意义的，因为static方法与对象无关</li><li>static方法是不依赖于类的成员变量的</li><li>好比:String也有static方法</li><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240809/%E7%B1%BB%E7%9B%AE%E8%B0%83%E7%94%A81.3gobeg3jn1.webp" alt="类目调用1"></li></ul></li><li>非static方法需要通过对象调用<ul><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240809/%E6%96%B9%E6%B3%95%E8%B0%83%E7%94%A8.54xobmmvn0.webp" alt="方法调用"></li><li>非static方法是依赖于成员变量的，所以不能直接使用类目去调用</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">hi</span><span class="hljs-params">()</span><br>&#123;<br>    System.out.println(<span class="hljs-string">&quot;Hello wrold!&quot;</span>);<br>    <span class="hljs-comment">//this.age=5;  static方法中不能直接访问非static成员</span><br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part3</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P3-3 面向对象概念</title>
    <link href="/2024/08/09/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part3-%E7%AC%94%E8%AE%B0/P3-3%20%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E6%A6%82%E5%BF%B5/"/>
    <url>/2024/08/09/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part3-%E7%AC%94%E8%AE%B0/P3-3%20%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E6%A6%82%E5%BF%B5/</url>
    
    <content type="html"><![CDATA[<h1 id="面向对象概念"><a href="#面向对象概念" class="headerlink" title="面向对象概念"></a>面向对象概念</h1><hr><blockquote><p>说明<br>1、for、while、变量、方法、数组等这些都是“面向过程”的语法，Java还提供了“面向对象”的语法。“面向对象”不是用来替代“面向过程”的，而是一个升华和补充。<br>2、初学者不可能完全搞明白“面向对象”，搞明白语法即可</p></blockquote><h2 id="类和对象"><a href="#类和对象" class="headerlink" title="类和对象"></a>类和对象</h2><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240809/%E7%B1%BB%E5%92%8C%E5%AF%B9%E8%B1%A1.7sn4ltpwvd.webp" alt="类和对象"></p><h2 id="对象发送消息"><a href="#对象发送消息" class="headerlink" title="对象发送消息"></a>对象发送消息</h2><ul><li>消息：不同的对象之间可以互相发送“消息”<ul><li>好比下面这张图！</li><li>关羽是对象(人类的实例)；马也是对象（动物类中马的实例）</li><li>比如关羽可以向马 发出消息：驾、驾、驾 ；冲….</li></ul></li><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240809/%E5%AF%B9%E8%B1%A1.58ha96rtto.webp" alt="对象"></li></ul><h2 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h2><ul><li>马自身把步伐、呼吸、进食等“封装”起来。其他的对象可以向马发送消息<ul><li>比如发送：喝水，追等</li></ul></li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240809/%E5%B0%81%E8%A3%85.7i0asoiaz5.webp" alt="封装"></p><h2 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h2><ul><li>不同的“马”类对应的实例属性都不相同</li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240809/%E5%B1%9E%E6%80%A7.45hkyb2i12.webp" alt="属性"></p><h2 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h2><ul><li>继承是用来简化类型声明的</li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240809/%E7%BB%A7%E6%89%BF.73tv1t2duw.webp" alt="继承"></p>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part3</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P3-2 方法的返回值</title>
    <link href="/2024/08/09/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part3-%E7%AC%94%E8%AE%B0/P3-2%20%E6%96%B9%E6%B3%95%E7%9A%84%E8%BF%94%E5%9B%9E%E5%80%BC/"/>
    <url>/2024/08/09/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part3-%E7%AC%94%E8%AE%B0/P3-2%20%E6%96%B9%E6%B3%95%E7%9A%84%E8%BF%94%E5%9B%9E%E5%80%BC/</url>
    
    <content type="html"><![CDATA[<h1 id="方法的返回值"><a href="#方法的返回值" class="headerlink" title="方法的返回值"></a>方法的返回值</h1><hr><h2 id="return"><a href="#return" class="headerlink" title="return"></a>return</h2><ul><li>1、对于有返回值方法，需要显示指定返回值类型，这类方法的返回值通过return语句给出结果</li><li>2、对于没有返回值的方法，要想结束方法，直接用return;就可以。return下面的语句将不再执行<ul><li>用来终止当前函数&#x2F;方法</li></ul></li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240809/return.51e2dpaj44.webp" alt="return"></p><h3 id="常见问题1"><a href="#常见问题1" class="headerlink" title="常见问题1"></a>常见问题1</h3><ul><li>1、如果方法有返回值，则return后的数据类型必须和返回值的类型一致。并且在所有情况下，方法都要返回数据</li></ul><h3 id="常见问题2"><a href="#常见问题2" class="headerlink" title="常见问题2"></a>常见问题2</h3><ul><li>return只是结束当前的方法，并不会结束程序；只有main方法执行完成后，程序才会结束</li></ul><hr><h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><ul><li>1、计算两个数的和，有返回值</li><li>2、计算给定的两个数中的最大值，有返回值</li><li>3、接收一个文本文件名，读取并输出文件的内容，如果文件不存在，则输出“文件不存在”，无返回值</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//计算两个数的和，有返回值   </span><br><span class="hljs-keyword">static</span> <span class="hljs-type">int</span> <span class="hljs-title function_">sum</span><span class="hljs-params">(<span class="hljs-type">int</span> i1,<span class="hljs-type">int</span> i2)</span><br>&#123;<br>    <span class="hljs-keyword">return</span> i1+i2;<br>&#125;<br></code></pre></td></tr></table></figure><hr><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs java"> <span class="hljs-comment">//计算给定的两个数中的最大值，有返回值</span><br><span class="hljs-keyword">static</span> <span class="hljs-type">int</span> <span class="hljs-title function_">compare</span><span class="hljs-params">(<span class="hljs-type">int</span> i1,<span class="hljs-type">int</span> i2)</span><br>&#123;<br>    <span class="hljs-keyword">if</span> (i1&gt;i2)<br>    &#123;<br>        System.out.println(<span class="hljs-string">&quot;最大值为：&quot;</span>+i1);<br>        <span class="hljs-keyword">return</span> i1;<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        System.out.println(<span class="hljs-string">&quot;最大值为：&quot;</span>+i2);<br>        <span class="hljs-keyword">return</span> i2;<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><hr><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//接收一个文本文件名，读取并输出文件的内容，如果文件不存在，则输出“文件不存在”</span><br><span class="hljs-keyword">static</span>  <span class="hljs-keyword">void</span> <span class="hljs-title function_">outPut</span><span class="hljs-params">(String  filename)</span><br>&#123;<br><span class="hljs-type">File</span> <span class="hljs-variable">file</span> <span class="hljs-operator">=</span><span class="hljs-keyword">new</span> <span class="hljs-title class_">File</span>(filename);<br><span class="hljs-comment">/*if (file.exists()==false)//这个文件是否存在。if(!file.exists()) 另外一种写法</span><br><span class="hljs-comment">&#123;</span><br><span class="hljs-comment">    System.out.println(&quot;文件不存在&quot;);</span><br><span class="hljs-comment">&#125;</span><br><span class="hljs-comment">else</span><br><span class="hljs-comment">&#123;</span><br><span class="hljs-comment">    String s = IOHelpers.readAllText(file);</span><br><span class="hljs-comment">    System.out.println(s);</span><br><span class="hljs-comment">&#125;*/</span><br><br>&#125;<br></code></pre></td></tr></table></figure><hr><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//这一种写法也可以</span><br><span class="hljs-keyword">if</span> (file.exists()==<span class="hljs-literal">false</span>)<span class="hljs-comment">//这个文件是否存在。if(!file.exists()) 另外一种写法</span><br>&#123;<br>    System.out.println(<span class="hljs-string">&quot;文件不存在&quot;</span>);<br>    <span class="hljs-keyword">return</span>;<br>&#125;<br>    <span class="hljs-type">String</span> <span class="hljs-variable">s</span> <span class="hljs-operator">=</span> IOHelpers.readAllText(file);<br>    System.out.println(s);<br><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part3</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P3-1 编写自己的方法</title>
    <link href="/2024/08/09/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part3-%E7%AC%94%E8%AE%B0/P3-1%20%E7%BC%96%E5%86%99%E8%87%AA%E5%B7%B1%E7%9A%84%E6%96%B9%E6%B3%95/"/>
    <url>/2024/08/09/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part3-%E7%AC%94%E8%AE%B0/P3-1%20%E7%BC%96%E5%86%99%E8%87%AA%E5%B7%B1%E7%9A%84%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h1 id="编写自己的方法"><a href="#编写自己的方法" class="headerlink" title="编写自己的方法"></a>编写自己的方法</h1><hr><blockquote><p>开始学习更多Java语法：编写方法、类、JavaBean、简单的继承？Integer和int等；List、Map等，简单的泛型<br>这部分内容不能拿，但是枯燥，而且“这有啥用？”</p></blockquote><h2 id="复习：方法"><a href="#复习：方法" class="headerlink" title="复习：方法"></a>复习：方法</h2><ul><li>1、方法：一段可以重复使用的代码。相当于一个“命令”、“积木块”</li><li>2、方法由“名字”、“参数”、“返回值”组成</li><li>3、方法既可以由参数，也可以没有参数</li><li>4、方法既可以由返回值，也可以没有返回值</li><li>5、方法可以由多个重名的“重载方法”</li></ul><h2 id="定义自己的方法"><a href="#定义自己的方法" class="headerlink" title="定义自己的方法"></a>定义自己的方法</h2><ul><li>1、从“使用”到“创造”<ul><li>从学习使用别人的方法–&gt;自己有写方法的能力，而不是一味的只会使用别人的；当别人写的方法满足不了的时候，就需要自己去创造了</li></ul></li><li>2、方法的一般格式：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">static</span> 返回类型名 方法名(参数列表)<br>&#123;<br>    语句;<span class="hljs-comment">//方法体</span><br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>如果方法没有返回值，可以将类型名写为void</p></blockquote><h3 id="常见问题1"><a href="#常见问题1" class="headerlink" title="常见问题1"></a>常见问题1</h3><ul><li>赋值的顺序的与参数的顺序有关，与变量名无关</li><li>主要看调用方法时的填写的参数顺序</li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240809/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%981.13lowzn8k8.webp" alt="常见问题1"></p><h3 id="常见问题2"><a href="#常见问题2" class="headerlink" title="常见问题2"></a>常见问题2</h3><ul><li>定义在方法内部的变量为局部变量<ul><li>出了方法就用不了这个变量了</li></ul></li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240809/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%982.3d4pgh7z15.webp" alt="常见问题2"></p><h3 id="常见问题3"><a href="#常见问题3" class="headerlink" title="常见问题3"></a>常见问题3</h3><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240809/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%983.60u5quivrm.webp" alt="常见问题3"></p>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part3</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P2-13 案例：计算星座</title>
    <link href="/2024/08/07/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part2-%E7%AC%94%E8%AE%B0/P2-13%20%E6%A1%88%E4%BE%8B%EF%BC%9A%E8%AE%A1%E7%AE%97%E6%98%9F%E5%BA%A7/"/>
    <url>/2024/08/07/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part2-%E7%AC%94%E8%AE%B0/P2-13%20%E6%A1%88%E4%BE%8B%EF%BC%9A%E8%AE%A1%E7%AE%97%E6%98%9F%E5%BA%A7/</url>
    
    <content type="html"><![CDATA[<h1 id="案例：计算星座"><a href="#案例：计算星座" class="headerlink" title="案例：计算星座"></a>案例：计算星座</h1><hr><h2 id="需求说明"><a href="#需求说明" class="headerlink" title="需求说明"></a>需求说明</h2><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240807/12-%E9%9C%80%E6%B1%82.esfa7oj2u.webp" alt="12-需求"></p><blockquote><p>思路分析<br>1.弹出一个窗口，让用户去选择公历生日<br>2.用年月日去接收生日数据<br>3.用if去判断月份，然后进行输出，<br>4.弹出提示用户是什么星座的</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//转换成日期的判断，简单一点</span><br><span class="hljs-type">LocalDate</span> <span class="hljs-variable">date</span> <span class="hljs-operator">=</span> GUI.dateBox(<span class="hljs-string">&quot;请选择你的生日&quot;</span>);<br><span class="hljs-type">int</span> <span class="hljs-variable">month</span> <span class="hljs-operator">=</span> date.getMonthValue();<span class="hljs-comment">//获取月份</span><br><span class="hljs-type">int</span> <span class="hljs-variable">day</span> <span class="hljs-operator">=</span> date.getDayOfMonth();<span class="hljs-comment">//获取第几天</span><br><span class="hljs-type">int</span> <span class="hljs-variable">sum</span> <span class="hljs-operator">=</span> month*<span class="hljs-number">100</span>+day;<br>System.out.println(sum);<br><br><span class="hljs-keyword">if</span> (sum&gt;=<span class="hljs-number">120</span>&amp;&amp;sum&lt;=<span class="hljs-number">218</span>)<br>&#123;<br>    GUI.msgBox(<span class="hljs-string">&quot;你是水瓶座&quot;</span>);<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (sum&gt;=<span class="hljs-number">219</span>&amp;&amp;sum&lt;=<span class="hljs-number">320</span>)<br>&#123;<br>    GUI.msgBox(<span class="hljs-string">&quot;你是双鱼座&quot;</span>);<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (sum&gt;=<span class="hljs-number">321</span>&amp;&amp;sum&lt;=<span class="hljs-number">419</span>)<br>&#123;<br>    GUI.msgBox(<span class="hljs-string">&quot;你是白羊座&quot;</span>);<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (sum&gt;=<span class="hljs-number">420</span>&amp;&amp;sum&lt;=<span class="hljs-number">520</span>)<br>&#123;<br>    GUI.msgBox(<span class="hljs-string">&quot;你是金牛座&quot;</span>);<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (sum&gt;=<span class="hljs-number">521</span>&amp;&amp;sum&lt;=<span class="hljs-number">621</span>)<br>&#123;<br>    GUI.msgBox(<span class="hljs-string">&quot;你是双子座&quot;</span>);<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (sum&gt;=<span class="hljs-number">622</span>&amp;&amp;sum&lt;=<span class="hljs-number">722</span>)<br>&#123;<br>    GUI.msgBox(<span class="hljs-string">&quot;你是巨蟹座&quot;</span>);<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (sum&gt;=<span class="hljs-number">723</span>&amp;&amp;sum&lt;=<span class="hljs-number">822</span>)<br>&#123;<br>    GUI.msgBox(<span class="hljs-string">&quot;你是狮子座&quot;</span>);<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (sum&gt;=<span class="hljs-number">823</span>&amp;&amp;sum&lt;=<span class="hljs-number">922</span>)<br>&#123;<br>    GUI.msgBox(<span class="hljs-string">&quot;你是处女座&quot;</span>);<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (sum&gt;=<span class="hljs-number">923</span>&amp;&amp;sum&lt;=<span class="hljs-number">1023</span>)<br>&#123;<br>    GUI.msgBox(<span class="hljs-string">&quot;你是天秤座&quot;</span>);<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (sum&gt;=<span class="hljs-number">1024</span>&amp;&amp;sum&lt;=<span class="hljs-number">1121</span>)<br>&#123;<br>    GUI.msgBox(<span class="hljs-string">&quot;你是天蝎座&quot;</span>);<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (sum&gt;=<span class="hljs-number">1122</span>&amp;&amp;sum&lt;=<span class="hljs-number">1221</span>)<br>&#123;<br>    GUI.msgBox(<span class="hljs-string">&quot;你是射手座&quot;</span>);<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>    GUI.msgBox(<span class="hljs-string">&quot;你是魔羯座&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><hr><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//月份比较</span><br><span class="hljs-type">LocalDate</span> <span class="hljs-variable">date</span> <span class="hljs-operator">=</span> GUI.dateBox(<span class="hljs-string">&quot;请选择你的生日&quot;</span>);<br><span class="hljs-type">int</span> <span class="hljs-variable">month</span> <span class="hljs-operator">=</span> date.getMonthValue();<span class="hljs-comment">//获取月</span><br><span class="hljs-type">int</span> <span class="hljs-variable">day</span> <span class="hljs-operator">=</span> date.getDayOfMonth();<span class="hljs-comment">//获取</span><br><br><span class="hljs-keyword">if</span> (month==<span class="hljs-number">1</span>)<br>&#123;<br>    <span class="hljs-keyword">if</span> (day&gt;=<span class="hljs-number">20</span>)<br>    &#123;<br>        GUI.msgBox(<span class="hljs-string">&quot;你是水瓶座&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        GUI.msgBox(<span class="hljs-string">&quot;你是魔羯座&quot;</span>);<br>    &#125;<br><br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (month==<span class="hljs-number">2</span>)<br>&#123;<br>    <span class="hljs-keyword">if</span> (day&gt;=<span class="hljs-number">19</span>)<br>    &#123;<br>        GUI.msgBox(<span class="hljs-string">&quot;你是双鱼座&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        GUI.msgBox(<span class="hljs-string">&quot;你是水瓶座&quot;</span>);<br>    &#125;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (month==<span class="hljs-number">3</span>)<br>&#123;<br>    <span class="hljs-keyword">if</span> (day&gt;=<span class="hljs-number">21</span>)<br>    &#123;<br>        GUI.msgBox(<span class="hljs-string">&quot;你是白羊座&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        GUI.msgBox(<span class="hljs-string">&quot;你是双鱼座&quot;</span>);<br>    &#125;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (month==<span class="hljs-number">4</span>)<br>&#123;<br>    <span class="hljs-keyword">if</span> (day&gt;=<span class="hljs-number">20</span>)<br>    &#123;<br>        GUI.msgBox(<span class="hljs-string">&quot;你是金牛座&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        GUI.msgBox(<span class="hljs-string">&quot;你是白羊座&quot;</span>);<br>    &#125;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (month==<span class="hljs-number">5</span>)<br>&#123;<br>    <span class="hljs-keyword">if</span> (day&gt;=<span class="hljs-number">21</span>)<br>    &#123;<br>        GUI.msgBox(<span class="hljs-string">&quot;你是双子座&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        GUI.msgBox(<span class="hljs-string">&quot;你是金牛座&quot;</span>);<br>    &#125;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (month==<span class="hljs-number">6</span>)<br>&#123;<br>    <span class="hljs-keyword">if</span> (day&gt;=<span class="hljs-number">22</span>)<br>    &#123;<br>        GUI.msgBox(<span class="hljs-string">&quot;你是巨蟹座&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        GUI.msgBox(<span class="hljs-string">&quot;你是双子座&quot;</span>);<br>    &#125;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (month==<span class="hljs-number">7</span>)<br>&#123;<br>    <span class="hljs-keyword">if</span> (day&gt;=<span class="hljs-number">23</span>)<br>    &#123;<br>        GUI.msgBox(<span class="hljs-string">&quot;你是狮子座&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        GUI.msgBox(<span class="hljs-string">&quot;你是巨蟹座&quot;</span>);<br>    &#125;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (month==<span class="hljs-number">8</span>)<br>&#123;<br>    <span class="hljs-keyword">if</span> (day&gt;=<span class="hljs-number">23</span>)<br>    &#123;<br>        GUI.msgBox(<span class="hljs-string">&quot;你是处女座&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        GUI.msgBox(<span class="hljs-string">&quot;你是狮子座&quot;</span>);<br>    &#125;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (month==<span class="hljs-number">9</span>)<br>&#123;<br>    <span class="hljs-keyword">if</span> (day&gt;=<span class="hljs-number">23</span>)<br>    &#123;<br>        GUI.msgBox(<span class="hljs-string">&quot;你是天秤座&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        GUI.msgBox(<span class="hljs-string">&quot;你是处女座&quot;</span>);<br>    &#125;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (month==<span class="hljs-number">10</span>)<br>&#123;<br>    <span class="hljs-keyword">if</span> (day&gt;=<span class="hljs-number">24</span>)<br>    &#123;<br>        GUI.msgBox(<span class="hljs-string">&quot;你是天蝎座&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        GUI.msgBox(<span class="hljs-string">&quot;你是天秤座&quot;</span>);<br>    &#125;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (month==<span class="hljs-number">11</span>)<br>&#123;<br>    <span class="hljs-keyword">if</span> (day&gt;=<span class="hljs-number">22</span>)<br>    &#123;<br>        GUI.msgBox(<span class="hljs-string">&quot;你是射手座&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        GUI.msgBox(<span class="hljs-string">&quot;你是天蝎座&quot;</span>);<br>    &#125;<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>    <span class="hljs-keyword">if</span> (day&gt;=<span class="hljs-number">22</span>)<br>    &#123;<br>        GUI.msgBox(<span class="hljs-string">&quot;你是魔羯座&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        GUI.msgBox(<span class="hljs-string">&quot;你是射手座&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part2</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P2-12    案例：统计字数</title>
    <link href="/2024/08/07/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part2-%E7%AC%94%E8%AE%B0/P2-12%20%E6%A1%88%E4%BE%8B%EF%BC%9A%E7%BB%9F%E8%AE%A1%E5%AD%97%E6%95%B0/"/>
    <url>/2024/08/07/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part2-%E7%AC%94%E8%AE%B0/P2-12%20%E6%A1%88%E4%BE%8B%EF%BC%9A%E7%BB%9F%E8%AE%A1%E5%AD%97%E6%95%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="案例：统计英语单词个数"><a href="#案例：统计英语单词个数" class="headerlink" title="案例：统计英语单词个数"></a>案例：统计英语单词个数</h1><hr><h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><ul><li>1、让用户选择一个文件夹</li><li>2、程序扫描文件夹下所有的txt文件，统计总的“英文单词个数”</li></ul><p><strong>思路(写编程前一定要有思路)</strong><br>然后遇到问题就<strong>逢山开道，遇水搭桥</strong></p><blockquote><p>1.弹出一个文件夹选择对话框，让用户去选择<br>2.扫描文件夹下所有的txt文件，有可能是文件夹后代都需要扫描<br>3.统计每一个txt文件中的英文单词个数，统计完txt文件后在相加 即可</p></blockquote><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240807/%E6%80%9D%E8%B7%AF%E5%88%86%E6%9E%90.2h87y2we9g.webp" alt="思路分析"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//自己写的，难点就是正则表达式</span><br><span class="hljs-type">String</span> <span class="hljs-variable">srcdir</span> <span class="hljs-operator">=</span> GUI.dirOpenBox(<span class="hljs-string">&quot;请选择源文件夹&quot;</span>);<br>String[] files = IOHelpers.getFilesRecursively(srcdir,<span class="hljs-string">&quot;txt&quot;</span>);<span class="hljs-comment">//遍历出txt文件</span><br><span class="hljs-type">int</span> <span class="hljs-variable">sum</span> <span class="hljs-operator">=</span><span class="hljs-number">0</span>;<span class="hljs-comment">//单词总个数</span><br><span class="hljs-keyword">for</span> (String file:files)<br>&#123;<br>    <span class="hljs-type">String</span> <span class="hljs-variable">str</span> <span class="hljs-operator">=</span> IOHelpers.readAllText(file);<span class="hljs-comment">//读取txt文件内容</span><br>    String[] strs = str.split(<span class="hljs-string">&quot;\\s|\\.|\\?|\\!|,&quot;</span>);<span class="hljs-comment">//分割成单个单词</span><br>    <span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> strs.length;<br>    sum =sum+i;<br>&#125;<br>System.out.println(<span class="hljs-string">&quot;这个文件夹下&quot;</span>+srcdir+<span class="hljs-string">&quot;一共有&quot;</span>+sum+<span class="hljs-string">&quot;个单词&quot;</span>);<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part2</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P2-11 案例：拷贝文件夹</title>
    <link href="/2024/08/06/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part2-%E7%AC%94%E8%AE%B0/P2-11%20%E6%A1%88%E4%BE%8B%EF%BC%9A%E6%8B%B7%E8%B4%9D%E6%96%87%E4%BB%B6%E5%A4%B9/"/>
    <url>/2024/08/06/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part2-%E7%AC%94%E8%AE%B0/P2-11%20%E6%A1%88%E4%BE%8B%EF%BC%9A%E6%8B%B7%E8%B4%9D%E6%96%87%E4%BB%B6%E5%A4%B9/</url>
    
    <content type="html"><![CDATA[<h1 id="案例：拷贝文件夹"><a href="#案例：拷贝文件夹" class="headerlink" title="案例：拷贝文件夹"></a>案例：拷贝文件夹</h1><hr><h2 id="需求说明"><a href="#需求说明" class="headerlink" title="需求说明"></a>需求说明</h2><ul><li>1、让用户分别选择源文件夹和目标文件夹，然后把源文件夹所有文件都拷贝到目标文件夹</li><li>2、考虑文件可能会很多，所以要显示拷贝进度</li></ul><blockquote><p>思路<br>1.弹出选择源文件夹<br>2.弹出选择目标文件夹<br>3.把源文件夹所有文件拷贝到目标文件夹<br>4.要显示拷贝进度（因为文件有可能会很多）</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">String</span> <span class="hljs-variable">srcdir</span> <span class="hljs-operator">=</span> GUI.dirOpenBox(<span class="hljs-string">&quot;请选择源文件夹&quot;</span>);<br><span class="hljs-type">String</span> <span class="hljs-variable">destdir</span> <span class="hljs-operator">=</span> GUI.dirSaveBox(<span class="hljs-string">&quot;请选择目标文件夹&quot;</span>);<br><span class="hljs-type">File</span> <span class="hljs-variable">srcFile</span> <span class="hljs-operator">=</span><span class="hljs-keyword">new</span> <span class="hljs-title class_">File</span>(srcdir);<br>File[] files = srcFile.listFiles();<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span><span class="hljs-number">0</span>;i&lt; files.length;i++)<span class="hljs-comment">//用到序号，for循环好找</span><br>&#123;<br>    <span class="hljs-type">File</span> <span class="hljs-variable">file</span> <span class="hljs-operator">=</span> files[i];<br>    <span class="hljs-keyword">if</span> (file.isDirectory())<br>    &#123;<br>        <span class="hljs-keyword">continue</span>;<br>    &#125;<br>    GUI.showProgressDialog(<span class="hljs-string">&quot;正在拷贝&quot;</span>+file.getName(),i,files.length);<br>    <span class="hljs-type">String</span> <span class="hljs-variable">destFilename</span> <span class="hljs-operator">=</span> destdir+<span class="hljs-string">&quot;/&quot;</span>+file.getName();<br>    <span class="hljs-type">byte</span>[] bytes = IOHelpers.readAllBytes(file);<span class="hljs-comment">//读取路径文件的内容</span><br>    IOHelpers.writeAllBytes(destFilename,bytes);<span class="hljs-comment">//写入目标文件夹</span><br>&#125;<br>GUI.closeProgressDialog();<br>GUI.msgBox(<span class="hljs-string">&quot;搞定&quot;</span>);<br><br></code></pre></td></tr></table></figure><p>分析</p><ul><li>最佳写法肯定选择for循环，因为要有进度条，用序号去搞进度条</li><li>后面也有for增强的写法，但工作中很少看到</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">String</span> <span class="hljs-variable">srcdir</span> <span class="hljs-operator">=</span> GUI.dirOpenBox(<span class="hljs-string">&quot;请选择源文件夹&quot;</span>);<br><span class="hljs-type">String</span> <span class="hljs-variable">destdir</span> <span class="hljs-operator">=</span> GUI.dirSaveBox(<span class="hljs-string">&quot;请选择目标文件夹&quot;</span>);<br><span class="hljs-type">int</span> i= <span class="hljs-number">0</span>;<span class="hljs-comment">//序号</span><br><span class="hljs-type">File</span> <span class="hljs-variable">srcFile</span> <span class="hljs-operator">=</span><span class="hljs-keyword">new</span> <span class="hljs-title class_">File</span>(srcdir);<br>File[] files = srcFile.listFiles();<br><span class="hljs-keyword">for</span> (File file :srcFile.listFiles())<br>&#123;<br>    <span class="hljs-keyword">if</span> (file.isDirectory())<br>    &#123;<br>        <span class="hljs-keyword">continue</span>;<br>    &#125;<br>    GUI.showProgressDialog(<span class="hljs-string">&quot;正在拷贝&quot;</span>+file.getName(),i,files.length);<br>    <span class="hljs-type">String</span> <span class="hljs-variable">destFilename</span> <span class="hljs-operator">=</span> destdir+<span class="hljs-string">&quot;/&quot;</span>+file.getName();<br>    <span class="hljs-type">byte</span>[] bytes = IOHelpers.readAllBytes(file);<span class="hljs-comment">//读取路径文件的内容</span><br>    IOHelpers.writeAllBytes(destFilename,bytes);<span class="hljs-comment">//写入目标文件夹</span><br>    i++;<span class="hljs-comment">//序号自增</span><br>&#125;<br>GUI.closeProgressDialog();<br>GUI.msgBox(<span class="hljs-string">&quot;搞定&quot;</span>);<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part2</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P2-10  案例：保存用户信息到文件</title>
    <link href="/2024/08/06/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part2-%E7%AC%94%E8%AE%B0/P2-10%20%E6%A1%88%E4%BE%8B%EF%BC%9A%E4%BF%9D%E5%AD%98%E7%94%A8%E6%88%B7%E4%BF%A1%E6%81%AF%E5%88%B0%E6%96%87%E4%BB%B6/"/>
    <url>/2024/08/06/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part2-%E7%AC%94%E8%AE%B0/P2-10%20%E6%A1%88%E4%BE%8B%EF%BC%9A%E4%BF%9D%E5%AD%98%E7%94%A8%E6%88%B7%E4%BF%A1%E6%81%AF%E5%88%B0%E6%96%87%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<h1 id="案例：保存用户信息到文件"><a href="#案例：保存用户信息到文件" class="headerlink" title="案例：保存用户信息到文件"></a>案例：保存用户信息到文件</h1><hr><h2 id="GUI案例"><a href="#GUI案例" class="headerlink" title="GUI案例"></a>GUI案例</h2><ul><li>1、首先提示选择一个文件夹</li><li>2、然后用户输入个人信息，保存到文件，以姓名为文件名保存到第一步的文件夹下，保存完一个后，提示是否继续输入，如果继续输入，则重复2；如果不继续则程序结束。</li></ul><blockquote><p>思路<br>1.先提示选择文件夹<br>2.让用户输入个人信息，比如：姓名，身高，体重，手机号。输入完成后保存到指定的文件夹的文件中<br>3.提示是否继续输入信息， 继续输入则重复，不继续则程序结束</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//自己写的</span><br><span class="hljs-type">String</span> <span class="hljs-variable">fileName</span> <span class="hljs-operator">=</span> GUI.dirOpenBox(<span class="hljs-string">&quot;请选择保存的文件夹&quot;</span>);<span class="hljs-comment">//获取文件夹路径</span><br>String Tips=<span class="hljs-string">&quot;继续&quot;</span>;<br><span class="hljs-keyword">while</span> (Tips.equals(<span class="hljs-string">&quot;继续&quot;</span>))<br>&#123;<br>    String[] strs = GUI.multiInputBox(<span class="hljs-string">&quot;请输入您的个人信息，我这边帮您注册&quot;</span>,<span class="hljs-string">&quot;姓名&quot;</span>,<span class="hljs-string">&quot;手机号&quot;</span>,<span class="hljs-string">&quot;账号&quot;</span>,<span class="hljs-string">&quot;密码&quot;</span>);<br>    <span class="hljs-type">String</span> <span class="hljs-variable">name</span> <span class="hljs-operator">=</span>strs[<span class="hljs-number">0</span>];<br>    <span class="hljs-type">String</span> <span class="hljs-variable">phone</span> <span class="hljs-operator">=</span> strs[<span class="hljs-number">1</span>];<br>    String 账号 = strs[<span class="hljs-number">2</span>];<br>    <span class="hljs-type">String</span> <span class="hljs-variable">password</span> <span class="hljs-operator">=</span> strs[<span class="hljs-number">3</span>];<br>    <span class="hljs-type">String</span> <span class="hljs-variable">msg</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;姓名：&quot;</span>+name+<span class="hljs-string">&quot;\n&quot;</span>+<br>            <span class="hljs-string">&quot;手机号：&quot;</span>+phone+<span class="hljs-string">&quot;\n&quot;</span>+<br>            <span class="hljs-string">&quot;账号：&quot;</span>+账号+<span class="hljs-string">&quot;\n&quot;</span>+<br>            <span class="hljs-string">&quot;密码:&quot;</span>+password;<br>    <span class="hljs-type">String</span> <span class="hljs-variable">outputFileName</span> <span class="hljs-operator">=</span> fileName+<span class="hljs-string">&quot;/&quot;</span>+name+<span class="hljs-string">&quot;.txt&quot;</span>;<br>    IOHelpers.writeAllText(outputFileName,msg);<br>    Tips= GUI.buttonsBox(<span class="hljs-string">&quot;是否继续录入信息？&quot;</span>,<span class="hljs-string">&quot;继续&quot;</span>,<span class="hljs-string">&quot;不继续&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>分析</p><ul><li>1.这种选择不是最佳的选择</li><li>2.账号的变量最好是英文</li><li>3.Tips变量的多余</li></ul><hr><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">do</span> &#123;<br>        String[] strs = GUI.multiInputBox(<span class="hljs-string">&quot;请输入您的个人信息，我这边帮您注册&quot;</span>,<span class="hljs-string">&quot;姓名&quot;</span>,<span class="hljs-string">&quot;手机号&quot;</span>,<span class="hljs-string">&quot;账号&quot;</span>,<span class="hljs-string">&quot;密码&quot;</span>);<br>        <span class="hljs-type">String</span> <span class="hljs-variable">name</span> <span class="hljs-operator">=</span>strs[<span class="hljs-number">0</span>];<br>        <span class="hljs-type">String</span> <span class="hljs-variable">phone</span> <span class="hljs-operator">=</span> strs[<span class="hljs-number">1</span>];<br>        <span class="hljs-type">String</span> <span class="hljs-variable">account</span> <span class="hljs-operator">=</span> strs[<span class="hljs-number">2</span>];<br>        <span class="hljs-type">String</span> <span class="hljs-variable">password</span> <span class="hljs-operator">=</span> strs[<span class="hljs-number">3</span>];<br>        <span class="hljs-type">String</span> <span class="hljs-variable">msg</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;姓名：&quot;</span>+name+<span class="hljs-string">&quot;\n&quot;</span>+<br>                <span class="hljs-string">&quot;手机号：&quot;</span>+phone+<span class="hljs-string">&quot;\n&quot;</span>+<br>                <span class="hljs-string">&quot;账号：&quot;</span>+account+<span class="hljs-string">&quot;\n&quot;</span>+<br>                <span class="hljs-string">&quot;密码:&quot;</span>+password;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">outputFileName</span> <span class="hljs-operator">=</span> fileName+<span class="hljs-string">&quot;/&quot;</span>+name+<span class="hljs-string">&quot;.txt&quot;</span>;<br>        IOHelpers.writeAllText(outputFileName,msg);<br>    &#125;<br>    <span class="hljs-keyword">while</span> (GUI.yesNoBox(<span class="hljs-string">&quot;要继续吗&quot;</span>));<br></code></pre></td></tr></table></figure><p>分析</p><ul><li>1.do while 在这个场景很合适<ul><li>因为用户肯定要有第一次输入的场景，所以先执行，后在进行判断是否继续输入</li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part2</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P2-9 案例：标准体重计算器</title>
    <link href="/2024/08/06/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part2-%E7%AC%94%E8%AE%B0/P2-9%20%E6%A1%88%E4%BE%8B%EF%BC%9A%E6%A0%87%E5%87%86%E4%BD%93%E9%87%8D%E8%AE%A1%E7%AE%97%E5%99%A8/"/>
    <url>/2024/08/06/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part2-%E7%AC%94%E8%AE%B0/P2-9%20%E6%A1%88%E4%BE%8B%EF%BC%9A%E6%A0%87%E5%87%86%E4%BD%93%E9%87%8D%E8%AE%A1%E7%AE%97%E5%99%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="案例：标准体重计算器"><a href="#案例：标准体重计算器" class="headerlink" title="案例：标准体重计算器"></a>案例：标准体重计算器</h1><hr><h2 id="需求说明"><a href="#需求说明" class="headerlink" title="需求说明"></a>需求说明</h2><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240806/GUI%E9%9C%80%E6%B1%82%E8%AF%B4%E6%98%8E1.45lfkqqgg.webp" alt="GUI需求说明1"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs java">String 性别 = GUI.buttonsBox(<span class="hljs-string">&quot;请选择你的性别&quot;</span>,<span class="hljs-string">&quot;男性&quot;</span>,<span class="hljs-string">&quot;女性&quot;</span>);<br><span class="hljs-type">double</span> 身高 = GUI.doubleBox(<span class="hljs-string">&quot;请输入你的身高（cm）&quot;</span>);<br><span class="hljs-type">double</span> 体重 = GUI.doubleBox(<span class="hljs-string">&quot;请输入你的体重（kg）&quot;</span>);<br><span class="hljs-keyword">if</span> (性别.equals(<span class="hljs-string">&quot;男性&quot;</span>))<br>&#123;<br>    <span class="hljs-comment">//男性：标准体重=（身高cm-80）*70%</span><br>    <span class="hljs-type">double</span> 标准体重 = (身高-<span class="hljs-number">80</span>)*<span class="hljs-number">0.70</span>;<br>    <span class="hljs-comment">//String newtizhong = String.format(&quot;%.2f&quot;,tizhong);//doubel保留两位小数</span><br>    <span class="hljs-comment">//double result = Double.parseDouble(newtizhong);</span><br>    <span class="hljs-type">double</span> 和标准体重的差 =((体重-标准体重)/标准体重)*<span class="hljs-number">100</span>;<br>    <span class="hljs-keyword">if</span> (和标准体重的差&lt;=<span class="hljs-number">10</span>||和标准体重的差&gt;=-<span class="hljs-number">10</span>)<br>    &#123;<br>        System.out.println(<span class="hljs-string">&quot;体重为正常&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (和标准体重的差&gt;<span class="hljs-number">10</span>&amp;&amp;和标准体重的差&lt;=<span class="hljs-number">20</span>)<br>    &#123;<br>        System.out.println(<span class="hljs-string">&quot;体重为偏胖&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (和标准体重的差&lt;-<span class="hljs-number">10</span>&amp;&amp;和标准体重的差&gt;-<span class="hljs-number">20</span>)<br>    &#123;<br>        System.out.println(<span class="hljs-string">&quot;体重为偏瘦&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (和标准体重的差&gt;<span class="hljs-number">20</span>)<br>    &#123;<br>        System.out.println(<span class="hljs-string">&quot;体重为肥胖&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (和标准体重的差&lt;-<span class="hljs-number">20</span>)<br>    &#123;<br>        System.out.println(<span class="hljs-string">&quot;体重为瘦弱&quot;</span>);<br>    &#125;<br><br><br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (性别.equals(<span class="hljs-string">&quot;女性&quot;</span>))<br>&#123;<br>    <span class="hljs-comment">//女性：标准体重=（身高cm-70）*60%</span><br><br>    <span class="hljs-type">double</span> 标准体重 = (身高-<span class="hljs-number">70</span>)*<span class="hljs-number">0.60</span>;<br>    <span class="hljs-type">double</span> 和标准体重的差 =((体重-标准体重)/标准体重)*<span class="hljs-number">100</span>;<br>    <span class="hljs-keyword">if</span> (和标准体重的差&lt;=<span class="hljs-number">10</span>||和标准体重的差&gt;=-<span class="hljs-number">10</span>)<br>    &#123;<br>        System.out.println(<span class="hljs-string">&quot;体重为正常&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (和标准体重的差&gt;<span class="hljs-number">10</span>&amp;&amp;和标准体重的差&lt;=<span class="hljs-number">20</span>)<br>    &#123;<br>        System.out.println(<span class="hljs-string">&quot;体重为偏胖&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (和标准体重的差&lt;-<span class="hljs-number">10</span>&amp;&amp;和标准体重的差&gt;-<span class="hljs-number">20</span>)<br>    &#123;<br>        System.out.println(<span class="hljs-string">&quot;体重为偏瘦&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (和标准体重的差&gt;<span class="hljs-number">20</span>)<br>    &#123;<br>        System.out.println(<span class="hljs-string">&quot;体重为肥胖&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (和标准体重的差&lt;-<span class="hljs-number">20</span>)<br>    &#123;<br>        System.out.println(<span class="hljs-string">&quot;体重为瘦弱&quot;</span>);<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><p>分析代码</p><ul><li>发现自己写的代码有复制粘贴的行为，违反了DRY原则（不要重复自己）</li><li>进行优化<ul><li>1.命名优化</li><li>2.把违反DRY原则的代码重复利用起来</li><li>3.改成弹窗显示结果</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">String</span> <span class="hljs-variable">gender</span> <span class="hljs-operator">=</span> GUI.buttonsBox(<span class="hljs-string">&quot;请选择你的性别&quot;</span>,<span class="hljs-string">&quot;男性&quot;</span>,<span class="hljs-string">&quot;女性&quot;</span>);<br><span class="hljs-type">double</span> <span class="hljs-variable">height</span> <span class="hljs-operator">=</span> GUI.doubleBox(<span class="hljs-string">&quot;请输入你的身高（cm）&quot;</span>);<br><span class="hljs-type">double</span> <span class="hljs-variable">weight</span> <span class="hljs-operator">=</span> GUI.doubleBox(<span class="hljs-string">&quot;请输入你的体重（kg）&quot;</span>);<br><span class="hljs-type">double</span> standardWeight;<br><span class="hljs-keyword">if</span> (gender.equals(<span class="hljs-string">&quot;男性&quot;</span>))<br>&#123;<br>    <span class="hljs-comment">//男性：标准体重=（身高cm-80）*70%</span><br>    standardWeight = (height-<span class="hljs-number">80</span>)*<span class="hljs-number">0.70</span>;<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>    <span class="hljs-comment">//女性：标准体重=（身高cm-70）*60%</span><br>    standardWeight = (height-<span class="hljs-number">70</span>)*<span class="hljs-number">0.60</span>;<br>&#125;<br><span class="hljs-type">double</span> <span class="hljs-variable">weightDeviation</span> <span class="hljs-operator">=</span>((weight-standardWeight)/standardWeight)*<span class="hljs-number">100</span>;<br><span class="hljs-keyword">if</span> (weightDeviation&lt;=<span class="hljs-number">10</span>||weightDeviation&gt;=-<span class="hljs-number">10</span>)<span class="hljs-comment">//10%或-10%</span><br>&#123;<br>    GUI.msgBox(<span class="hljs-string">&quot;你很正常哦~&quot;</span>);<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (weightDeviation&gt;<span class="hljs-number">10</span>&amp;&amp;weightDeviation&lt;=<span class="hljs-number">20</span>)<span class="hljs-comment">//10%-20%</span><br>&#123;<br>    GUI.msgBox(<span class="hljs-string">&quot;你稍微有点一点点胖哦&quot;</span>);;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (weightDeviation&lt;-<span class="hljs-number">10</span>&amp;&amp;weightDeviation&gt;-<span class="hljs-number">20</span>)<span class="hljs-comment">//-10%---&gt;-20%</span><br>&#123;<br>    GUI.msgBox(<span class="hljs-string">&quot;你稍微有点一点点瘦哦&quot;</span>);<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (weightDeviation&gt;<span class="hljs-number">20</span>)<span class="hljs-comment">//20%---&gt;</span><br>&#123;<br>    GUI.msgBox(<span class="hljs-string">&quot;你太胖了，该减肥了&quot;</span>);<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (weightDeviation&lt;-<span class="hljs-number">20</span>)<span class="hljs-comment">//-20%---&gt;</span><br>&#123;<br>    GUI.msgBox(<span class="hljs-string">&quot;你太廋了，多吃点&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part2</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P2-8 GUI对话框</title>
    <link href="/2024/08/06/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part2-%E7%AC%94%E8%AE%B0/P2-8%20%E6%A1%88%E4%BE%8B%EF%BC%9AGUI%E5%AF%B9%E8%AF%9D%E6%A1%86/"/>
    <url>/2024/08/06/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part2-%E7%AC%94%E8%AE%B0/P2-8%20%E6%A1%88%E4%BE%8B%EF%BC%9AGUI%E5%AF%B9%E8%AF%9D%E6%A1%86/</url>
    
    <content type="html"><![CDATA[<h1 id="GUI对话框"><a href="#GUI对话框" class="headerlink" title="GUI对话框"></a>GUI对话框</h1><hr><h2 id="关于GUI"><a href="#关于GUI" class="headerlink" title="关于GUI"></a>关于GUI</h2><ul><li>1、GUI：图形化界面。广义上桌面程序、APP、网页等都算是GUI，狭义上就是桌面程序</li><li>2、Java中有Swint、SWT等GUI技术，桌面程序开发不是Java开发的重点，因此除非有需要，否则不用研究。<ul><li>Java去开发桌面程序不是主流</li><li>个人觉得C#去做桌面程序开发很合适</li></ul></li><li>3、为了方便常规的GUI需求，在yzk18-GUI库中提供了一些简化GUI程序编写的方法，<ul><li>如果不够用的话，可以自己研究GUI技术，比如SWT技术~</li></ul></li><li>任何编程语言都会被淘汰，只是时间问题而已。在时间长河中只算作是一粒沙子而已，学会解决问题的思路才是核心。</li></ul><h2 id="YZK18-GUI"><a href="#YZK18-GUI" class="headerlink" title="YZK18-GUI"></a>YZK18-GUI</h2><ul><li>看文档探索yzk18-GUI的使用</li><li>这些对话框是“模态”对话框，也就是窗口关闭之后，才能继续往下执行代码</li><li>进度条是非模态对话框，不用等对话框关闭，代码就继续往后执行<ul><li>Java：大部分情况，main函数执行结束了程序就退出了</li></ul></li></ul><blockquote><p>无需死记硬背每个库的函数用法及其参数<br>在工作中，当需要用到某个库时，可以随时查阅其官方文档。<br>重要的是，<strong>了解该库的大致功能和用途</strong>，以及它的<strong>优缺点</strong>。这样，在需要实现特定功能时，能够迅速回忆起哪个库能够胜任，并直接查阅文档来具体实现。<br>比如，如果你需要处理GUI界面，你只需记得有这样一个库能够支持该功能，并在需要时查阅如何使用它。同样，对于操作PowerPoint文件的库，即使不记得具体用法，只要知道之前用过这个库并且知道它能满足需求，就可以在需要时快速查阅并应用。<br>总的来说，关键在于掌握库的功能和用途，具体用法则可以<strong>随用随查</strong>。</p></blockquote><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs vim">你不用去记住这些库的每个函数是怎么用的，有什么参数等等<br>不用记那个东西，没必要记，用的时候在去查文档就行了<br><br>工作之后也是如此：<br>假如：你需要用到一个库，你临时去查这个文档。<br>然后等你用过这个库后，你知道这个库大概可以用来干什么，大体有什么功能这就够了，不需要把它的用法记住，因为记不住<br>以后在用的时候，你知道要的这个功能在哪个库中有，拿来使用即可， 比如说一个<span class="hljs-keyword">gui</span>功能的这个库，库里面正好有你需要的功能，那直接把它拿过来用就可以了<br><br>学习库后，你只要知道这个库能干什么，它的优点缺点是什么就可以了，别的不用管，随用随查<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><code class="hljs java"><br><span class="hljs-comment">//buttonsBox：关闭窗口 X ；返回null。点击对应按钮，显示按钮的名字</span><br>String s= GUI.buttonsBox(<span class="hljs-string">&quot;你喜欢哪个歌手？&quot;</span>,<span class="hljs-string">&quot;周杰伦&quot;</span>,<span class="hljs-string">&quot;陈奕迅&quot;</span>,<span class="hljs-string">&quot;张杰&quot;</span>);<br>System.out.println(s);<br><br><span class="hljs-comment">//choiceBox:下拉框的选择。new String[] 区分参数类型，要不然会”java: 对choiceBox的引用不明确“</span><br><span class="hljs-type">String</span> <span class="hljs-variable">s</span> <span class="hljs-operator">=</span>GUI.choiceBox(<span class="hljs-string">&quot;吃什么？&quot;</span>,<span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>[]&#123;<span class="hljs-string">&quot;鸡蛋&quot;</span>,<span class="hljs-string">&quot;西红柿&quot;</span>&#125;);<br>System.out.println(s);<br><br><br><span class="hljs-comment">//弹出日期选择对话框  LocalDate.of设置初始时间点</span><br><span class="hljs-comment">//这些对话框是“模态”对话框，也就是窗口关闭之后，才能继续往下执行代码</span><br> <span class="hljs-type">LocalDate</span> <span class="hljs-variable">l</span> <span class="hljs-operator">=</span> GUI.dateBox(<span class="hljs-string">&quot;选择你的生日&quot;</span>, LocalDate.of(<span class="hljs-number">1998</span>,<span class="hljs-number">2</span>,<span class="hljs-number">8</span>));<br>System.out.println(l);<br><br><span class="hljs-comment">//弹出日期时间选择对话框  LocalDateTime.now()设置初始日期/时间</span><br><span class="hljs-type">LocalDateTime</span> <span class="hljs-variable">ldt</span> <span class="hljs-operator">=</span> GUI.datetimeBox(<span class="hljs-string">&quot;选择日期和时间&quot;</span>,LocalDateTime.now());<br>System.out.println(ldt);<br><br><span class="hljs-comment">//弹出目录打开对话框</span><br><span class="hljs-type">String</span> <span class="hljs-variable">s</span> <span class="hljs-operator">=</span>GUI.dirOpenBox(<span class="hljs-string">&quot;请选择对应的文件夹&quot;</span>);<br>System.out.println(s);<br><br><span class="hljs-comment">//弹出目录保存的对话框，如果目录已经存在，则提示【是否覆盖】</span><br><span class="hljs-type">String</span>  <span class="hljs-variable">s</span> <span class="hljs-operator">=</span>  GUI.dirSaveBox(<span class="hljs-string">&quot;D:\\JavaTest1\\output&quot;</span>);<br>System.out.println(s);<br><br><span class="hljs-comment">//只能输入数字</span><br><span class="hljs-type">double</span> <span class="hljs-variable">d</span> <span class="hljs-operator">=</span> GUI.doubleBox(<span class="hljs-string">&quot;请输入你的体重&quot;</span>);<br>System.out.println(d);<br><br><span class="hljs-comment">//弹出报错消息对话框。</span><br><span class="hljs-comment">//GUI.errorBox(&quot;报错测试&quot;);</span><br><br><span class="hljs-comment">//弹出文件打开对话框</span><br>/<span class="hljs-type">tring</span> <span class="hljs-variable">s</span> <span class="hljs-operator">=</span>GUI.fileOpenBox(<span class="hljs-string">&quot;D:\\新建文件夹\\http\\HTTP.png&quot;</span>);<br>System.out.println(s);<br><span class="hljs-comment">//fileSaveBox:弹出保存文件对话框，如果选择的文件已经存在，则提示【是否覆盖】</span><br><br><br><span class="hljs-comment">//屏幕高度/宽度</span><br><span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> GUI.getScreenHeight();<br><span class="hljs-type">int</span> <span class="hljs-variable">i1</span> <span class="hljs-operator">=</span>GUI.getScreenWidth();<br>System.out.println(i);<br>System.out.println(i1);<br><br><span class="hljs-comment">//弹出显示图片的对话框</span><br><span class="hljs-type">String</span> <span class="hljs-variable">s</span> <span class="hljs-operator">=</span> GUI.imgBox(<span class="hljs-string">&quot;你觉得这个壁纸好看吗？&quot;</span>,<span class="hljs-string">&quot;D:/新建文件夹/http/HTTP.png&quot;</span>,<span class="hljs-string">&quot;好看&quot;</span>,<span class="hljs-string">&quot;不好看&quot;</span>);<br>System.out.println(s);<br><br><span class="hljs-comment">//弹出输入框，让用户输入</span><br><span class="hljs-type">String</span> <span class="hljs-variable">s</span> <span class="hljs-operator">=</span>GUI.inputBox(<span class="hljs-string">&quot;请输入你想看到的信息&quot;</span>,<span class="hljs-string">&quot;你真帅&quot;</span>);<br>System.out.println(s);<br><br><span class="hljs-comment">//弹出QQ登录界面</span><br>String[] strs = GUI.loginBox(<span class="hljs-string">&quot;请输入账号：&quot;</span>);<br>System.out.println(Arrays.toString(strs));<br><br><span class="hljs-comment">//弹出密码对话框 密码加密了 明码看不到</span><br>String s=GUI.passwordBox(<span class="hljs-string">&quot;请输入密码&quot;</span>);<br>System.out.println(s);<br><br><span class="hljs-comment">//弹窗提示</span><br>GUI.msgBox(<span class="hljs-string">&quot;你好，这是一条信息&quot;</span>);<br><br><span class="hljs-comment">//弹出有多个输入内容的对话框</span><br>String[] strs = GUI.multiInputBox(<span class="hljs-string">&quot;请输入你的想法，我为你保存&quot;</span>,<span class="hljs-string">&quot;生活越来越好&quot;</span>,<span class="hljs-string">&quot;家人健健康康&quot;</span>,<span class="hljs-string">&quot;平平安安&quot;</span>);<br>System.out.println(Arrays.toString(strs));<br><br><span class="hljs-comment">//弹出包含【确认】、【取消】两个按钮的消息对话框</span><br><span class="hljs-type">boolean</span> <span class="hljs-variable">b</span> <span class="hljs-operator">=</span> GUI.okCancelBox(<span class="hljs-string">&quot;你还好吗？&quot;</span>);<br>System.out.println(b);<br><br><br><span class="hljs-comment">//显示“非确定性”进度对话框，非模态对话框,导入状态显示</span><br><span class="hljs-comment">//非模态对话框，不用等对话框关闭，代码就继续往后执行</span><br><span class="hljs-comment">//Java：大部分情况，main函数执行结束了程序就退出了</span><br><span class="hljs-keyword">try</span> &#123;<br>    System.out.println(<span class="hljs-string">&quot;暂停开始前: &quot;</span> + System.currentTimeMillis());<br>    GUI.showIndeterminateProgressDialog(<span class="hljs-string">&quot;正在导入&quot;</span>);<br>    <span class="hljs-comment">// 暂停10秒钟</span><br>    Thread.sleep(<span class="hljs-number">10000</span>);<br><br>    System.out.println(<span class="hljs-string">&quot;暂停结束后: &quot;</span> + System.currentTimeMillis());<br>&#125; <span class="hljs-keyword">catch</span> (InterruptedException e) &#123;<br>    Thread.currentThread().interrupt();<br>&#125;<br><br><span class="hljs-comment">//显示进度显示对话框，非模态对话框。</span><br><span class="hljs-keyword">try</span> &#123;<br>    System.out.println(<span class="hljs-string">&quot;暂停开始前: &quot;</span> + System.currentTimeMillis());<br>    GUI.showProgressDialog(<span class="hljs-string">&quot;导入中&quot;</span>,<span class="hljs-number">10</span>,<span class="hljs-number">1</span>);<br>    <span class="hljs-comment">// 暂停10秒钟</span><br>    Thread.sleep(<span class="hljs-number">10000</span>);<br><br>    System.out.println(<span class="hljs-string">&quot;暂停结束后: &quot;</span> + System.currentTimeMillis());<br>&#125; <span class="hljs-keyword">catch</span> (InterruptedException e) &#123;<br>    Thread.currentThread().interrupt();<br>&#125;<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part2</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P2-7  案例：整理视频文件夹</title>
    <link href="/2024/08/06/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part2-%E7%AC%94%E8%AE%B0/P2-7%20%E6%A1%88%E4%BE%8B%EF%BC%9A%E6%95%B4%E7%90%86%E8%A7%86%E9%A2%91%E6%96%87%E4%BB%B6%E5%A4%B9/"/>
    <url>/2024/08/06/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part2-%E7%AC%94%E8%AE%B0/P2-7%20%E6%A1%88%E4%BE%8B%EF%BC%9A%E6%95%B4%E7%90%86%E8%A7%86%E9%A2%91%E6%96%87%E4%BB%B6%E5%A4%B9/</url>
    
    <content type="html"><![CDATA[<h1 id="案例：整理视频文件夹"><a href="#案例：整理视频文件夹" class="headerlink" title="案例：整理视频文件夹"></a>案例：整理视频文件夹</h1><hr><h2 id="需求说明"><a href="#需求说明" class="headerlink" title="需求说明"></a>需求说明</h2><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240805/%E9%9C%80%E6%B1%82%E8%AF%B4%E6%98%8E1.2krttfv30i.webp" alt="需求说明1"></p><blockquote><p>思路<br>1.先把文件夹中所有MP4的文件读取出来<br>2.分别取目录的名字+ ”-“ + 文件名<br>3.整理后拷贝到其他的文件夹：output文件夹</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//杨中科老师的写法</span><br><span class="hljs-type">File</span> <span class="hljs-variable">file</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">File</span>(<span class="hljs-string">&quot;E:/test&quot;</span>);<br>File[] dirs = file.listFiles();<br><span class="hljs-keyword">for</span>(File dir : dirs)<span class="hljs-comment">//先遍历文件夹</span><br>&#123;<br>    <span class="hljs-keyword">for</span>(File fileMp4 : dir.listFiles())<span class="hljs-comment">//再遍历文件夹下的文件</span><br>    &#123;<br>        <span class="hljs-comment">//System.out.println(fileMp4);</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">filePath</span> <span class="hljs-operator">=</span> fileMp4.getPath();<span class="hljs-comment">//把File转换为字符串，方便用split等方法</span><br>        <span class="hljs-comment">//System.out.println(filePath);</span><br>        filePath = filePath.replace(<span class="hljs-string">&quot;\\&quot;</span>,<span class="hljs-string">&quot;/&quot;</span>);<span class="hljs-comment">//把\替换为/，</span><br>        <span class="hljs-comment">//// 这样无论是Windows还是其他操作系统，这样路径分隔符都同意为/</span><br>        String[] strs = filePath.split(<span class="hljs-string">&quot;/&quot;</span>);<br>        <span class="hljs-comment">//System.out.println(Arrays.toString(strs));</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">folderName</span> <span class="hljs-operator">=</span> strs[strs.length-<span class="hljs-number">2</span>];<span class="hljs-comment">//倒数第1个是文件夹的名字</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">fileName</span> <span class="hljs-operator">=</span> strs[strs.length-<span class="hljs-number">1</span>];<span class="hljs-comment">//倒数第0个是文件的名字</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">outputFileName</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;e:/temp/output/&quot;</span>+folderName+<span class="hljs-string">&quot;-&quot;</span>+fileName;<span class="hljs-comment">//目标文件名</span><br>        <span class="hljs-comment">//System.out.println(outputFileName);</span><br>        <span class="hljs-type">byte</span>[] bytes = IOHelpers.readAllBytes(fileMp4);<span class="hljs-comment">//文件内容</span><br>        IOHelpers.writeAllBytes(outputFileName,bytes);<span class="hljs-comment">//写入新文件</span><br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//自己的写法</span><br>String[] strs =  IOHelpers.getFilesRecursively(<span class="hljs-string">&quot;D:/JavaTest1&quot;</span>,<span class="hljs-string">&quot;mp4&quot;</span>);<br><br><span class="hljs-keyword">for</span> (String str:strs)<br>&#123;<br>    <span class="hljs-type">String</span> <span class="hljs-variable">strs1</span> <span class="hljs-operator">=</span>  str.replace(<span class="hljs-string">&quot;\\&quot;</span>,<span class="hljs-string">&quot;/&quot;</span>);<span class="hljs-comment">//把\替换为/</span><br>    <span class="hljs-comment">// 这样无论是Windows还是其他操作系统，这样路径分隔符都同意为/</span><br>    String[] strs2 =  strs1.split(<span class="hljs-string">&quot;/&quot;</span>);<br>    <span class="hljs-type">String</span> <span class="hljs-variable">name</span> <span class="hljs-operator">=</span> strs2[strs2.length-<span class="hljs-number">2</span>];<span class="hljs-comment">//倒数第1个是文件夹的名字</span><br>    <span class="hljs-type">String</span> <span class="hljs-variable">filename</span> <span class="hljs-operator">=</span> strs2[strs2.length-<span class="hljs-number">1</span>];<span class="hljs-comment">//倒数第0个是文件的名字</span><br>    <span class="hljs-type">String</span> <span class="hljs-variable">outputFileName</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;D:/JavaTest1/output/&quot;</span>+name+<span class="hljs-string">&quot;-&quot;</span>+filename;<br>    <span class="hljs-type">byte</span>[] bytes = IOHelpers.readAllBytes(str);<span class="hljs-comment">//文件内容</span><br>    IOHelpers.writeAllBytes(outputFileName,bytes);<span class="hljs-comment">//写入新文件</span><br>&#125;<br><br></code></pre></td></tr></table></figure><h2 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h2><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240805/Snipaste_2024-08-05_21-25-19.4g4emaa5md.webp" alt="Snipaste_2024-08-05_21-25-19"></p><blockquote><p>思路<br>1.先找出文件夹下的mp3歌曲<br>2.用、去分割歌曲名称<br>3.然后用-去分为两半，前面是歌手的名字去作为文件夹，后面作为歌曲的名字，放在文件夹之下<br>4.然后读取对应的内容，拷贝到新文件夹中</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//先遍历出文件夹下所有的mp3歌曲</span><br>String[] strs= IOHelpers.getFilesRecursively(<span class="hljs-string">&quot;E:/KwDownload/song&quot;</span>,<span class="hljs-string">&quot;mp3&quot;</span>);<br><br><span class="hljs-keyword">for</span> (String fileMp3:strs)<br>&#123;<br>    <span class="hljs-comment">//把\替换成/</span><br>    <span class="hljs-comment">//这样无论是Windows还是其他操作系统，路径分隔符统一都为/</span><br>    <span class="hljs-type">String</span> <span class="hljs-variable">filePath</span> <span class="hljs-operator">=</span>  fileMp3.replace(<span class="hljs-string">&quot;\\&quot;</span>,<span class="hljs-string">&quot;/&quot;</span>);<br>    String[] strs2 =  filePath.split(<span class="hljs-string">&quot;/&quot;</span>);<span class="hljs-comment">//用/去分割，然后获取到MP3的文件名</span><br>    <span class="hljs-type">String</span> <span class="hljs-variable">filename</span> <span class="hljs-operator">=</span> strs2[strs2.length-<span class="hljs-number">1</span>];<br>    String [] strs3 =filename.split(<span class="hljs-string">&quot;、&quot;</span>);<span class="hljs-comment">//用、去分割歌曲前面的顺序，然后获取到MP3的歌手+文件名</span><br>    <span class="hljs-type">String</span> <span class="hljs-variable">newfilename</span> <span class="hljs-operator">=</span> strs3[strs3.length-<span class="hljs-number">1</span>];<br>    String [] strs4 =newfilename.split(<span class="hljs-string">&quot;-&quot;</span>);<span class="hljs-comment">//用-去分割MP3的歌手和歌名</span><br>    <span class="hljs-type">String</span> <span class="hljs-variable">name</span> <span class="hljs-operator">=</span> strs4[strs4.length-<span class="hljs-number">2</span>];<span class="hljs-comment">//歌手名字</span><br>    <span class="hljs-type">String</span> <span class="hljs-variable">MP3</span> <span class="hljs-operator">=</span> strs4[strs4.length-<span class="hljs-number">1</span>];<span class="hljs-comment">//歌曲名</span><br>    <span class="hljs-type">String</span> <span class="hljs-variable">outputFileName</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;D:/JavaTest1/output/&quot;</span>+name+<span class="hljs-string">&quot;/&quot;</span>+MP3;<span class="hljs-comment">//加+把对应的歌曲归到对应的歌手文件夹下面去</span><br>    <span class="hljs-type">byte</span>[]bytes = IOHelpers.readAllBytes(fileMp3);<span class="hljs-comment">//拷贝文件</span><br>    IOHelpers.writeAllBytes(outputFileName,bytes);<span class="hljs-comment">//写入在对应的路径下面去</span><br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part2</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P2-6  案例：统计学生成绩</title>
    <link href="/2024/08/05/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part2-%E7%AC%94%E8%AE%B0/P2-6%20%E6%A1%88%E4%BE%8B%EF%BC%9A%E7%BB%9F%E8%AE%A1%E5%AD%A6%E7%94%9F%E6%88%90%E7%BB%A9/"/>
    <url>/2024/08/05/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part2-%E7%AC%94%E8%AE%B0/P2-6%20%E6%A1%88%E4%BE%8B%EF%BC%9A%E7%BB%9F%E8%AE%A1%E5%AD%A6%E7%94%9F%E6%88%90%E7%BB%A9/</url>
    
    <content type="html"><![CDATA[<h1 id="案例：统计学生成绩"><a href="#案例：统计学生成绩" class="headerlink" title="案例：统计学生成绩"></a>案例：统计学生成绩</h1><hr><h2 id="需求说明"><a href="#需求说明" class="headerlink" title="需求说明"></a>需求说明</h2><blockquote><p>1.有如下格式的一个文本文件：<br>张三,90,100,80.2<br>罗翔,99,99,30.5<br>杨中科,100,100,100<br>每一行代表一个学生的姓名，成绩（语数外）。<br>输出每个人的成绩到一个单独的文本文件，比如“张三.txt”的内容为“张三你好，你的语文成绩为90，你的数学成绩为100，你的外语成绩为80，平均分为90.06”。不考虑小数精度问题。演示：如果自己搜索把String转换为double的方法。</p></blockquote><h2 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h2><blockquote><p>1、有如下格式的一个文本文件：<br>张三 ,90,100,80,90<br>罗 翔,99,99,30<br>杨 中科,100,100,100,100<br>每一行代表一个学生的姓名，成绩。每个学生参加的考试科目数量不确定。输入姓名的时候，有的姓名两边或者中间误输入了空格。输出所有人的成绩到一个文本文件“平均成绩.txt” ，内容格式如下：<br>张三, 90<br>李四, 76<br>杨中科,100</p></blockquote><ul><li>思路</li><li>1.先逐行去获取一行的内容</li><li>2.姓名的两边或中间有空格，可以用trim去空格</li><li>3.考试科目数量不确定，可以用每一行的数组长度，</li><li>4.把这些信息都输入到同一个文本文件中。名称为“平均成绩.txt”</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs java">String[] lines = IOHelpers.readAllLines(<span class="hljs-string">&quot;D:/新建文件夹/练习.txt&quot;</span>);<br><span class="hljs-keyword">for</span> (String line :lines)<br>&#123;<br>    String[] strs =line.split(<span class="hljs-string">&quot;,&quot;</span>);<br>    <span class="hljs-type">String</span> <span class="hljs-variable">name</span> <span class="hljs-operator">=</span> strs[<span class="hljs-number">0</span>].replace(<span class="hljs-string">&quot; &quot;</span>,<span class="hljs-string">&quot;&quot;</span>);<span class="hljs-comment">//去掉名字中的空格</span><br>    System.out.println(name);<br>    <span class="hljs-type">int</span> <span class="hljs-variable">sum</span> <span class="hljs-operator">=</span>strs.length;<span class="hljs-comment">//获取字符串组的长度</span><br>    <span class="hljs-type">double</span> <span class="hljs-variable">sum1</span> <span class="hljs-operator">=</span><span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span><span class="hljs-number">1</span>;i&lt;=sum-<span class="hljs-number">1</span>;i++)<br>    &#123;<br>        <span class="hljs-comment">// System.out.println(strs[i]);</span><br>        <span class="hljs-type">double</span> 成绩 = Double.parseDouble(strs[i]);<span class="hljs-comment">//String转换成double</span><br>        sum1 =成绩+sum1;<br>    &#125;<br>    <span class="hljs-type">double</span> <span class="hljs-variable">pingjun</span> <span class="hljs-operator">=</span> sum1/(sum-<span class="hljs-number">1</span>);<span class="hljs-comment">//获得平均分</span><br>    System.out.println(pingjun);<br>    <span class="hljs-type">String</span> <span class="hljs-variable">msg</span> <span class="hljs-operator">=</span> name+<span class="hljs-string">&quot;,&quot;</span>+pingjun;<br><br>    <span class="hljs-comment">//FileWriter方法 不会覆盖</span><br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-type">FileWriter</span> <span class="hljs-variable">fileWriter</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">FileWriter</span>(<span class="hljs-string">&quot;D:/新建文件夹/平均成绩.txt&quot;</span>, <span class="hljs-literal">true</span>); <span class="hljs-comment">// 第二个参数为true表示追加内容</span><br>        fileWriter.write(msg+<span class="hljs-string">&quot;\n&quot;</span>);<span class="hljs-comment">//换行</span><br>        fileWriter.close();<br>    &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;<br>        e.printStackTrace();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part2</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P2-5  案例：检测图片中是否有二维码</title>
    <link href="/2024/08/05/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part2-%E7%AC%94%E8%AE%B0/P2-5%20%E6%A1%88%E4%BE%8B%EF%BC%9A%E6%A3%80%E6%B5%8B%E5%9B%BE%E7%89%87%E4%B8%AD%E6%98%AF%E5%90%A6%E6%9C%89%E4%BA%8C%E7%BB%B4%E7%A0%81/"/>
    <url>/2024/08/05/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part2-%E7%AC%94%E8%AE%B0/P2-5%20%E6%A1%88%E4%BE%8B%EF%BC%9A%E6%A3%80%E6%B5%8B%E5%9B%BE%E7%89%87%E4%B8%AD%E6%98%AF%E5%90%A6%E6%9C%89%E4%BA%8C%E7%BB%B4%E7%A0%81/</url>
    
    <content type="html"><![CDATA[<h1 id="案例：检测一堆图片文件中是否有二维码类型的"><a href="#案例：检测一堆图片文件中是否有二维码类型的" class="headerlink" title="案例：检测一堆图片文件中是否有二维码类型的"></a>案例：检测一堆图片文件中是否有二维码类型的</h1><hr><h2 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h2><ul><li>1、扫描一个文件夹下所有的图片文件，查看是否存在着有带二维码的图片，如果有的话就输出“有宣传性二维码图片”，否则就提示“检测通过”</li></ul><blockquote><p>思路很重要<br>1.先检测文件夹中格式是png，jpg，gif的图片文件<br>2.for循环，然后解析图片内容，能解析出来就是带二维码的，解析不出来就是null<br>3.if判断一下，如果有true的就提示：有宣传性二维码图片<br>false就提示：检测通过</p></blockquote><hr><h2 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h2><ul><li>1、扫描一个文件夹以及子文件夹下所有的图片文件，查看是否存在着有带二维码的图片，如果有的话就检查是否是网址，如果是的话输出“有宣传性二维码图片”，否则就提示“检测通过”</li></ul><blockquote><p>思路很重要<br>1.先检测文件夹中格式是png，jpg，gif的图片文件<br>2.for循环，然后解析图片内容，能解析出来就是带二维码的，解析不出来就是null<br>3.if判断一下不等于空，<br>4.如果判断字符串中是否包含“https:&#x2F;&#x2F;”或者“http:&#x2F;&#x2F;”的就提示：有宣传性二维码图片<br>false就提示：检测通过</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs java"> <span class="hljs-comment">//第一步：先检测这个目录以及后代目录中格式是PNG,JPG,gif等的图片文件</span><br>String[] strs = IOHelpers.getFilesRecursively(<span class="hljs-string">&quot;D:/新建文件夹&quot;</span>,<span class="hljs-string">&quot;png&quot;</span>,<span class="hljs-string">&quot;jpg&quot;</span>,<span class="hljs-string">&quot;gif&quot;</span>);<br><span class="hljs-comment">//String str3 = Arrays.toString(strs);</span><br><span class="hljs-comment">//System.out.println(str3);</span><br><span class="hljs-type">boolean</span> <span class="hljs-variable">yespng</span> <span class="hljs-operator">=</span> <span class="hljs-literal">false</span>;<span class="hljs-comment">//默认为没有二维码带网站信息的图片</span><br><span class="hljs-comment">//for循环解析出条形码内容</span><br><span class="hljs-keyword">for</span> (String str1 : strs)<br>&#123;<br>    <span class="hljs-comment">//解析目录文件中的条形码内容，解析不出来就是null</span><br>    <span class="hljs-type">Result</span> <span class="hljs-variable">result</span> <span class="hljs-operator">=</span> QRCodeHelpers.parseImage(str1);<br>    <span class="hljs-keyword">if</span> (result != <span class="hljs-literal">null</span>)<br>    &#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">str2</span> <span class="hljs-operator">=</span> result.getText();<br>        <span class="hljs-keyword">if</span> (str2.contains(<span class="hljs-string">&quot;https://&quot;</span>)||str2.contains(<span class="hljs-string">&quot;http://&quot;</span>)) <span class="hljs-comment">//卡住了不知道用哪个方法了。 https://  http://</span><br>        &#123;<br>            System.out.println(str2);<br>            yespng =<span class="hljs-literal">true</span>;<span class="hljs-comment">//如果检测出来有条形码内容就是带有二维码信息的图片</span><br>            <span class="hljs-keyword">break</span>;<br>        &#125;<br><br>    &#125;<br>&#125;<br><span class="hljs-keyword">if</span> (yespng == <span class="hljs-literal">true</span>)<br>&#123;<br>    System.out.println(<span class="hljs-string">&quot;有宣传性二维码图片&quot;</span>);<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>    System.out.println(<span class="hljs-string">&quot;检测通过&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part2</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P2-4  文件读写等类</title>
    <link href="/2024/08/04/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part2-%E7%AC%94%E8%AE%B0/P2-4%20%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99%E7%AD%89%E7%B1%BB/"/>
    <url>/2024/08/04/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part2-%E7%AC%94%E8%AE%B0/P2-4%20%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99%E7%AD%89%E7%B1%BB/</url>
    
    <content type="html"><![CDATA[<h1 id="文件读写等类"><a href="#文件读写等类" class="headerlink" title="文件读写等类"></a>文件读写等类</h1><hr><h2 id="文件的数据格式"><a href="#文件的数据格式" class="headerlink" title="文件的数据格式"></a>文件的数据格式</h2><blockquote><p>Unix团队：文件的概念<br>二进制流</p></blockquote><ul><li>1、文件是以字节的形式存到磁盘上，不同的文件格式只不过按照不同的文件格式标准来保存而已</li><li>2、用HxD Hex Editor查看图片、exe、文本等格式</li><li>3、文本文件也是一种二进制文件而已。<ul><li>不过中文以什么样的格式存到文件中，有不同的标准(编码标准)</li><li>因此如果编码处理不当，文本文件有可能有乱码的问题</li></ul></li><li>4、Word、PDF等不是文本格式。文本格式的判断标准：能不能用文本编辑器打开~~~</li></ul><h2 id="学会学习-知识"><a href="#学会学习-知识" class="headerlink" title="学会学习  &gt; 知识"></a>学会学习  &gt; 知识</h2><ul><li>1、<strong>程序员学会阅读文档</strong>、学会 “ Trial and Error ” 才能真正长大<ul><li>不断试错的过程中去成长</li></ul></li><li>2、授人以渔：可以从maven网站点击【view all】下载javadoc的jar，然后解压到本地，就可以查看相关文档<ul><li>也可以在IDEA中download source</li></ul></li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240803/View-All.3nrj1hkpkz.webp" alt="View-All"></p><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240803/%E9%85%8D%E7%BD%AE1.esf4qu27u.webp" alt="配置1"></p><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240803/java-doc.5c0vyoazr3.webp" alt="java-doc"></p><ul><li>3、如果阅读文档，如何尝试</li><li>4、JDK内置类的JavaDoc，搜索**jdk8 doc downloads<ul><li>还是建议程序员看英文文档，因为英文的原文通过机翻出来的意思，有可能会不一样<ul><li><a href="http://www.oracle.com/technetwork/java/javase/documentation/jdk8-doc-downloads-2133158.html">http://www.oracle.com/technetwork/java/javase/documentation/jdk8-doc-downloads-2133158.html</a></li></ul></li><li>实在不行，就在网上找好心人通过机翻 翻译出来的中文版<ul><li>网上搜<strong>java8 文档 中文版</strong></li></ul></li></ul></li></ul><h2 id="作业"><a href="#作业" class="headerlink" title="作业"></a>作业</h2><ul><li>研究yzk18-commons库</li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240804/%E7%A0%94%E7%A9%B6yzk18.8dws1c35id.webp" alt="研究yzk18"></p><hr><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//DesktopHelpers</span><br>DesktopHelpers.editFile(<span class="hljs-string">&quot;D:/Test1.txt&quot;</span>);<span class="hljs-comment">//用默认软件打开指定文件</span><br>String s=DesktopHelpers.getClipboardText();<br>System.out.println(s);<br></code></pre></td></tr></table></figure><hr><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//QRCodeHelpers</span><br><span class="hljs-type">BufferedImage</span> <span class="hljs-variable">img</span> <span class="hljs-operator">=</span> QRCodeHelpers.generateQRCodeImage(<span class="hljs-string">&quot;9999http://iknow.lenovo.com.cn/&quot;</span>,<span class="hljs-number">3840</span>,<span class="hljs-number">5760</span>);<br>ImageHelpers.writeToFile(img,<span class="hljs-string">&quot;png&quot;</span>,<span class="hljs-string">&quot;D:/新建文件夹/HTTP.png&quot;</span>);<br></code></pre></td></tr></table></figure><hr><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//ImageHelpers</span><br><span class="hljs-type">byte</span>[] byte1 = IOHelpers.readAllBytes(<span class="hljs-string">&quot;E:/BaiduNetdiskDownload/6M4A00504 (7).jpg&quot;</span>);<br><span class="hljs-comment">//System.out.println(Arrays.toString(byte1));</span><br><br>System.out.println(ImageHelpers.detectImageType(byte1));<br>System.out.println(ImageHelpers.getImageSize(byte1));<br></code></pre></td></tr></table></figure><hr><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//IOHelpers</span><br>OHelpers.deleteDir(<span class="hljs-string">&quot;D:/Test1&quot;</span>);<br>String str1= IOHelpers.detectTextEncoding(<span class="hljs-string">&quot;D:/Test1.txt&quot;</span>);<span class="hljs-comment">//数据足够多的时候才能算出是什么编码</span><br>System.out.println(str1);<br><br><span class="hljs-type">String</span> <span class="hljs-variable">str2</span> <span class="hljs-operator">=</span> IOHelpers.getExtension(<span class="hljs-string">&quot;D:/Test1.txt&quot;</span>);<br>System.out.println(str2);<br><br>System.out.println(IOHelpers.getFileNameWithoutExtension(<span class="hljs-string">&quot;D:/Test1.txt&quot;</span>));<br><br>String[] str3 = IOHelpers.getFilesRecursively(<span class="hljs-string">&quot;D:/Program Files (x86)/小软件合集&quot;</span>,<span class="hljs-string">&quot;zip&quot;</span>);<br>System.out.println(Arrays.toString(str3));<br><br>IOHelpers.mkParentDirs(<span class="hljs-string">&quot;D:/a/b&quot;</span>);<span class="hljs-comment">//创建目录</span><br><br><span class="hljs-type">String</span> <span class="hljs-variable">str4</span> <span class="hljs-operator">=</span> IOHelpers.readAllText(<span class="hljs-string">&quot;D:/Test1.txt&quot;</span>);<br>System.out.println(str4);<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part2</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P2-3  Maven的使用</title>
    <link href="/2024/08/03/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part2-%E7%AC%94%E8%AE%B0/P2-3%20Maven%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <url>/2024/08/03/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part2-%E7%AC%94%E8%AE%B0/P2-3%20Maven%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="Maven的使用"><a href="#Maven的使用" class="headerlink" title="Maven的使用"></a>Maven的使用</h1><hr><h2 id="YZK18-COMMONS库"><a href="#YZK18-COMMONS库" class="headerlink" title="YZK18-COMMONS库"></a>YZK18-COMMONS库</h2><ul><li>由杨中科封装的库，让初学者更好的学习</li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240803/commons%E5%BA%93-yzk%E5%B0%81%E8%A3%85%E7%9A%84.1022r19jom.webp" alt="commons库-yzk封装的"></p><h3 id="通过Maven引用库"><a href="#通过Maven引用库" class="headerlink" title="通过Maven引用库"></a>通过Maven引用库</h3><ul><li>1、Maven默认从国外的服务器下载库，可能速度慢。国内最好配置镜像服务器，可以用阿里云的，也可以用其他的。</li><li>2、pom.xml上右键Maven→Create settings.xml<ul><li>一台电脑配置一次即可</li><li>把阿里云镜像的配置文件写进去</li></ul></li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240803/%E9%85%8D%E7%BD%AE.7p3ifs6odm.webp" alt="配置"></p><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240803/settings.41xys9k05s.webp" alt="settings"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">mirrors</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">mirror</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">id</span>&gt;</span>nexus-aliyun<span class="hljs-tag">&lt;/<span class="hljs-name">id</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">mirrorOf</span>&gt;</span>*<span class="hljs-tag">&lt;/<span class="hljs-name">mirrorOf</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>Nexus aliyun<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">url</span>&gt;</span>https://maven.aliyun.com/nexus/content/groups/public<span class="hljs-tag">&lt;/<span class="hljs-name">url</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">mirror</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">mirrors</span>&gt;</span><br><br></code></pre></td></tr></table></figure><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240803/Maven%E5%BC%95%E7%94%A8%E5%BA%93.2venjnlzag.webp" alt="Maven引用库"></p><h3 id="添加库"><a href="#添加库" class="headerlink" title="添加库"></a>添加库</h3><ul><li>1、在<a href="https://mvnrepository.com自己搜索,或者直接用别人提供的maven配置./">https://mvnrepository.com自己搜索，或者直接用别人提供的maven配置。</a><ul><li>里面最好选新版本，除非有特殊要求</li><li>多看看描述和文档.还能看到这个第三方的依赖库</li><li>然后在浏览器中看看这个的用法，和易用性</li></ul></li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240803/%E6%8F%8F%E8%BF%B0.7zqc8y0vcp.webp" alt="描述"></p><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240803/%E9%85%8D%E7%BD%AE1.esf4qu27u.webp" alt="配置1"></p><ul><li>2、在pom.xml中建一个dependencies节点(如果已经有了就不能重复建了)，然后把dependency粘贴上去即可。 dependencies中可以放多个dependency</li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240803/YZK18.9dcvcywyjt.webp" alt="YZK18"></p><ul><li><p>3、修改了pom.xml后要点一下m图标才会下载</p></li><li><p>4、偶尔会下载失败，jar包展开没东西，就右键【pom.xml】，然后选择【Maven】→【Reload Project】就会自动重试下载。有时候要试好几次，或者重启IDEA</p></li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240803/%E9%87%8D%E6%96%B0%E4%B8%8B%E8%BD%BD.syuvn05w5.webp" alt="重新下载"></p><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240803/%E4%B8%8B%E8%BD%BD%E6%83%85%E5%86%B5.8s37qpi1ms.webp" alt="下载情况"></p><h3 id="添加yzk18-commons库"><a href="#添加yzk18-commons库" class="headerlink" title="添加yzk18-commons库"></a>添加yzk18-commons库</h3><ul><li>从<a href="https://mvnrepository.com/">https://mvnrepository.com</a> 搜最新版yzk18-commons，放到pom.xml中。或者用：</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.yzk18<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>yzk18-commons<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.5<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li>2、开源地址： <a href="https://github.com/yangzhongke/yzk18/">https://github.com/yangzhongke/yzk18/</a></li><li>3、调用IOHelpers. readAllText()方法读取然后打印文本文件</li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240803/%E6%88%90%E5%8A%9F.6f0l9i9iok.webp" alt="成功"></p>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part2</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P2-2  字符串的更多方法</title>
    <link href="/2024/08/03/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part2-%E7%AC%94%E8%AE%B0/P2-2%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%9B%B4%E5%A4%9A%E6%96%B9%E6%B3%95/"/>
    <url>/2024/08/03/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part2-%E7%AC%94%E8%AE%B0/P2-2%20%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%9B%B4%E5%A4%9A%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h1 id="字符串的更多方法"><a href="#字符串的更多方法" class="headerlink" title="字符串的更多方法"></a>字符串的更多方法</h1><hr><h2 id="String类主要成员1"><a href="#String类主要成员1" class="headerlink" title="String类主要成员1"></a>String类主要成员1</h2><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240803/String%E7%B1%BB%E4%B8%BB%E8%A6%81%E6%88%90%E5%91%981.2obfnv8p3n.webp" alt="String类主要成员1"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs java">String str1=<span class="hljs-string">&quot;你真是个大帅哥，yesyesyes&quot;</span>;<br><span class="hljs-comment">//int length()字符串长度</span><br>System.out.println(str1.length());<br><br><span class="hljs-comment">//char charAt(int index) 获取第index个位置的字符</span><br>System.out.println(str1.charAt(<span class="hljs-number">5</span>));<br><br><span class="hljs-comment">//boolean contains(CharSequence s)判断字符串s是否包含在本字符串中</span><br>System.out.println(str1.contains(<span class="hljs-string">&quot;y&quot;</span>));<br>System.out.println(str1.contains(<span class="hljs-string">&quot;Y&quot;</span>));<br><br><span class="hljs-comment">//String replace(CharSequence target,CharSequence replacement)</span><br><span class="hljs-comment">//把字符串中的target替换为replacement，字符串具有不可变性，因为旧的不变，要通过返回值拿新的</span><br><span class="hljs-type">String</span> <span class="hljs-variable">str2</span> <span class="hljs-operator">=</span> str1.replace(<span class="hljs-string">&quot;大帅哥&quot;</span>,<span class="hljs-string">&quot;cool&quot;</span>);<span class="hljs-comment">//在str1的字符串中选对对应的词来替换</span><br>System.out.println(str2);<br><br><span class="hljs-type">String</span> <span class="hljs-variable">s</span> <span class="hljs-operator">=</span><span class="hljs-string">&quot;I am likes job&quot;</span>;<br><span class="hljs-comment">//String[]split(String regex)按照指定的字符串来拆分为多给字符串。参数是正则表达式类型，有特殊字符转义等问题，以后遇到再说</span><br>String[] strs =s.split(<span class="hljs-string">&quot; &quot;</span>);<span class="hljs-comment">//用空格来分割上面字符串</span><br><span class="hljs-keyword">for</span> (String str:strs)<br>&#123;<br>    System.out.println(str);<br>&#125;<br><br><span class="hljs-comment">//boolean startsWith(&quot;www&quot;) 判断字符串是否以WWW开头</span><br><span class="hljs-comment">//boolean endsWith(&quot;www&quot;) 判断字符串是否以WWW结尾</span><br><span class="hljs-type">String</span> <span class="hljs-variable">str3</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;www.baidu.com&quot;</span>;<br>System.out.println(str3.startsWith(<span class="hljs-string">&quot;www&quot;</span>));<br>System.out.println(str3.endsWith(<span class="hljs-string">&quot;www&quot;</span>));<br></code></pre></td></tr></table></figure><h2 id="String类主要成员2"><a href="#String类主要成员2" class="headerlink" title="String类主要成员2"></a>String类主要成员2</h2><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240803/String%E7%B1%BB%E4%B8%BB%E8%A6%81%E6%88%90%E5%91%982.syuv8w9hx.webp" alt="String类主要成员2"></p><h2 id="String类主要成员3"><a href="#String类主要成员3" class="headerlink" title="String类主要成员3"></a>String类主要成员3</h2><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240803/String%E7%B1%BB%E4%B8%BB%E8%A6%81%E6%88%90%E5%91%983.ic123qsus.webp" alt="String类主要成员3"></p><h2 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h2><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240803/String%E7%B1%BB%E7%9A%84%E6%A1%88%E4%BE%8B.8vmto1h6a8.webp" alt="String类的案例"></p><blockquote><p>1、获取文件名</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//自己写的</span><br>String s1= <span class="hljs-string">&quot;c:/a/b/c.txt&quot;</span>;<br>String s2= s1.substring(<span class="hljs-number">7</span>);<br>System.out.println(s2);<br><br>--------------------------------------------------------------------<br><br><span class="hljs-comment">//获取/最后出现的下标，然后去截取字符串即可</span><br>String s1= <span class="hljs-string">&quot;c:/a/b/c.txt&quot;</span>;<br><span class="hljs-type">int</span> <span class="hljs-variable">i1</span> <span class="hljs-operator">=</span> s1.lastIndexOf(<span class="hljs-string">&quot;/&quot;</span>);<br>System.out.println(s1.substring(i1+<span class="hljs-number">1</span>));<br><br></code></pre></td></tr></table></figure><hr><blockquote><p>2、获取后缀名</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//自己写的</span><br>String s1= <span class="hljs-string">&quot;c:/a/b/c.txt&quot;</span>;<br><span class="hljs-type">int</span> i1= s1.lastIndexOf(<span class="hljs-string">&quot;.txt&quot;</span>);<br>String s2=s1.substring(i1);<br>System.out.println(s2);<br><br>--------------------------------------------------------------------<br><br><span class="hljs-comment">//判断.最后出现的位置，然后从.的下标截取</span><br>String s1= <span class="hljs-string">&quot;c:/a/b/c.txt&quot;</span>;<br><span class="hljs-type">int</span> <span class="hljs-variable">i1</span> <span class="hljs-operator">=</span> s1.lastIndexOf(<span class="hljs-string">&quot;.&quot;</span>);<br>System.out.println(s1.substring(i1));<br></code></pre></td></tr></table></figure><hr><blockquote><p>3、判断</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs java"><br><span class="hljs-type">String</span> <span class="hljs-variable">userName</span> <span class="hljs-operator">=</span><span class="hljs-string">&quot;admin&quot;</span>;<br>String passWord=<span class="hljs-string">&quot;123456&quot;</span>;<br><span class="hljs-type">String</span> <span class="hljs-variable">userInputUserName</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;ADMin&quot;</span>;<br>String userInputpassWord=<span class="hljs-string">&quot;123456&quot;</span>;<br><span class="hljs-type">String</span> <span class="hljs-variable">newuserName</span> <span class="hljs-operator">=</span> userName.trim();<br><span class="hljs-keyword">if</span> (newuserName.equalsIgnoreCase(userInputUserName))<br>&#123;<br>    System.out.println(<span class="hljs-string">&quot;账号正确&quot;</span>);<br>    <span class="hljs-keyword">if</span> (passWord.equals(userInputpassWord))<br>    &#123;<br>        System.out.println(<span class="hljs-string">&quot;密码正确&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        System.out.println(<span class="hljs-string">&quot;密码错误&quot;</span>);<br>    &#125;<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>    System.out.println(<span class="hljs-string">&quot;账号错误&quot;</span>);<br>&#125;<br><br>--------------------------------------------------------------------<br><span class="hljs-comment">//简化后</span><br><span class="hljs-type">String</span> <span class="hljs-variable">userInputUserName</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;adMIN&quot;</span>;<br>String userInputpassWord=<span class="hljs-string">&quot;123456&quot;</span>;<br><span class="hljs-keyword">if</span> (userInputUserName.trim().equalsIgnoreCase(<span class="hljs-string">&quot;admin&quot;</span>)&amp;&amp;userInputpassWord.equals(<span class="hljs-string">&quot;123456&quot;</span>))<br>&#123;<br>    System.out.println(<span class="hljs-literal">true</span>);<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>    System.out.println(<span class="hljs-literal">false</span>);<br>&#125;<br></code></pre></td></tr></table></figure><hr><blockquote><p>4、取前后的值</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java">String s1=<span class="hljs-string">&quot;name=任cool&quot;</span>;<br>String[] s2= s1.split(<span class="hljs-string">&quot;=&quot;</span>);<br>System.out.println(<span class="hljs-string">&quot;这是等号前面的值：&quot;</span>+s2[<span class="hljs-number">0</span>]);<br>System.out.println(<span class="hljs-string">&quot;这是等号后面的值：&quot;</span>+s2[<span class="hljs-number">1</span>]);<br></code></pre></td></tr></table></figure><hr><blockquote><p>5、判断是否为jpg文件</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//String s1= &quot;c:/a/b/C.JPG&quot;;</span><br>String s1= <span class="hljs-string">&quot;c:/a/b/C.TXT&quot;</span>;<br>String s2=s1.toLowerCase(Locale.ROOT);<br><span class="hljs-keyword">if</span> (s2.contains(<span class="hljs-string">&quot;.jpg&quot;</span>))<br>&#123;<br>    System.out.println(<span class="hljs-string">&quot;有jpg文件&quot;</span>);<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>    System.out.println(<span class="hljs-string">&quot;没有jpg文件&quot;</span>);<br>&#125;<br><br>--------------------------------------------------------------------<br><span class="hljs-comment">//简化后</span><br>String s1= <span class="hljs-string">&quot;c:/a/b/C.JPG&quot;</span>;<br>System.out.println(s1.toLowerCase().contains(<span class="hljs-string">&quot;.jpg&quot;</span>));<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part2</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P2-1  文件、日期等常用类</title>
    <link href="/2024/08/02/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part2-%E7%AC%94%E8%AE%B0/P2-1%20%E6%96%87%E4%BB%B6%E3%80%81%E6%97%A5%E6%9C%9F%E7%AD%89%E5%B8%B8%E7%94%A8%E7%B1%BB/"/>
    <url>/2024/08/02/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part2-%E7%AC%94%E8%AE%B0/P2-1%20%E6%96%87%E4%BB%B6%E3%80%81%E6%97%A5%E6%9C%9F%E7%AD%89%E5%B8%B8%E7%94%A8%E7%B1%BB/</url>
    
    <content type="html"><![CDATA[<h1 id="文件、日期等常用类"><a href="#文件、日期等常用类" class="headerlink" title="文件、日期等常用类"></a>文件、日期等常用类</h1><hr><h2 id="常用类：File"><a href="#常用类：File" class="headerlink" title="常用类：File"></a>常用类：File</h2><ul><li>1、输入输出、IO；文件、文件夹（目录）<ul><li>输入：读文件</li><li>输出：写文件</li><li>程序员喜欢称文件夹为<strong>目录</strong></li></ul></li><li>2、<strong>如何显示文件的扩展名（程序员必备）</strong><ul><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240802/%E6%96%87%E4%BB%B6%E6%89%A9%E5%B1%95%E5%90%8D.7egol7y0ll.webp" alt="文件扩展名"></li></ul></li><li>3、import java.io.File（引用类库）</li><li>4、File:代表文件或者目录（文件夹）.如果根据字符串创建File对象的话，必须用new；<ul><li>如果在Windows下，复制出来的路径默认是用“\”分割的，需要转义（IDEA会自动转义），也可以改成“&#x2F;”<ul><li>因为Windows的路径复制默认是\，而Linux、Mac默认是&#x2F;</li><li>所以改成\去兼容mac把，Windows其实是兼容这种写法的<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">File</span> <span class="hljs-variable">fl</span> <span class="hljs-operator">=</span><span class="hljs-keyword">new</span> <span class="hljs-title class_">File</span>(<span class="hljs-string">&quot;D:/Users/Desktop/test.txt&quot;</span>);<br></code></pre></td></tr></table></figure></li></ul></li></ul></li><li>5、File只是代表逻辑上的一个文件或者目录（文件夹），不代表一定存在</li></ul><h3 id="File类主要成员"><a href="#File类主要成员" class="headerlink" title="File类主要成员"></a>File类主要成员</h3><p><strong>方法前面的数据类型就是返回值的类型</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java">delete():<span class="hljs-comment">//删除(如果是非空目录，会删除失败，但不会提示)</span><br><span class="hljs-type">boolean</span> <span class="hljs-title function_">exists</span><span class="hljs-params">()</span>:<span class="hljs-comment">//是否存在</span><br>String <span class="hljs-title function_">getName</span><span class="hljs-params">()</span>:<span class="hljs-comment">//获得名称（最后一部分）</span><br>Strin <span class="hljs-title function_">getParent</span><span class="hljs-params">()</span>、File <span class="hljs-title function_">getParentFile</span><span class="hljs-params">()</span>:<span class="hljs-comment">//得到上一级</span><br>getPath():<span class="hljs-comment">//得到路径部分</span><br><span class="hljs-type">boolean</span> <span class="hljs-title function_">isDirectory</span><span class="hljs-params">()</span>:<span class="hljs-comment">//是否是目录</span><br><span class="hljs-type">boolean</span> <span class="hljs-title function_">isFile</span><span class="hljs-params">()</span>:<span class="hljs-comment">//是否是文件</span><br>String[] list()、File[] listFiles():<span class="hljs-comment">//获得子项（文件及目录），不包含更下一级</span><br>mkdirs():<span class="hljs-comment">//如果这个目录不存在，则创建；</span><br>        <span class="hljs-comment">//如果上N 级目录不存在，也把他们创建起来，不要错误调用成了mkdir()</span><br></code></pre></td></tr></table></figure><ul><li>注意：文件夹的名字有可能会和文本的名字一样，mkdirs也是只创建文件夹</li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240802/%E6%96%87%E4%BB%B6%E5%A4%B9%E5%92%8C%E6%96%87%E6%9C%AC%E7%9A%84%E5%90%8D%E5%AD%97.231s0l7q0f.webp" alt="文件夹和文本的名字"></p><hr><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">File</span> <span class="hljs-variable">fl</span> <span class="hljs-operator">=</span><span class="hljs-keyword">new</span> <span class="hljs-title class_">File</span>(<span class="hljs-string">&quot;E:/temp/test.txt&quot;</span>);<br><span class="hljs-comment">// System.out.println(fl);</span><br><span class="hljs-type">File</span> <span class="hljs-variable">fl1</span> <span class="hljs-operator">=</span><span class="hljs-keyword">new</span> <span class="hljs-title class_">File</span>(<span class="hljs-string">&quot;E:/temp&quot;</span>);<br><span class="hljs-comment">//System.out.println(fl1);</span><br><span class="hljs-comment">//delete()://删除(如果是非空目录，会删除失败，但不会提示)</span><br>fl.delete();<br><span class="hljs-comment">//fl1.delete();</span><br><br><span class="hljs-comment">//boolean exists()://是否存在</span><br>System.out.println(fl.exists());<br>System.out.println(fl1.exists());<br><span class="hljs-comment">//String getName()://获得名称（最后一部分）</span><br>System.out.println(fl.getName());<br>System.out.println(fl1.getName());<br><span class="hljs-comment">//Strin getParent()、File getParentFile()://得到上一级</span><br>System.out.println(fl.getParent());<br>System.out.println(fl1.getParentFile());<br><span class="hljs-comment">//getPath()://得到路径部分</span><br>System.out.println(fl.getPath());<br><span class="hljs-comment">//boolean isDirectory()://是否是目录</span><br>System.out.println(fl1.isDirectory());<br><span class="hljs-comment">//boolean isFile()://是否是文件</span><br>System.out.println(fl.isFile());<br><span class="hljs-comment">//String[] list()、File[] listFiles()://获得子项（文件及目录），不包含更下一级</span><br>String[] files =fl1.list();<br><span class="hljs-keyword">for</span> (String file :files)<br>&#123;<br>    System.out.println(file);<br>&#125;<br><span class="hljs-comment">//mkdirs()://如果这个目录不存在，则创建；//如果上N 级目录不存在，也把他们创建起来，不要错误调用成了mkdir()</span><br>fl.mkdirs();<br></code></pre></td></tr></table></figure><hr><h2 id="常用类：日期"><a href="#常用类：日期" class="headerlink" title="常用类：日期"></a>常用类：日期</h2><ul><li>1、在JDK1.8之前，日期时间都用Date，但是特别难用</li><li>2、import java.time.XXX  <ul><li>LocalDate：日期</li><li>LocalTime：时间</li><li>LocalDateTime：日期+时间</li></ul></li><li>3、获取当前日期：<ul><li>获取指定日期：</li><li>把字符串解析为日期：</li><li>日期对象.getXXX()用于获取年月日的部分</li></ul></li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240802/%E5%B8%B8%E7%94%A8%E7%B1%BB%E6%97%A5%E6%9C%9F.9nzp4t5gta.webp" alt="常用类日期"></p><hr><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//LocalTime</span><br><span class="hljs-type">LocalTime</span> <span class="hljs-variable">t1</span> <span class="hljs-operator">=</span> LocalTime.now();<span class="hljs-comment">//获取当前时分秒</span><br>System.out.println(t1);<br>LocalTime t2=LocalTime.of(<span class="hljs-number">8</span>,<span class="hljs-number">9</span>,<span class="hljs-number">56</span>);<span class="hljs-comment">//获取制定的时分秒</span><br>System.out.println(t2);<br>LocalTime t3=LocalTime.parse(<span class="hljs-string">&quot;23:26:08&quot;</span>);<span class="hljs-comment">//字符串解析成时间</span><br>System.out.println(t3);<br><span class="hljs-comment">//获取时分秒</span><br>System.out.println(t1.getHour());<br>System.out.println(t1.getMinute());<br>System.out.println(t1.getSecond());<br><br></code></pre></td></tr></table></figure><hr><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//LocalDate</span><br>LocalDate d1=LocalDate.now();<span class="hljs-comment">//获取当前日期</span><br>System.out.println(d1);<br>LocalDate d2=LocalDate.of(<span class="hljs-number">2023</span>,<span class="hljs-number">6</span>,<span class="hljs-number">19</span>);<span class="hljs-comment">//获取指定日期</span><br>System.out.println(d2);<br>LocalDate d3=LocalDate.parse(<span class="hljs-string">&quot;1998-02-08&quot;</span>);<span class="hljs-comment">//把字符串解析为日期</span><br>System.out.println(d3);<br><br>System.out.println(d3.getYear());<span class="hljs-comment">//获取年</span><br>System.out.println(d3.getMonth());<span class="hljs-comment">//获取英语的月</span><br>System.out.println(d3.getMonthValue());<span class="hljs-comment">//获取数字的月</span><br>System.out.println(d3.getDayOfMonth());<span class="hljs-comment">//这月的第几天</span><br>System.out.println(d3.getDayOfWeek());<span class="hljs-comment">//这周的第几天</span><br>System.out.println(d3.getDayOfYear());<span class="hljs-comment">//这年的第几天</span><br></code></pre></td></tr></table></figure><hr><h2 id="常用类：日期、时间"><a href="#常用类：日期、时间" class="headerlink" title="常用类：日期、时间"></a>常用类：日期、时间</h2><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240802/%E5%B8%B8%E7%94%A8%E7%B1%BB%E6%97%A5%E6%9C%9F%E6%97%B6%E9%97%B4.86tk321c2n.webp" alt="常用类日期时间"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//LocalDateTime</span><br> LocalDateTime dt1=LocalDateTime.now();<br>System.out.println(dt1);<br>LocalDate d2=LocalDate.of(<span class="hljs-number">1998</span>,<span class="hljs-number">2</span>,<span class="hljs-number">8</span>);<span class="hljs-comment">//获取指定日期</span><br>LocalTime t2=LocalTime.of(<span class="hljs-number">12</span>,<span class="hljs-number">24</span>,<span class="hljs-number">59</span>);<span class="hljs-comment">//获取制定的时分秒</span><br>LocalDateTime dt2=LocalDateTime.of(d2,t2);<br>System.out.println(dt2);<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * LocalDateTime lt = LocalDateTime.parse(&quot;2018-12-30T19:34:50.63&quot;);</span><br><span class="hljs-comment"> *需要解析后才能正常输出</span><br><span class="hljs-comment">  *</span><br><span class="hljs-comment">  */</span><br>LocalDateTime dt3=LocalDateTime.parse(<span class="hljs-string">&quot;1997-03-17T11:59:59&quot;</span>);<br>System.out.println(dt3);<br><br>System.out.println(dt1.getDayOfMonth());<br>System.out.println(dt1.getDayOfWeek());<br>System.out.println(dt1.getDayOfYear());<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part2</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P1-13  方法</title>
    <link href="/2024/08/01/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part1-%E7%AC%94%E8%AE%B0/P1-13%20%E6%96%B9%E6%B3%95/"/>
    <url>/2024/08/01/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part1-%E7%AC%94%E8%AE%B0/P1-13%20%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h1 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h1><h2 id="什么是方法"><a href="#什么是方法" class="headerlink" title="什么是方法"></a>什么是方法</h2><ul><li>1、程序&#x3D;命令+数据+逻辑</li><li>2、方法也可以叫函数</li><li>3、方法就是组成程序的可以<strong>重复使用</strong>的积木，方法把复杂的N行代码封装起来，让使用者可以通过“方法名”调用(使用)。</li><li>比如println()内部就很复杂</li></ul><h2 id="方法的组成"><a href="#方法的组成" class="headerlink" title="方法的组成"></a>方法的组成</h2><p>方法由方法名、参数、返回值组成</p><ul><li>1、方法名是别人调用本“命令”的标识符</li><li>2、参数是调用方法的时候传递的数据<ul><li>方法可能没有参数，也可能有1个或N个参数</li></ul></li><li>调用方法的时候要足量、正确的类型的传递参数</li><li>3、返回值是方法调用完成的结果。方法可能没有返回值</li><li>对于有返回值的方法，我们也可以忽略返回值</li></ul><h2 id="两种方法"><a href="#两种方法" class="headerlink" title="两种方法"></a>两种方法</h2><p>1、别人写好的方法：JDK内置的库中的方法；第三方库中的方法</p><p>2、自己写的方法：给自己或者别人使用的方法</p><p>先学怎么调用别人的，熟练了再自己写</p><h2 id="重载方法"><a href="#重载方法" class="headerlink" title="重载方法"></a>重载方法</h2><ul><li>允许存在一个以上的同名方法，只要参数个数或参数类型不同即可。这些方法叫做“重载方法”。</li><li>编译器会根据调用的时候传递参数的个数以及类型来自动匹配合适的重载方法。</li></ul><h2 id="方法的定义语法"><a href="#方法的定义语法" class="headerlink" title="方法的定义语法"></a>方法的定义语法</h2><p>Ctrl+F12 可以快速看当前页面所有的方法列表</p><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240801/%E6%96%B9%E6%B3%95%E7%9A%84%E5%AE%9A%E4%B9%89%E8%AF%AD%E6%B3%95.86tk1qsfae.webp" alt="方法的定义语法"></p><h2 id="方法的调用语法"><a href="#方法的调用语法" class="headerlink" title="方法的调用语法"></a>方法的调用语法</h2><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240801/%E6%96%B9%E6%B3%95%E7%9A%84%E8%B0%83%E7%94%A8%E8%AF%AD%E6%B3%95.8z6fjh910k.webp" alt="方法的调用语法"></p>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part1</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P1-12  数组案例</title>
    <link href="/2024/08/01/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part1-%E7%AC%94%E8%AE%B0/P1-12%20%E6%95%B0%E7%BB%84%E6%A1%88%E4%BE%8B/"/>
    <url>/2024/08/01/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part1-%E7%AC%94%E8%AE%B0/P1-12%20%E6%95%B0%E7%BB%84%E6%A1%88%E4%BE%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="数组案例"><a href="#数组案例" class="headerlink" title="数组案例"></a>数组案例</h1><blockquote><p>普通算法：for、if…<br>不用第三方，内置的库<br><strong>用普通算法达到把问题解决</strong>的目的才是牛人。初学者尽量少依赖于第三方那个的库</p></blockquote><h2 id="倒序输出数组的值"><a href="#倒序输出数组的值" class="headerlink" title="倒序输出数组的值"></a>倒序输出数组的值</h2><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240801/%E9%80%86%E5%BA%8F%E8%BE%93%E5%87%BA%E6%95%B0%E7%BB%84%E7%9A%84%E5%80%BC.1vyk3ouh79.webp" alt="逆序输出数组的值"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//逆序输出</span><br>String[] names =&#123;<span class="hljs-string">&quot;rzx&quot;</span>,<span class="hljs-string">&quot;cool&quot;</span>,<span class="hljs-string">&quot;shuai&quot;</span>&#125;;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i= names.length-<span class="hljs-number">1</span>;i&gt;=<span class="hljs-number">0</span>;i--)<br>&#123;<br>    System.out.println(names[i]);<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="计算2个等长数组元素逐位的和"><a href="#计算2个等长数组元素逐位的和" class="headerlink" title="计算2个等长数组元素逐位的和"></a>计算2个等长数组元素逐位的和</h2><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240801/%E8%AE%A1%E7%AE%972%E4%B8%AA%E7%99%BB%E5%9C%BA%E6%95%B0%E7%BB%84%E5%85%83%E7%B4%A0%E9%80%90%E4%BD%8D.99t9cgf4wk.webp" alt="计算2个登场数组元素逐位"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//计算2个等长数组元素逐位的和</span><br><span class="hljs-type">int</span>[] nums1=&#123;<span class="hljs-number">6</span>,<span class="hljs-number">8</span>,<span class="hljs-number">11</span>&#125;;<br><span class="hljs-type">int</span>[] nums2=&#123;<span class="hljs-number">8</span>,<span class="hljs-number">6</span>,<span class="hljs-number">12</span>&#125;;<br><span class="hljs-type">int</span>[] nums3=<span class="hljs-keyword">new</span> <span class="hljs-title class_">int</span>[nums1.length];<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span><span class="hljs-number">0</span>;i&lt;=nums1.length-<span class="hljs-number">1</span>;i++)<br>&#123;<br>    nums3[i]=nums1[i] + nums2[i];<br>&#125;<br>System.out.println(Arrays.toString(nums3));<br></code></pre></td></tr></table></figure><h2 id="查找数组中最大值"><a href="#查找数组中最大值" class="headerlink" title="查找数组中最大值"></a>查找数组中最大值</h2><ul><li>思路很重要</li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240801/%E6%9F%A5%E6%89%BE%E6%95%B0%E7%BB%84%E4%B8%AD%E6%9C%80%E5%A4%A7%E5%80%BC.4g4egbufte.webp" alt="查找数组中最大值"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//查找数组中最大值</span><br><span class="hljs-type">int</span>[] nums=&#123;<span class="hljs-number">3</span>,<span class="hljs-number">5</span>,<span class="hljs-number">8</span>,<span class="hljs-number">93</span>,<span class="hljs-number">777</span>,<span class="hljs-number">666</span>,<span class="hljs-number">888</span>,<span class="hljs-number">999</span>,<span class="hljs-number">1888</span>,<span class="hljs-number">8888</span>,<span class="hljs-number">9999</span>,<span class="hljs-number">1314</span>&#125;;<br><span class="hljs-type">int</span> max=nums[<span class="hljs-number">0</span>];<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;nums.length;i++)<br>&#123;<br>    <span class="hljs-type">int</span> n=nums[i];<span class="hljs-comment">//找一个变量来存放循环取出来的值</span><br>    <span class="hljs-keyword">if</span> (n&gt;max)<br>    &#123;<br>        max=n;<span class="hljs-comment">//当取出来的值大于前一个最大值时，则更新最大值</span><br>    &#125;<br>&#125;<br>System.out.println(max);<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part1</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P1-11  数组其他</title>
    <link href="/2024/08/01/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part1-%E7%AC%94%E8%AE%B0/P1-11%20%E6%95%B0%E7%BB%84%E5%85%B6%E4%BB%96/"/>
    <url>/2024/08/01/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part1-%E7%AC%94%E8%AE%B0/P1-11%20%E6%95%B0%E7%BB%84%E5%85%B6%E4%BB%96/</url>
    
    <content type="html"><![CDATA[<h1 id="数组其他"><a href="#数组其他" class="headerlink" title="数组其他"></a>数组其他</h1><h2 id="一切类型皆可数组"><a href="#一切类型皆可数组" class="headerlink" title="一切类型皆可数组"></a>一切类型皆可数组</h2><ul><li>1、String[] a&#x3D;new String[10];<ul><li>String[] a&#x3D;{“ccc”,”yyds”,”rzx”};</li></ul></li><li>2、byte[] bytes&#x3D;new byte[];<ul><li>byte[] bytes&#x3D;{3,5,7,9,10,12};</li></ul></li></ul><h2 id="数组长度"><a href="#数组长度" class="headerlink" title="数组长度"></a>数组长度</h2><ul><li>1、数组有一个特殊的用法是：数组名.length</li><li>这样可以获得数组的长度，这样可以避免上面吧数组长度写死的问题<ul><li>int len &#x3D;al.length</li></ul></li><li>2、避免魔法数</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">int</span>[] sums =&#123;<span class="hljs-number">33</span>,<span class="hljs-number">66</span>,<span class="hljs-number">88</span>,<span class="hljs-number">333</span>,<span class="hljs-number">666</span>,<span class="hljs-number">888</span>&#125;;<br><span class="hljs-comment">//从第0个元素，遍历到第“6-1”个元素   这个6就是所谓的魔法数~</span><br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i= <span class="hljs-number">0</span>;i&lt;=<span class="hljs-number">6</span>-<span class="hljs-number">1</span>;i++)<br>&#123;<br>    System.out.println(sums[i]);<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="案例1：数组的正序遍历"><a href="#案例1：数组的正序遍历" class="headerlink" title="案例1：数组的正序遍历"></a>案例1：数组的正序遍历</h3><p>写法1</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">int</span>[] sums =&#123;<span class="hljs-number">33</span>,<span class="hljs-number">66</span>,<span class="hljs-number">88</span>,<span class="hljs-number">333</span>,<span class="hljs-number">666</span>,<span class="hljs-number">888</span>&#125;;<br><span class="hljs-comment">//从第0个元素，遍历到第“length-1”个元素</span><br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i= <span class="hljs-number">0</span>;i&lt;=sums.length-<span class="hljs-number">1</span>;i++)<br>&#123;<br>    System.out.println(sums[i]);<br>&#125;<br></code></pre></td></tr></table></figure><p>写法2</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">int</span>[] sums =&#123;<span class="hljs-number">33</span>,<span class="hljs-number">66</span>,<span class="hljs-number">88</span>,<span class="hljs-number">333</span>,<span class="hljs-number">666</span>,<span class="hljs-number">888</span>&#125;;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i= <span class="hljs-number">0</span>;i&lt;sums.length;i++)<br>&#123;<br>    System.out.println(sums[i]);<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="案例2：数组倒序遍历"><a href="#案例2：数组倒序遍历" class="headerlink" title="案例2：数组倒序遍历"></a>案例2：数组倒序遍历</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">int</span>[] sums =&#123;<span class="hljs-number">33</span>,<span class="hljs-number">66</span>,<span class="hljs-number">88</span>,<span class="hljs-number">333</span>,<span class="hljs-number">666</span>,<span class="hljs-number">888</span>&#125;;<br><span class="hljs-comment">//从第“length-1”个元素，遍历到第0个元素</span><br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i= sums.length-<span class="hljs-number">1</span>;i&gt;=<span class="hljs-number">0</span>;i--)<br>&#123;<br>    System.out.println(sums[i]);<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="增强for循环"><a href="#增强for循环" class="headerlink" title="增强for循环"></a>增强for循环</h2><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240801/%E5%A2%9E%E5%BC%BAfor%E5%BE%AA%E7%8E%AF.58h9y03glv.webp" alt="增强for循环"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">int</span>[] sums =&#123;<span class="hljs-number">33</span>,<span class="hljs-number">66</span>,<span class="hljs-number">88</span>,<span class="hljs-number">333</span>,<span class="hljs-number">666</span>,<span class="hljs-number">888</span>&#125;;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> n:sums)<span class="hljs-comment">//遍历nums的每个元素，每个遍历到的元素用变量n来获取，对于每个遍历到的元素，都执行一次循环体</span><br>&#123;<br>    System.out.println(n);<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="数组的打印"><a href="#数组的打印" class="headerlink" title="数组的打印"></a>数组的打印</h2><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240801/%E6%95%B0%E7%BB%84%E7%9A%84%E6%89%93%E5%8D%B0.9kg35jynxs.webp" alt="数组的打印"></p><ul><li>练习<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java">String[] strs=&#123;<span class="hljs-string">&quot;rzx&quot;</span>,<span class="hljs-string">&quot;nzs&quot;</span>,<span class="hljs-string">&quot;18&quot;</span>&#125;;<br>System.out.println(strs);<br><span class="hljs-type">String</span> <span class="hljs-variable">str1</span> <span class="hljs-operator">=</span>  Arrays.toString(strs);<span class="hljs-comment">//把数组转换为“可读性强”的字符串</span><br>System.out.println(str1);<br></code></pre></td></tr></table></figure></li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240801/%E6%95%B0%E7%BB%84%E6%89%93%E5%8D%B0.9nzp39ud3c.webp" alt="数组打印"></p>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part1</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P1-10  数组</title>
    <link href="/2024/08/01/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part1-%E7%AC%94%E8%AE%B0/P1-10%20%E6%95%B0%E7%BB%84/"/>
    <url>/2024/08/01/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part1-%E7%AC%94%E8%AE%B0/P1-10%20%E6%95%B0%E7%BB%84/</url>
    
    <content type="html"><![CDATA[<h1 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h1><h2 id="为什么有数组"><a href="#为什么有数组" class="headerlink" title="为什么有数组"></a>为什么有数组</h2><ul><li>1、如果需要记录全班同学的姓名，难道要声明60个String变量？</li><li>2、<strong>有序</strong>数据的集合就是数据（Array）</li><li>3、数组中每项都有一个编号，被称为数组下标<ul><li>通过下标就可以找到数组中指定的数据，也可以给指定位置赋值</li></ul></li></ul><h2 id="数组的定义和初始化"><a href="#数组的定义和初始化" class="headerlink" title="数组的定义和初始化"></a>数组的定义和初始化</h2><ul><li>1、int[] a&#x3D;{1,2,3,4,5,6,7,8,9,10};这个常用，指定初始值和长度<ul><li>int a[] &#x3D; {1,2,3,4,5,6,7,8,9,10};下面这个也行，功能没区别，就是书写格式变了一点</li></ul></li><li>2、int[] a&#x3D;new int[10];声明长度，不赋初始值<ul><li>int a[]&#x3D;new int[10];</li><li>每个元素的值为默认值</li><li>int，double等默认值是0；boolean默认值是false；String等默认值是null</li></ul></li></ul><h2 id="引用元素"><a href="#引用元素" class="headerlink" title="引用元素"></a>引用元素</h2><ul><li>1、数据组员下标从0开始，最后一个元素的下标为“长度-1”</li><li>2、引用数组的形式：数组名[下标]</li><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240801/%E6%95%B0%E7%BB%841.2krtnefljc.webp" alt="数组1"></li></ul><h2 id="数组-下标使用"><a href="#数组-下标使用" class="headerlink" title="数组+下标使用"></a>数组+下标使用</h2><ul><li>1、a[2]单独使用或者放到&#x3D;右边，就是取值<ul><li>放到&#x3D;左边就是赋值</li></ul></li><li>2、数组元素完全可以当做变量使用<ul><li>进行数学运算、赋值操作、自加自减等</li></ul></li><li>3、举例  元素的赋值&#x2F;取值</li></ul><h2 id="数组越界"><a href="#数组越界" class="headerlink" title="数组越界"></a>数组越界</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">int</span>[] a =&#123;<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>&#125;;<br>System.out.println(a[<span class="hljs-number">3</span>]);<br></code></pre></td></tr></table></figure><blockquote><p>数组下标超范围了<br><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240801/%E6%95%B0%E6%8D%AE%E8%B6%8A%E7%95%8C.4xug4m9epp.webp" alt="数据越界"></p></blockquote>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part1</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P1-9  循环结构</title>
    <link href="/2024/08/01/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part1-%E7%AC%94%E8%AE%B0/P1-9%20%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84/"/>
    <url>/2024/08/01/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part1-%E7%AC%94%E8%AE%B0/P1-9%20%E5%BE%AA%E7%8E%AF%E7%BB%93%E6%9E%84/</url>
    
    <content type="html"><![CDATA[<h1 id="循环结构"><a href="#循环结构" class="headerlink" title="循环结构"></a>循环结构</h1><p><strong>目的：反复执行N次(或一直执行)某段代码</strong></p><ul><li>好比操场上跑圈一样，重复绕圈跑步，直到自己的目标</li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240801/%E6%93%8D%E5%9C%BA%E8%B7%91%E5%9C%88.5xajhhid1k.webp" alt="操场跑圈"></p><p>DRY原则:<strong>Don’t Repeat Yourself.</strong></p><ul><li>不要重复你自己，(不要重复复制粘贴代码)</li><li>当你发现程序里面有一些代码需要用<strong>复制粘贴</strong>来重复使用的时候，那就说明你的这个代码是有问题的，需要重构</li><li>重构的意思就是说用另外一种算法来把它重新写，而不是把之前的一大堆代码复制粘贴到新的地方去使用<br>三种语句：for(重点)、while(次之)、do……while(不讲)</li></ul><hr><h2 id="while语句"><a href="#while语句" class="headerlink" title="while语句"></a>while语句</h2><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240801/while.5q7bm2i11i.webp" alt="while"></p><p>举例：出了什么问题？</p><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240801/%E9%97%AE%E9%A2%98.5xajhkaiw3.webp" alt="问题"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//错误演示</span><br> <span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span><span class="hljs-number">3</span>;<br><span class="hljs-keyword">while</span> (i&lt;<span class="hljs-number">10</span>);<span class="hljs-comment">//如果后面加了; 那么i一直=3 就会一直满足如i&lt;10 ，所以一直在死循环 while (i&lt;10)&#123;&#125;;</span><br>&#123;<br>    System.out.println(i);<br>    i++;<br>&#125;<br>System.out.println(<span class="hljs-string">&quot;over&quot;</span>);<br></code></pre></td></tr></table></figure><h3 id="while案例："><a href="#while案例：" class="headerlink" title="while案例："></a>while案例：</h3><ul><li><p>1、从10倒数到0</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span><span class="hljs-number">10</span>;<br><span class="hljs-keyword">while</span> (i&gt;=<span class="hljs-number">0</span>)<br>&#123;<br>    System.out.println(i);<br>    i--;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>2、统计0到10的和</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//统计0到10的和</span><br><span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br><span class="hljs-type">int</span> <span class="hljs-variable">sum</span> <span class="hljs-operator">=</span><span class="hljs-number">0</span>;<br><span class="hljs-keyword">while</span> (i&lt;=<span class="hljs-number">10</span>)<br>&#123;<br>    sum = sum+i;<br>    System.out.println(<span class="hljs-string">&quot; sum=&quot;</span>+sum+<span class="hljs-string">&quot; i=&quot;</span>+i);<span class="hljs-comment">//输出过程，体验计算的过程</span><br>    i++;<br>&#125;<br>System.out.println(sum);<br></code></pre></td></tr></table></figure><p>while练习</p></li><li><p>1、用while实现：从5打印到11</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span><span class="hljs-number">5</span>;<br><span class="hljs-keyword">while</span> (i&lt;<span class="hljs-number">12</span>)<br>&#123;<br>    System.out.println(i);<br>    i++;<br>&#125;<br></code></pre></td></tr></table></figure><hr><h2 id="for循环结构"><a href="#for循环结构" class="headerlink" title="for循环结构"></a>for循环结构</h2><p>既生while何生for</p><blockquote><p>while、do……while、for都可以实现循环，可以互换。<br>不同需求，用不同语法难易程序不同<br>使用频率：for &gt;   while   &gt;   do……while</p></blockquote><h3 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h3><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240801/for%E5%BE%AA%E7%8E%AF.73tuqbwv7q.webp" alt="for循环"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">for</span>(表达式<span class="hljs-number">1</span>;表达式<span class="hljs-number">2</span>;表达式<span class="hljs-number">3</span>)<br>&#123;<br>    循环体<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>原理：<br>(1)先执行表达式1，只会执行一次<br>(2)执行表达式2，如果该表达式2结果为真，执行for循环体，然后执行下面第(3)步；如果为假，直接结束for循环<br>(3)执行表达式3，然后跳到第(2)步重新执行</p></blockquote><p>最常用用法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span><span class="hljs-number">0</span>;i&lt;=<span class="hljs-number">3</span>;i++)<br>&#123;<br>    System.out.println(i);<br>&#125;<br><span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span><span class="hljs-number">0</span>;<br></code></pre></td></tr></table></figure><p>上面的例子用while语句去理解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span><span class="hljs-number">0</span>;<br><span class="hljs-keyword">while</span> (i&lt;=<span class="hljs-number">3</span>)<br>&#123;<br>    System.out.println(i);<br>    i++;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="细节-作用域"><a href="#细节-作用域" class="headerlink" title="细节-作用域"></a>细节-作用域</h3><p><strong>区别在于作用域；for循环内定义变量的作用域问题</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span> (i=<span class="hljs-number">0</span>;i&lt;=<span class="hljs-number">3</span>;i++)<span class="hljs-comment">//里面的i=0，是引用了上面声明的变量i了</span><br>&#123;<br>    System.out.println(i);<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="for案例"><a href="#for案例" class="headerlink" title="for案例"></a>for案例</h3><blockquote><p>初始逻辑是什么;<br>循环条件式什么;<br>每次循环之后干什么;</p></blockquote><ul><li>1、从10倒数到0<blockquote><p>初始逻辑  int i&#x3D;10<br>循环条件  i&gt;&#x3D;0<br>每次循环后的动作  i–</p></blockquote></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i=<span class="hljs-number">10</span>;i&gt;=<span class="hljs-number">0</span>;i--)<br>&#123;<br>    System.out.println(i);<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>2、统计0到10的和</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">int</span> <span class="hljs-variable">sum</span> <span class="hljs-operator">=</span><span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span><span class="hljs-number">0</span>;i&lt;=<span class="hljs-number">10</span>;i++)<br>&#123;<br>    sum=sum+i;<br>&#125;<br>System.out.println(sum);<br></code></pre></td></tr></table></figure><ul><li>3、输出2,4,6,8,10</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span><span class="hljs-number">2</span>;i&lt;=<span class="hljs-number">10</span>;i=i+<span class="hljs-number">2</span>)<br>&#123;<br>    System.out.println(i);<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h3><ul><li>1、用for实现：从5打印到11<blockquote><p>初始逻辑  int i&#x3D;5<br>循环条件  i&lt;&#x3D;11<br>每次循环后的动作  i++</p></blockquote></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i=<span class="hljs-number">5</span>;i&lt;=<span class="hljs-number">11</span>;i++)<br>&#123;<br>    System.out.println(i);<br>&#125;<br></code></pre></td></tr></table></figure><hr><h2 id="循环结构其他用法"><a href="#循环结构其他用法" class="headerlink" title="循环结构其他用法"></a>循环结构其他用法</h2><blockquote><p>循环嵌套：循环里套着循环。原地转一圈，就跑一步。<br>嵌套循环可以是嵌套N层，但一般两层</p><p>三种循环(while、do……while、for)可以互相嵌套<br>不过使用最多的是for循环嵌套</p></blockquote><h3 id="for循环嵌套"><a href="#for循环嵌套" class="headerlink" title="for循环嵌套"></a>for循环嵌套</h3><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240801/for%E5%BE%AA%E7%8E%AF%E5%B5%8C%E5%A5%97.9dcv9thlon.webp" alt="for循环嵌套"></p><ul><li>练习<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"> <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">3</span>;i++)<br>&#123;<br>    System.out.println(<span class="hljs-string">&quot;进入内循环&quot;</span>);<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;j&lt;=<span class="hljs-number">3</span>;j++)<br>    &#123;<br>        System.out.println(i+<span class="hljs-string">&quot;,&quot;</span>+j);<br>    &#125;<br>    System.out.println(<span class="hljs-string">&quot;内循环结束&quot;</span>);<br>&#125;<br><br></code></pre></td></tr></table></figure></li></ul><hr><h3 id="break和continue"><a href="#break和continue" class="headerlink" title="break和continue"></a>break和continue</h3><ul><li>1、break和continue都可以和while、do while、for 一起用</li><li>2、break：强制结束循环</li><li>3、continue：不再执行本次循环后面的代码，进行下一次循环</li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240801/break%E5%92%8Ccontinue.6f0l6b9c79.webp" alt="break和continue"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;i&lt;=<span class="hljs-number">10</span>;i++)<br>&#123;<br>    <span class="hljs-keyword">if</span> (i%<span class="hljs-number">2</span>==<span class="hljs-number">0</span>)<br>    &#123;<br>        <span class="hljs-keyword">break</span>;<br>        <span class="hljs-comment">//continue;</span><br>    &#125;<br>    System.out.println(i);<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>大道至简</strong></p>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part1</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P1-8  选择结构</title>
    <link href="/2024/07/31/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part1-%E7%AC%94%E8%AE%B0/P1-8%20%E9%80%89%E6%8B%A9%E7%BB%93%E6%9E%84/"/>
    <url>/2024/07/31/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part1-%E7%AC%94%E8%AE%B0/P1-8%20%E9%80%89%E6%8B%A9%E7%BB%93%E6%9E%84/</url>
    
    <content type="html"><![CDATA[<h1 id="选择结构"><a href="#选择结构" class="headerlink" title="选择结构"></a>选择结构</h1><blockquote><p>目的：满足某些条件的时候才执行一段代码<br>两种语句：if、switch<br>if用的最多，可以代替switch</p></blockquote><h2 id="if"><a href="#if" class="headerlink" title="if"></a>if</h2><h3 id="第一种if"><a href="#第一种if" class="headerlink" title="第一种if"></a>第一种if</h3><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240731/%E7%AC%AC%E4%B8%80%E7%A7%8Dif.lz9ntdiq.webp" alt="第一种if"></p><ul><li>1、语句可以是单行语句，也可以是复合语句</li><li>2、如果是单行语句，{}可以省略，但<strong>不要省略！！！</strong></li><li>3、整个if是一个逻辑语句，因为不能直接在if后面加分号</li></ul><h3 id="第二种if"><a href="#第二种if" class="headerlink" title="第二种if"></a>第二种if</h3><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240731/%E7%AC%AC%E4%BA%8C%E7%A7%8Dif.4916jhsmbu.webp" alt="第二种if"></p><h3 id="第三种if"><a href="#第三种if" class="headerlink" title="第三种if"></a>第三种if</h3><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240731/%E7%AC%AC%E4%B8%89%E7%A7%8Dif.3yecqcg00w.webp" alt="第三种if"></p><h4 id="两个程序运行的结果"><a href="#两个程序运行的结果" class="headerlink" title="两个程序运行的结果"></a>两个程序运行的结果</h4><ol><li><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span><span class="hljs-number">5</span>;<br><span class="hljs-keyword">if</span> (i==<span class="hljs-number">6</span>);<br>&#123;<br>    System.out.println(<span class="hljs-string">&quot;666&quot;</span>);<br>&#125;<br>System.out.println(<span class="hljs-string">&quot;over&quot;</span>);<br></code></pre></td></tr></table></figure></li><li><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span><span class="hljs-number">5</span>;<br><span class="hljs-keyword">if</span> (i=<span class="hljs-number">6</span>)<br>&#123;<br>    System.out.println(<span class="hljs-string">&quot;666&quot;</span>);<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>    System.out.println(<span class="hljs-string">&quot;555&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure></li></ol><h3 id="if嵌套"><a href="#if嵌套" class="headerlink" title="if嵌套"></a>if嵌套</h3><ul><li>俄罗斯套娃</li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240731/if%E5%B5%8C%E5%A5%97.4uau5vtp32.webp" alt="if嵌套"></p><h2 id="switch"><a href="#switch" class="headerlink" title="switch"></a>switch</h2><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240731/switch.32hvazac75.webp" alt="switch"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">int</span> i=<span class="hljs-number">2</span>;<br><span class="hljs-keyword">switch</span> (i)<br>&#123;<br>    <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<br>        <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:<br>        System.out.println(<span class="hljs-string">&quot;2&quot;</span>);<br>        <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">case</span> <span class="hljs-number">5</span>:<br>    <span class="hljs-keyword">case</span> <span class="hljs-number">8</span>:<br>        System.out.println(<span class="hljs-string">&quot;rzx&quot;</span>);<br>        <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">default</span>:<br>        System.out.println(<span class="hljs-string">&quot;error&quot;</span>);<br>        <span class="hljs-keyword">break</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part1</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P1-7  运算符</title>
    <link href="/2024/07/31/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part1-%E7%AC%94%E8%AE%B0/P1-7%20%E8%BF%90%E7%AE%97%E7%AC%A6/"/>
    <url>/2024/07/31/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part1-%E7%AC%94%E8%AE%B0/P1-7%20%E8%BF%90%E7%AE%97%E7%AC%A6/</url>
    
    <content type="html"><![CDATA[<h1 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h1><h2 id="常用运算符"><a href="#常用运算符" class="headerlink" title="常用运算符"></a>常用运算符</h2><ul><li>+(加)、-(减)、*(乘)、&#x2F;(除)、%(取余)<ul><li>整数和整数运算，结果就是整数</li><li>数值提升</li></ul></li><li>先乘除后加减，可以使用()改变运算优先级</li><li>对于字符串也可以用+进行字符串连接操作</li></ul><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>3+(6+”a”)+(“b”+(1+2)*3)的结果是多少</p><blockquote><p>36ab9</p></blockquote><hr><h2 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h2><h2 id="a-b-将右边表达式的值赋值给左边的变量。这里的-不是相等判断，而是赋值操作"><a href="#a-b-将右边表达式的值赋值给左边的变量。这里的-不是相等判断，而是赋值操作" class="headerlink" title="a&#x3D;b;将右边表达式的值赋值给左边的变量。这里的&#x3D;不是相等判断，而是赋值操作"></a>a&#x3D;b;将右边表达式的值赋值给左边的变量。这里的&#x3D;不是<strong>相等判断</strong>，而是<strong>赋值操作</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">int</span> a;<br><span class="hljs-type">int</span> b;<br><span class="hljs-type">int</span> c;<br>a=<span class="hljs-number">20</span>;<span class="hljs-comment">//将数值20赋值给变量a</span><br>b=a-<span class="hljs-number">10</span>;<span class="hljs-comment">//先计算a-10，然后将计算结果赋值给变量b</span><br>c=a+b;<span class="hljs-comment">//先计算a+b，然后将计算结果赋值给变量c</span><br></code></pre></td></tr></table></figure></h2><h2 id="复合运算符"><a href="#复合运算符" class="headerlink" title="复合运算符"></a>复合运算符</h2><ul><li>能a&#x3D;a+10，就不要a+&#x3D;10。</li><li>代码越傻瓜越好<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java">a+=<span class="hljs-number">10</span>;<span class="hljs-comment">//等价于a=a+10</span><br>a-=<span class="hljs-number">10</span>;<span class="hljs-comment">//等价于a=a-10</span><br>a*=<span class="hljs-number">10</span>;<span class="hljs-comment">//等价于a=a*10</span><br>a/=<span class="hljs-number">10</span>;<span class="hljs-comment">//等价于a=a/10</span><br>a%=<span class="hljs-number">10</span>;<span class="hljs-comment">//等价于a=a%10</span><br>System.out.println(a);<br></code></pre></td></tr></table></figure></li></ul><hr><h3 id="自增-自减"><a href="#自增-自减" class="headerlink" title="自增&#x2F;自减"></a>自增&#x2F;自减</h3><ul><li>++x</li><li>x++</li><li>–y</li><li>y–<br>前后的区分，一个是前置，一个是后置</li></ul><h3 id="顺序执行"><a href="#顺序执行" class="headerlink" title="顺序执行"></a>顺序执行</h3><ul><li>程序从上往下逐条执行，一条执行结束在执行下一条</li><li>过去的就过去了，不会走回头路</li></ul><h2 id="关系运算符"><a href="#关系运算符" class="headerlink" title="关系运算符"></a>关系运算符</h2><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">&lt;   小于<br>&lt;=  小于等于<br>&gt;   大于<br>&gt;=  大于等于<br><span class="hljs-section">==  等于</span><br>!=  不等于<br>相比较的结果就是布尔类型（真/假）<br></code></pre></td></tr></table></figure><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><ul><li>1、不要把a&#x3D;&#x3D;b写成a&#x3D;b</li><li>2、String的相等比较不能用&#x3D;&#x3D;，要用equals<ul><li>s.equals(s1)</li><li>C# &#x2F;Python 都可以直接用&#x3D;&#x3D;去比较</li></ul></li></ul><h2 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h2><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240731/%E9%80%BB%E8%BE%91%E8%BF%90%E7%AE%97%E7%AC%A6.26ldvep0c2.webp" alt="逻辑运算符"></p><h2 id="三元运算符"><a href="#三元运算符" class="headerlink" title="三元运算符"></a>三元运算符</h2><p>表达式1?表达式2:表达式3</p><blockquote><p>如果表达式1的结算为真，以表达式2的值作为整个条件表达式的值，否则以表达式3的值作为整个条件表达式的值<br>简写的if else的写法，真就选第一个值，假就选第二个值</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">int</span> <span class="hljs-variable">a</span> <span class="hljs-operator">=</span><span class="hljs-number">3</span>;<br><span class="hljs-type">int</span> <span class="hljs-variable">b</span> <span class="hljs-operator">=</span> <span class="hljs-number">5</span>;<br><span class="hljs-type">int</span> <span class="hljs-variable">c</span> <span class="hljs-operator">=</span> (a&gt;b?<span class="hljs-number">888</span>:<span class="hljs-number">666</span>);<br>System.out.println(c);<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part1</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P1-6  变量</title>
    <link href="/2024/07/31/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part1-%E7%AC%94%E8%AE%B0/P1-6%20%E5%8F%98%E9%87%8F/"/>
    <url>/2024/07/31/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part1-%E7%AC%94%E8%AE%B0/P1-6%20%E5%8F%98%E9%87%8F/</url>
    
    <content type="html"><![CDATA[<h1 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h1><h2 id="定义变量"><a href="#定义变量" class="headerlink" title="定义变量"></a>定义变量</h2><p><strong>变量先定义，才能使用</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">int</span> <span class="hljs-variable">number</span> <span class="hljs-operator">=</span> <span class="hljs-number">26</span>;<br>System.out.println(number);<br></code></pre></td></tr></table></figure><h2 id="引用已有变量"><a href="#引用已有变量" class="headerlink" title="引用已有变量"></a>引用已有变量</h2><p>  两种作用</p><ul><li>1.读取变量的数据</li><li>2.重新赋值</li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240731/%E5%B7%B2%E6%9C%89%E5%8F%98%E9%87%8F.73tuoxzr3e.webp" alt="已有变量"></p><h2 id="常见错误"><a href="#常见错误" class="headerlink" title="常见错误"></a>常见错误</h2><ul><li>1、变量必须定义才能使用</li><li>2、数据类型错误</li><li>3、变量重名</li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240731/%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF.1e8idd0caq.webp" alt="常见错误"></p><h2 id="变量命名的规范"><a href="#变量命名的规范" class="headerlink" title="变量命名的规范"></a>变量命名的规范</h2><ul><li>1、要取有意义的变量名，不要a1、a2、x1<ul><li>这是程序员默认的潜规则</li><li>这样去写代码，显的不是很专业</li></ul></li><li>2、变量一般小写开头，遵守驼峰法<ul><li>除了第一个单词小写，后面的单词首字母大写<ul><li>比如helloWrold</li></ul></li></ul></li><li>3、如果英语很不好或者专业术语不知道怎么翻译或者非专业程序员，可以根据情况决定是否用中文变量名</li><li>关于<strong>代码坏味道</strong><ul><li>如果平时写代码都是a1、a2的变量的例子和代码风格写的不好的人，显的很不专业，如果进入公司的后续也很难在规范</li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part1</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P1-5  注释</title>
    <link href="/2024/07/31/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part1-%E7%AC%94%E8%AE%B0/P1-5%20%E6%B3%A8%E9%87%8A/"/>
    <url>/2024/07/31/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part1-%E7%AC%94%E8%AE%B0/P1-5%20%E6%B3%A8%E9%87%8A/</url>
    
    <content type="html"><![CDATA[<h1 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h1><h2 id="注释的作用"><a href="#注释的作用" class="headerlink" title="注释的作用"></a>注释的作用</h2><ul><li>被注释的内容，编译器会忽略</li><li>主要作用：对代码进行解释说明。</li><li>原则：适当的注释。自解释的代码<ul><li>终极目标：不写注释，别人也能看懂你的逻辑</li></ul></li><li><strong>副作用：暂时停用部分代码</strong></li></ul><h2 id="三种注释"><a href="#三种注释" class="headerlink" title="三种注释"></a>三种注释</h2><ul><li>1、单行注释：&#x2F;&#x2F;  本行中&#x2F;&#x2F;之后的为主<ul><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240731/%E5%8D%95%E8%A1%8C%E6%B3%A8%E9%87%8A.92q1f967uc.webp" alt="单行注释"></li></ul></li><li>2、多行注释：&#x2F;*    *&#x2F;<ul><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240731/%E5%A4%9A%E8%A1%8C%E6%B3%A8%E9%87%8A.51e20v24hg.webp" alt="多行注释"></li></ul></li><li>3、JavaDoc<ul><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240731/JavaDoc.9dcv8elfzn.webp" alt="JavaDoc"></li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part1</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P1-4 常用数据类型</title>
    <link href="/2024/07/31/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part1-%E7%AC%94%E8%AE%B0/P1-4%20%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
    <url>/2024/07/31/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part1-%E7%AC%94%E8%AE%B0/P1-4%20%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="常用数据类型"><a href="#常用数据类型" class="headerlink" title="常用数据类型"></a>常用数据类型</h1><h2 id="程序-命令-数据-逻辑"><a href="#程序-命令-数据-逻辑" class="headerlink" title="程序&#x3D;命令+数据+逻辑"></a>程序&#x3D;命令+数据+逻辑</h2><ul><li>方法&#x2F;函数<ul><li>查询可用日期,组装载人火箭</li></ul></li><li>数据类型<ul><li>限制每个数据的范围</li><li>int</li></ul></li><li>字面量<ul><li>比如下面的60，306</li></ul></li><li>变量<ul><li>变量就是用来获取别人给你数据的一个途径而已<ul><li>（好比：矿泉水瓶，里面装这水，水就是数据。当我喝了就是把数据给我了）</li></ul></li><li>变量就是数据的中转站，变量就是拿过来数据给别人使用的</li><li>比如date,weight<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">Date</span> <span class="hljs-variable">date</span> <span class="hljs-operator">=</span>查询可用日期(<span class="hljs-string">&quot;载人&quot;</span>)<br><span class="hljs-type">int</span> <span class="hljs-variable">weight</span> <span class="hljs-operator">=</span> <span class="hljs-number">60</span>+<span class="hljs-number">306</span><br><span class="hljs-type">Rocket</span> <span class="hljs-variable">rl</span> <span class="hljs-operator">=</span>组装载人火箭(weight)<br><span class="hljs-keyword">if</span>(date==Date.Today)<br>&#123;<br>  发射火箭(rl,<span class="hljs-number">3</span>);<br>&#125;<br></code></pre></td></tr></table></figure></li></ul></li></ul><h2 id="常用数据类型-1"><a href="#常用数据类型-1" class="headerlink" title="常用数据类型"></a>常用数据类型</h2><ul><li>整数：主要是int。还有long、short、byte等。<ul><li>1、0、-1、365</li></ul></li><li>浮点数：主要是float。还有double<ul><li>0.03、3.14、-1.68</li><li>单精度，双精度</li></ul></li><li>字符：char<ul><li>‘a’、’w’、’鑫’。一个汉字是一个字符，也只能是一个字符，空也不可以</li></ul></li><li>字符串：String<ul><li>“Hello”、”java”、”rzx18”</li><li>字符串中\和换行的转义(难点):”hello\world\n你好”<ul><li>\代表一个字符，显示出来就是\</li><li>\n是换行符</li></ul></li></ul></li><li>布尔值：boolean<ul><li>true、false  真假值</li></ul></li></ul><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><p>变量3部分：变量类型、变量名、变量值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">int</span> <span class="hljs-variable">il</span> <span class="hljs-operator">=</span> <span class="hljs-number">3</span>;<br><span class="hljs-type">int</span> <span class="hljs-variable">age</span> <span class="hljs-operator">=</span> <span class="hljs-number">9</span>;<br>String name=<span class="hljs-string">&quot;任宗鑫&quot;</span>;<br><br></code></pre></td></tr></table></figure><h4 id="规则"><a href="#规则" class="headerlink" title="规则"></a>规则</h4><ul><li>适应于标识符、变量名等命名规则<br><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240731/%E6%A0%87%E8%AF%86%E7%AC%A6%E5%91%BD%E5%90%8D%E8%A7%84%E5%88%99.1hs4b0eb18.webp" alt="标识符命名规则"></li></ul>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part1</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P1-3  编写第一个Java程序</title>
    <link href="/2024/07/30/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part1-%E7%AC%94%E8%AE%B0/P1-3%20%E7%BC%96%E5%86%99%E7%AC%AC%E4%B8%80%E4%B8%AAJava%E7%A8%8B%E5%BA%8F/"/>
    <url>/2024/07/30/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part1-%E7%AC%94%E8%AE%B0/P1-3%20%E7%BC%96%E5%86%99%E7%AC%AC%E4%B8%80%E4%B8%AAJava%E7%A8%8B%E5%BA%8F/</url>
    
    <content type="html"><![CDATA[<h1 id="编写第一个Java程序"><a href="#编写第一个Java程序" class="headerlink" title="编写第一个Java程序"></a>编写第一个Java程序</h1><ul><li>学编程不了解底层怎么办？<ul><li>所谓的底层知识的学习是自然而然的过程，不是刻意去学的</li><li>你一定是先会用再去研究底层，而不是一上来就研究底层</li></ul></li></ul><h2 id="建JAVA项目步骤"><a href="#建JAVA项目步骤" class="headerlink" title="建JAVA项目步骤"></a>建JAVA项目步骤</h2><blockquote><p>统一同Maven方式组织代码<br>无论普通项目、Maven、gradle，代码都是一样的<br>IDEA中快速输入System&#x2F;out.printin（）的方法</p></blockquote><ul><li><p>不会讲解太多快捷键、代码生成等</p><ul><li>代码生成工具是帮助熟练的人更快的写代码，而不是让初学者变成傻叉的</li></ul></li><li><p>创建Maven项目卡住了~ 2024 太新了 os：解决了</p><ul><li>解决步骤</li><li>选择Maven，设置JDK版本，选择maven项目的模板<br>org.apache.maven.archetypes:maven-archetype-quickstart就是普通Maven项目面板</li><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240731/Maven.361h863o5k.webp" alt="Maven"></li></ul></li><li><p>课件地址</p><ul><li><a href="https://github.com/yangzhongke/yzk18/tree/main/%E8%AF%BE%E7%A8%8B%E8%AF%BE%E4%BB%B6%E4%BB%A3%E7%A0%81%E7%AD%89/Part1">https://github.com/yangzhongke/yzk18/tree/main/%E8%AF%BE%E7%A8%8B%E8%AF%BE%E4%BB%B6%E4%BB%A3%E7%A0%81%E7%AD%89/Part1</a></li></ul></li></ul><p>创建项目步骤</p><ul><li>在src-main-java的文件创建class（类）<ul><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240730/%E6%96%B0%E5%BB%BA1.3rb4tq0emu.webp" alt="新建1"></li></ul></li><li>输入class的名字，然后点击回车<ul><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240730/%E5%90%8D%E5%AD%97.syuq7s55e.webp" alt="名字"></li></ul></li><li>写完hello代码后run编译运行<ul><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240730/Run.3uuqrfthc8.webp" alt="Run"></li></ul></li></ul><h3 id="键盘"><a href="#键盘" class="headerlink" title="键盘"></a>键盘</h3><ul><li>出现了一个从来没想到的问题，键盘的大写A怎么输入~  <ul><li>之前都是先按CapsLk按键，然后在按a</li><li>没想到直接Shift+字母键就可以打出大写字母了（快捷输入大写字母）</li></ul></li></ul><h3 id="关于缩进和大括号"><a href="#关于缩进和大括号" class="headerlink" title="关于缩进和大括号"></a>关于缩进和大括号</h3><ul><li>1、和Python不一样，Java中的缩进不是强制的，不过缩进强制可以让代码更清晰</li><li>Java中{}有同一行、换行两种习惯，没有区别，我喜欢换行（C#的格式）</li><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240730/%E5%90%8C%E4%B8%80%E8%A1%8C%E4%B8%8E%E6%8D%A2%E8%A1%8C.6f0l42tfys.webp" alt="同一行与换行"></li></ul><h3 id="常见错误"><a href="#常见错误" class="headerlink" title="常见错误"></a>常见错误</h3><p>编程是很严谨的。代码有错如何在IDEA中发现</p><ul><li>1、标点符号用的是中文（全角）符号</li><li>2、大小写敏感</li><li>3、少了分号  别;:、o0、1l分不清</li><li>4、代码写错了位置</li><li>5、拼写错误  面的故事（main）</li><li>6、忘记了写结尾的分号，每一个<strong>逻辑行</strong>都要以分号结尾</li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240730/%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF.58h9vh4jd9.webp" alt="常见错误"></p><blockquote><p><strong>严谨的语言更适合去工程化使用</strong><br>比如Java，C#就比较严谨<br>比如Python，Basic就不太严谨，所以建议先学严谨的编程语言，后在按照需求去学习其他的</p></blockquote><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>无论是开发控制台程序、窗口程序、网站、APP……代码其实都没变，只是调用不同的库而已。</p>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part1</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P1-2  搭建Java开发环境</title>
    <link href="/2024/07/30/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part1-%E7%AC%94%E8%AE%B0/P1-2%20%E6%90%AD%E5%BB%BAJava%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/"/>
    <url>/2024/07/30/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part1-%E7%AC%94%E8%AE%B0/P1-2%20%E6%90%AD%E5%BB%BAJava%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</url>
    
    <content type="html"><![CDATA[<h1 id="搭建Java开发环境"><a href="#搭建Java开发环境" class="headerlink" title="搭建Java开发环境"></a>搭建Java开发环境</h1><h2 id="为什么需要搭建开发环境"><a href="#为什么需要搭建开发环境" class="headerlink" title="为什么需要搭建开发环境"></a>为什么需要搭建开发环境</h2><h2 id="快速搭建步骤"><a href="#快速搭建步骤" class="headerlink" title="快速搭建步骤"></a>快速搭建步骤</h2><h3 id="JDK-IDEA"><a href="#JDK-IDEA" class="headerlink" title="JDK+IDEA"></a>JDK+IDEA</h3><ul><li>JDK：编译、运行Java程序，基本类库</li><li>IDEA：集成开发环境（IDE）<ul><li>还有Eclipse、NetBeans等</li></ul></li><li>版权意识：破解对于版权来说不好</li></ul><h3 id="JDK的版本"><a href="#JDK的版本" class="headerlink" title="JDK的版本"></a>JDK的版本</h3><ul><li>1.4……8、9、10、16等</li><li>为什么主流仍然是8&#x2F;1.8<ul><li>因为大多数公司都是8，为了稳定，不敢动而已</li><li>但是学技术的还是要会新的东西的</li></ul></li><li>学的东西用高版本也兼容</li></ul><h3 id="JDK安装"><a href="#JDK安装" class="headerlink" title="JDK安装"></a>JDK安装</h3><ul><li>浏览器搜索“JDK8下载”，官方名“Java SE Development Kit 8”</li><li>Windows、MAC都一样<ul><li>官方下载放心</li><li>国内第三方网站的下载慎点，太多坑了<ul><li>都是捆绑软件</li></ul></li><li>初学者不用配置环境变量</li></ul></li><li>JDK8的下载地址<ul><li><a href="https://www.oracle.com/java/technologies/downloads/#java8-windows">https://www.oracle.com/java/technologies/downloads/#java8-windows</a></li><li>直接傻瓜式安装即可，修改一下“安装路径”就行。看图一步步来</li><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240731/Java1.1zi5zjrajp.webp" alt="Java1"></li><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240731/java2.3gob1avfae.webp" alt="java2"></li><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240731/java3.92q1f5wq3r.webp" alt="java3"></li><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240731/java4.1vyk1ty7tz.webp" alt="java4"></li></ul></li></ul><h3 id="IDEA安装"><a href="#IDEA安装" class="headerlink" title="IDEA安装"></a>IDEA安装</h3><ul><li>搜“IDEA Java” 或官网<a href="http://www.jetbrains.com.cn/">www.jetbrains.com.cn</a></li><li>直接傻瓜式安装即可，修改一下“安装路径”就行。看图一步步来</li><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240731/IDEA1.6f0l4tazqv.webp" alt="IDEA1"></li><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240731/IDEA2.7ljwdezwcs.webp" alt="IDEA2"></li><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240731/IDEA3.5xajg89m74.webp" alt="IDEA3"></li><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240731/IDEA4.361h85ni5d.webp" alt="IDEA4"></li><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240731/IDEA5.2venf08a02.webp" alt="IDEA5"></li></ul>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part1</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>学会学习-10   课程总结</title>
    <link href="/2024/07/29/%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A020240727/%E5%AD%A6%E4%BC%9A%E5%AD%A6%E4%B9%A0-10%20%E8%AF%BE%E7%A8%8B%E6%80%BB%E7%BB%93/"/>
    <url>/2024/07/29/%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A020240727/%E5%AD%A6%E4%BC%9A%E5%AD%A6%E4%B9%A0-10%20%E8%AF%BE%E7%A8%8B%E6%80%BB%E7%BB%93/</url>
    
    <content type="html"><![CDATA[<h1 id="课程总结"><a href="#课程总结" class="headerlink" title="课程总结"></a>课程总结</h1><h2 id="学习-学-习"><a href="#学习-学-习" class="headerlink" title="学习 &#x3D; 学  + 习"></a>学习 &#x3D; 学  + 习</h2><ul><li>学习就是逃离舒适区的过程</li><li>学习得感觉很舒服，也许就是方法不对</li></ul><hr><h2 id="学习的三个阶段"><a href="#学习的三个阶段" class="headerlink" title="学习的三个阶段"></a>学习的三个阶段</h2><blockquote><p>无知无能：你不会开车<br>有知无能：我知道车上有油门，刹车一样<br>无知有能：开车无意识的熟练；比如打字一样。</p></blockquote><ul><li>无知无能  →  有知无能  这个阶段核心：学习</li><li>有知无能  →  无知有能  这个阶段核心：反复练习</li></ul><hr><h3 id="没有动力怎么办"><a href="#没有动力怎么办" class="headerlink" title="没有动力怎么办"></a>没有动力怎么办</h3><p>《知识就是力量：怎么逼自己成为一个上进的人》—罗振宇</p><ul><li>绑架自己</li></ul><hr><h2 id="本世纪三大绝症"><a href="#本世纪三大绝症" class="headerlink" title="本世纪三大绝症"></a>本世纪三大绝症</h2><ul><li>1、焦虑症（选择恐惧症）<ul><li>解决方案：SWOT分析+抛硬币</li></ul></li><li>2、松鼠症（资料收集狂）<ul><li>解决方案：设定刹车目标</li></ul></li><li>3、懒癌（拖延症）<ul><li>解决方案：to do list</li></ul></li></ul><hr><h2 id="把书读薄、用输出倒逼输入"><a href="#把书读薄、用输出倒逼输入" class="headerlink" title="把书读薄、用输出倒逼输入"></a>把书读薄、用输出倒逼输入</h2><blockquote><p>写笔记<br>做导图<br>写文章<br>录制Vlog</p></blockquote><p>输出要有结构，你的知识就会自动吸附在结构之上，结构会强化神经元的连接（知识网）</p><hr><h2 id="成功是一种习惯，失败也是一种习惯"><a href="#成功是一种习惯，失败也是一种习惯" class="headerlink" title="成功是一种习惯，失败也是一种习惯"></a>成功是一种习惯，失败也是一种习惯</h2><h2 id="知识的存储能力，人类早已经被电脑代替了；知识的搜素和链接能力，才是学习的核心竞争力"><a href="#知识的存储能力，人类早已经被电脑代替了；知识的搜素和链接能力，才是学习的核心竞争力" class="headerlink" title="知识的存储能力，人类早已经被电脑代替了；知识的搜素和链接能力，才是学习的核心竞争力"></a>知识的存储能力，人类早已经被电脑代替了；知识的搜素和链接能力，才是学习的核心竞争力</h2><p>学会提问、善用搜素、记笔记</p><hr><h2 id="知行合一"><a href="#知行合一" class="headerlink" title="知行合一"></a>知行合一</h2><h3 id="哲理小故事——上帝与落水者"><a href="#哲理小故事——上帝与落水者" class="headerlink" title="哲理小故事——上帝与落水者"></a>哲理小故事——上帝与落水者</h3><ul><li>有多个版本，这只是其中之一<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs">一个基督徒，掉到了海里。<br><br>他在海里挣扎的时候，遇到了一艘船，船上的人要救他，他说：<br><br>“不，我要等我的上帝来救我。”<br><br>他在海里继续挣扎。<br><br>然后又来了一艘船，船上的人要救他，他还是说：<br><br>“不行，我要等我的上帝来救我。”<br><br>最后，他精疲力尽被淹死了。<br><br>他的灵魂来到了天堂，见到了上帝，他埋怨上帝为什么不去救他，上帝说：<br><br>“其实，我已经派了两艘船去救你，是你自己不愿意上来。”<br><br></code></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <categories>
      
      <category>学习方法</category>
      
      <category>学会如何学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学习如何学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>学会学习-9   像傻子一样搜索，像聪明人一样提问</title>
    <link href="/2024/07/29/%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A020240727/%E5%AD%A6%E4%BC%9A%E5%AD%A6%E4%B9%A0-9%20%E5%83%8F%E5%82%BB%E5%AD%90%E4%B8%80%E6%A0%B7%E6%90%9C%E7%B4%A2%EF%BC%8C%E5%83%8F%E8%81%AA%E6%98%8E%E4%BA%BA%E4%B8%80%E6%A0%B7%E6%8F%90%E9%97%AE/"/>
    <url>/2024/07/29/%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A020240727/%E5%AD%A6%E4%BC%9A%E5%AD%A6%E4%B9%A0-9%20%E5%83%8F%E5%82%BB%E5%AD%90%E4%B8%80%E6%A0%B7%E6%90%9C%E7%B4%A2%EF%BC%8C%E5%83%8F%E8%81%AA%E6%98%8E%E4%BA%BA%E4%B8%80%E6%A0%B7%E6%8F%90%E9%97%AE/</url>
    
    <content type="html"><![CDATA[<h1 id="像傻子一样搜索，像聪明人一样提问"><a href="#像傻子一样搜索，像聪明人一样提问" class="headerlink" title="像傻子一样搜索，像聪明人一样提问"></a>像傻子一样搜索，像聪明人一样提问</h1><p>适应于所有方面（包括关于英语、编程、数学……）</p><h2 id="如何提问？"><a href="#如何提问？" class="headerlink" title="如何提问？"></a>如何提问？</h2><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240728/%E6%9C%89%E4%BA%BA%E5%9C%A8%E5%90%97.7sn458xklh.webp" alt="有人在吗"></p><p>模拟对话</p><ul><li>请教人：老师，你在吗？</li><li>老师：在</li><li>请教人：那我能请教您一个问题吗？</li><li>老师：我……  OS：有话请直说，老师要崩溃了~</li></ul><h3 id="1-动一下脑子"><a href="#1-动一下脑子" class="headerlink" title="1.动一下脑子"></a>1.动一下脑子</h3><h3 id="2-文档"><a href="#2-文档" class="headerlink" title="2.文档"></a>2.文档</h3><ul><li>在使用工具中报的错，80%的解决方法都能在官方的文档中找到<ul><li>有什么陷阱啊</li><li>有哪些注意的问题</li><li>常规遇到的一些错误的解决方案</li></ul></li></ul><h3 id="3-搜索"><a href="#3-搜索" class="headerlink" title="3.搜索"></a>3.搜索</h3><ul><li>尝试去网上搜索问题去解决</li></ul><h3 id="4-群提问-发帖（专业论坛）"><a href="#4-群提问-发帖（专业论坛）" class="headerlink" title="4.群提问&#x2F;发帖（专业论坛）"></a>4.群提问&#x2F;发帖（专业论坛）</h3><ul><li>求助高人<ul><li>不要说废话，比如模拟对话那样~<br><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240729/%E5%9C%A8%E5%90%97%E5%9C%A8%E5%90%97.1aowd4hqt3.webp" alt="在吗在吗"></li></ul></li><li>模版： XXX你好&#x2F;大家好 + 问题 + 谢谢    <ul><li>适度礼貌</li></ul></li><li>怎么描述清楚问题<ul><li>第一：你要干什么？<ul><li>例子：我要写一个java识别验证码的一个程序</li></ul></li><li>第二：你希望的结果是什么？<ul><li>例子：希望是能够识别带数字和字母的验证码，我用了一个什么什么库，然后写了一个什么什么代码，但是运行的过程中报了一个这样的错误信息（错误信息写出来）</li><li>我到别的论坛上看到了，说这个问题可以用什么什么方案来解决，但是我用了他说的这几种方式都还是不行</li><li>那么我的这个java版本是1.8</li><li>我的这个代码是什么什么</li><li>我用的这个库的版本是1.6.8</li><li>运行出错的截图等</li></ul></li><li>第三：你做了那些事情，遇到了什么样的结果或问题<ul><li>你自己解决这个问题的难点在哪里？</li></ul></li><li>第四：提供足够的信息（相关环境、代码、定位信息、版本、截图等）<ul><li>操作系统</li><li>软件版本</li><li>相关的一些代码或者有一些报错截图</li></ul></li></ul></li><li>注意的点<ul><li><strong>不要问傻问题！！！</strong><ul><li>比如：发帖在百度，说我的代码怎么运行不起来了，代码也不贴。 这是问鬼吗？</li></ul></li></ul></li></ul><h3 id="扩展阅读（必读）—《提问的智慧》"><a href="#扩展阅读（必读）—《提问的智慧》" class="headerlink" title="扩展阅读（必读）—《提问的智慧》"></a>扩展阅读（必读）—《提问的智慧》</h3><blockquote><p>背景：一个大牛程序员写的。<br>原因：有很多人问他傻瓜问题，所得到的经验<br>方面：对所有领域都有作用</p></blockquote><ul><li>1、藐视不愿思考（或者在提问前“不做他们该做的事”的人）</li><li>2、提问前先：自己尝试、搜素、查文档……</li><li>3、使用有意义且描述清楚的标题</li><li>4、别要求使用私人电邮回复<ul><li>请把修改后的代码发到我的邮箱</li></ul></li><li>5、清楚明确的表达你的问题以及需求</li><li>6、不要期望别人调试你的代码，把问题简化为最少的几行</li><li>7、客气一点</li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240729/%E5%A6%82%E4%BD%95%E6%8F%90%E9%97%AE.6t70t9mo22.webp" alt="如何提问"></p><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240729/%E6%89%A9%E5%B1%95%E9%98%85%E8%AF%BB.7egoflhdid.webp" alt="扩展阅读"></p><h2 id="如何搜索？"><a href="#如何搜索？" class="headerlink" title="如何搜索？"></a>如何搜索？</h2><h3 id="最大难题"><a href="#最大难题" class="headerlink" title="最大难题"></a>最大难题</h3><ul><li>搜什么关键词</li><li>学习策略：反复调整</li><li>搜<strong>搜索引擎 语法</strong></li></ul><h3 id="两个工具"><a href="#两个工具" class="headerlink" title="两个工具"></a>两个工具</h3><ul><li>1.快速帮助发现你写的程序中哪有问题的一个工具<ul><li>文件比较工具：<ul><li>免费：DiffMerge</li><li>收费：UltraCompare，BeyondCompare</li></ul></li></ul></li><li>2.防止哪一天你的作业，你写的代码突然丢了的这样一款工具<ul><li>代码、文档防丢失：<ul><li>代码备份：Git</li><li>文件备份：<ul><li>国内：坚果云、百度网盘<ul><li>文档用坚果云</li><li>视频用网盘</li></ul></li><li>国外：DropBox、OneDrive……</li></ul></li></ul></li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>学习方法</category>
      
      <category>学会如何学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学习如何学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>共享文件夹的连接</title>
    <link href="/2024/07/29/%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6%E5%A4%B9%E7%9A%84%E8%BF%9E%E6%8E%A5/"/>
    <url>/2024/07/29/%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6%E5%A4%B9%E7%9A%84%E8%BF%9E%E6%8E%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="共享文件夹的连接"><a href="#共享文件夹的连接" class="headerlink" title="共享文件夹的连接"></a>共享文件夹的连接</h1><h2 id="1-第一步打开命令行"><a href="#1-第一步打开命令行" class="headerlink" title="1.第一步打开命令行"></a>1.第一步打开命令行</h2><ul><li><p>Win+R 输入 </p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livescript"><span class="hljs-string">\\WIN-0EB6Q7A0LB8</span><br></code></pre></td></tr></table></figure><ul><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240729/Win.6t70syfkqb.webp" alt="Win"></li></ul></li><li><p>点击确定</p><ul><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240729/CMD%E8%BE%93%E5%85%A5.4qr84wfiet.webp" alt="CMD输入"></li></ul></li></ul><h2 id="2-选择共享的文件夹"><a href="#2-选择共享的文件夹" class="headerlink" title="2.选择共享的文件夹"></a>2.选择共享的文件夹</h2><ul><li>右键共享的文件夹</li><li>选择 映射网络驱动器<ul><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240729/%E6%98%A0%E5%B0%84%E7%BD%91%E7%BB%9C%E9%A9%B1%E5%8A%A8%E5%99%A8.3uuqpg5tyu.webp" alt="映射网络驱动器"></li></ul></li><li>点击确定即可<ul><li><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240729/%E5%AE%8C%E6%88%901.9rjawgmcxi.webp" alt="完成1"></li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>电脑</category>
      
    </categories>
    
    
    <tags>
      
      <tag>共享文件</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>学会学习-8   学了很多，仍然什么都不会</title>
    <link href="/2024/07/28/%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A020240727/%E5%AD%A6%E4%BC%9A%E5%AD%A6%E4%B9%A0-8%20%E5%AD%A6%E4%BA%86%E5%BE%88%E5%A4%9A%EF%BC%8C%E4%BB%8D%E7%84%B6%E4%BB%80%E4%B9%88%E9%83%BD%E4%B8%8D%E4%BC%9A/"/>
    <url>/2024/07/28/%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A020240727/%E5%AD%A6%E4%BC%9A%E5%AD%A6%E4%B9%A0-8%20%E5%AD%A6%E4%BA%86%E5%BE%88%E5%A4%9A%EF%BC%8C%E4%BB%8D%E7%84%B6%E4%BB%80%E4%B9%88%E9%83%BD%E4%B8%8D%E4%BC%9A/</url>
    
    <content type="html"><![CDATA[<h1 id="学了很多，仍然什么都不会"><a href="#学了很多，仍然什么都不会" class="headerlink" title="学了很多，仍然什么都不会"></a>学了很多，仍然什么都不会</h1><p>适应于所有方面（包括关于英语、编程、数学……）</p><h2 id="目前教育的问题"><a href="#目前教育的问题" class="headerlink" title="目前教育的问题"></a>目前教育的问题</h2><ul><li>学完的知识都不知道有什么用途？（学那么多，有什么用呢？）</li></ul><h3 id="书：《卓越密码：如何成为专家》"><a href="#书：《卓越密码：如何成为专家》" class="headerlink" title="书：《卓越密码：如何成为专家》"></a>书：《卓越密码：如何成为专家》</h3><ul><li>知识分类<ul><li>元知识（基础知识）<ul><li>比如数学的微积分、求导概念方程等</li><li>计算机的基础语法等</li></ul></li><li>领域知识（专业知识）<ul><li>计算机的专业术语、工作流程、业务流程等</li></ul></li><li>客户知识</li></ul></li></ul><h2 id="怎么把基础知识和专业知识去结合使用呢？"><a href="#怎么把基础知识和专业知识去结合使用呢？" class="headerlink" title="怎么把基础知识和专业知识去结合使用呢？"></a>怎么把基础知识和专业知识去结合使用呢？</h2><h3 id="陷阱"><a href="#陷阱" class="headerlink" title="陷阱"></a>陷阱</h3><ul><li>C语言必读的10本书<ul><li>还没开始学，就已经被怕跑了</li></ul></li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240728/%E5%BF%85%E8%AF%BB10%E6%9C%AC%E4%B9%A6.231rtn63ho.webp" alt="必读10本书"></p><h3 id="英语的看法"><a href="#英语的看法" class="headerlink" title="英语的看法"></a>英语的看法</h3><ul><li>只会英语专业的人已经不值钱了，因为各个行业的人都在学习英语，虽然没有英专的人口音正，但只要不影响沟通即可<ul><li>建议：要尝试找到英语和某一个行业结合<ul><li>例子：做外贸行业的英语</li></ul></li></ul></li></ul><h3 id="不要“过度学习”，学完一个阶段就尝试应用起来，在实践中再去逐渐接触更高级的“基础知识”"><a href="#不要“过度学习”，学完一个阶段就尝试应用起来，在实践中再去逐渐接触更高级的“基础知识”" class="headerlink" title="不要“过度学习”，学完一个阶段就尝试应用起来，在实践中再去逐渐接触更高级的“基础知识”"></a>不要“过度学习”，学完一个阶段就尝试应用起来，在实践中再去逐渐接触更高级的“基础知识”</h3><ul><li>步骤<ul><li>1.学习完一个阶段后总结一下</li><li>2.想一想可以把学习到的知识应用到哪里去？去实际的解决他人或自己的问题</li><li>3.在实践的过程中，自然而然会接触到更高级的“基础知识”</li><li>4.这才是对于知识的<strong>吸收</strong>，而不是单纯的存放在脑子里不去调用练习的沉沙<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="hljs-bullet">-</span> 数学<br><span class="hljs-bullet">  -</span> 数学的微积分能用在哪里呢？建筑行业还是？<br><span class="hljs-bullet">-</span> 编程语言<br><span class="hljs-bullet">  -</span> 不要迷失在框架中，能用简单的代码去解决复杂化的问题，比单单只会用框架厉害多了<br><span class="hljs-bullet">-</span> 英语<br></code></pre></td></tr></table></figure></li></ul></li></ul><h2 id="作业"><a href="#作业" class="headerlink" title="作业"></a>作业</h2><ul><li>暂无</li></ul>]]></content>
    
    
    <categories>
      
      <category>学习方法</category>
      
      <category>学会如何学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学习如何学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>学会学习-7   用输出倒逼输入</title>
    <link href="/2024/07/27/%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A020240727/%E5%AD%A6%E4%BC%9A%E5%AD%A6%E4%B9%A0-7%20%E7%94%A8%E8%BE%93%E5%87%BA%E5%80%92%E9%80%BC%E8%BE%93%E5%85%A5/"/>
    <url>/2024/07/27/%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A020240727/%E5%AD%A6%E4%BC%9A%E5%AD%A6%E4%B9%A0-7%20%E7%94%A8%E8%BE%93%E5%87%BA%E5%80%92%E9%80%BC%E8%BE%93%E5%85%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="用输出倒逼输入"><a href="#用输出倒逼输入" class="headerlink" title="用输出倒逼输入"></a>用输出倒逼输入</h1><h2 id="什么是输入，输出？"><a href="#什么是输入，输出？" class="headerlink" title="什么是输入，输出？"></a>什么是输入，输出？</h2><ul><li>笔记、视频、文章</li><li>对找工作有帮助</li><li>表达力</li></ul><h2 id="为什么输出可以促进输入呢？"><a href="#为什么输出可以促进输入呢？" class="headerlink" title="为什么输出可以促进输入呢？"></a>为什么输出可以促进输入呢？</h2><ul><li>费曼学习法<ul><li>把自己学到的知识可以输出给其他人</li><li>一边加深自己对知识的理解</li><li>一边倒逼自己去查其他的资料（输入）</li></ul></li><li>不一定非得对人去输出，也可以对一个事物</li><li>比如程序员的Rubber Duck Debugging  小黄鸭版的程序Debug<ul><li>锻炼表达能力和写作能力</li><li>在现在这个互联网很发达的时代，可以用视频、文本、代码等开源出去，让各路高手来评论，来促使自己的进步</li></ul></li></ul><h2 id="如何输出：3W（学习知识万能公式）"><a href="#如何输出：3W（学习知识万能公式）" class="headerlink" title="如何输出：3W（学习知识万能公式）"></a>如何输出：3W（学习知识万能公式）</h2><h3 id="Why"><a href="#Why" class="headerlink" title="Why"></a>Why</h3><p>为什么</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs">例子：数据库（为什么需要它呢？）<br>因为可以利用数据库可以达到储存数据的目的<br></code></pre></td></tr></table></figure><h3 id="What"><a href="#What" class="headerlink" title="What"></a>What</h3><p>这是什么东西</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc">例子：数据库（这是什么东西？）<br>可以用数据库的SQL语句来达到<span class="hljs-strong">**增删改查**</span>的目的<br></code></pre></td></tr></table></figure><h3 id="How"><a href="#How" class="headerlink" title="How"></a>How</h3><p>这个东西怎么用</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql">例子：数据库（这个东西怎么用呢？）<br>代码语句调用<span class="hljs-keyword">SQL</span>语句<br></code></pre></td></tr></table></figure><h2 id="作业"><a href="#作业" class="headerlink" title="作业"></a>作业</h2><blockquote><p>从这个视频开始，每天学习的知识都写文章进行输出（文章&#x2F;视频&#x2F;Duck）<br>逼着自己写博客<br>逼着自己录视频</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>学习方法</category>
      
      <category>学会如何学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学习如何学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>学会学习-6   治疗“学无力”  失败是成功之父，成功是成功之母</title>
    <link href="/2024/07/27/%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A020240727/%E5%AD%A6%E4%BC%9A%E5%AD%A6%E4%B9%A0-6%20%E6%B2%BB%E7%96%97%E2%80%9C%E5%AD%A6%E6%97%A0%E5%8A%9B%E2%80%9D/"/>
    <url>/2024/07/27/%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A020240727/%E5%AD%A6%E4%BC%9A%E5%AD%A6%E4%B9%A0-6%20%E6%B2%BB%E7%96%97%E2%80%9C%E5%AD%A6%E6%97%A0%E5%8A%9B%E2%80%9D/</url>
    
    <content type="html"><![CDATA[<h1 id="治疗“学无力”"><a href="#治疗“学无力”" class="headerlink" title="治疗“学无力”"></a>治疗“学无力”</h1><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs">失败是成功之父，成功是成功之母<br><br></code></pre></td></tr></table></figure><hr><h2 id="Trial-and-error"><a href="#Trial-and-error" class="headerlink" title="Trial and error"></a>Trial and error</h2><blockquote><p>一段成功代码的背后真相：是不断的<strong>删除</strong>和<strong>重构</strong>才有可能出现的产物之一。<br>所以失败是<strong>必然</strong>的，成功是<strong>偶然</strong>的</p><p>只有你失败了，站起来继续前进，才有可能<strong>守得云开见月明</strong></p></blockquote><h2 id="能耐-能力-耐力"><a href="#能耐-能力-耐力" class="headerlink" title="能耐&#x3D;能力+耐力"></a>能耐&#x3D;能力+耐力</h2><ul><li>自身的能力和坚持不限的耐力才是底气</li><li>而你有了相应的能力后，出现机会才能把握住<ul><li>而不是出现了一堆机会，而你没有能力去匹配</li><li>别人都是风口上的猪，而你只能眼睁睁看着</li></ul></li></ul><h2 id="成功是成功之母"><a href="#成功是成功之母" class="headerlink" title="成功是成功之母"></a>成功是成功之母</h2><ul><li>成功是一种习惯，会给予你<strong>成功的信心</strong></li><li>不要轻言放弃，最好不要让*<strong>失败成为一种习惯</strong></li></ul><h2 id="学无力的倾向或表现"><a href="#学无力的倾向或表现" class="headerlink" title="学无力的倾向或表现"></a>学无力的倾向或表现</h2><ul><li>我能做XX吗？</li><li>XX会怎么样？</li><li>怎么做XX？</li><li>如果做XX失败了，怎么办？</li><li>说到底还是：之前失败了太多次了，不敢相信能成功。</li></ul><h2 id="命运"><a href="#命运" class="headerlink" title="命运"></a>命运</h2><ul><li>命：由自己的能力来决定</li><li>运：由自己的行动来决定（付出&#x2F;结果）</li><li>成功学的虚幻：马后炮</li></ul><h2 id="作业"><a href="#作业" class="headerlink" title="作业"></a>作业</h2><p>描述你经历过千辛万苦搞定事情的经历以及收获</p><blockquote><p>成考计算机本的时候需要学习<strong>高数</strong><br>我才发现高数挺有意思的，后来的结果也不错，因为我觉得那场考试让我自己很舒服，知识得到了验证。<br>可惜的是上学的时候从来没有关注过<br>但自己还是要前进，加油！</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>学习方法</category>
      
      <category>学会如何学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学习如何学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>学会学习-5   如果选择学习资料</title>
    <link href="/2024/07/27/%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A020240727/%E5%AD%A6%E4%BC%9A%E5%AD%A6%E4%B9%A0-5%20%E5%A6%82%E4%BD%95%E9%80%89%E6%8B%A9%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/"/>
    <url>/2024/07/27/%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A020240727/%E5%AD%A6%E4%BC%9A%E5%AD%A6%E4%B9%A0-5%20%E5%A6%82%E4%BD%95%E9%80%89%E6%8B%A9%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/</url>
    
    <content type="html"><![CDATA[<h1 id="如果选择学习资料"><a href="#如果选择学习资料" class="headerlink" title="如果选择学习资料"></a>如果选择学习资料</h1><h2 id="陷阱一：碎片化学习"><a href="#陷阱一：碎片化学习" class="headerlink" title="陷阱一：碎片化学习"></a>陷阱一：碎片化学习</h2><ul><li>公众号</li><li>短视频（震惊、XXX别再这么说了）<ul><li>焦虑和虚假的满足感</li><li>千万别陷入在碎片化的学习中</li></ul></li><li>养鱼视频&#x2F;9元微课（免费的视频吸引你，后面引导你交钱去学习后面的付费课程。比如：培训机构）</li></ul><hr><h2 id="陷阱二：过度学习"><a href="#陷阱二：过度学习" class="headerlink" title="陷阱二：过度学习"></a>陷阱二：过度学习</h2><ul><li>陷入技术或知识的深度，无限地钻牛角尖</li></ul><h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><ul><li>找经典教材</li><li>找大纲（比如招聘需求）<ul><li>以此为纲来组织各种的材料，设定<strong>刹车时刻</strong><ul><li>比如：拿别人出版的书的目录去作为大纲，围绕这个大纲去准备学习资料。因为想要出版，就要经过出版社。出版社的要求对于大纲来说很严格，因为这本书要清晰明了。所以围绕大纲一般不会错</li></ul></li><li>形成知识树后，然后去分层式学习，避免过度学习</li><li>比如：你现在要转Java程序员，不可能你什么经验都没有就可以去当高级的Java程序员<ul><li>所以去寻找你的目标（Java初级程序员）的招聘需求，看20-100个，看看要求的技术栈，选择出现最多的5个，慢慢分层式学习，然后去扩展即可，但涉及到更深的方面建议<strong>刹车</strong></li></ul></li></ul></li></ul><hr><h2 id="作业"><a href="#作业" class="headerlink" title="作业"></a>作业</h2><ul><li>搜素<strong>裂变 招生</strong>、<strong>鱼塘 流量课程</strong>、<strong>贩卖焦虑</strong></li></ul><h2 id="找裂变-招生看到了原理"><a href="#找裂变-招生看到了原理" class="headerlink" title="找裂变 招生看到了原理"></a>找<strong>裂变 招生</strong>看到了原理<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs">就是根据人的利益，生存等需求去制造产品而已。<br>就好比地推，注册账号送一杯奶茶等等<br>例子：瑞幸咖啡<br></code></pre></td></tr></table></figure></h2><p>找<strong>鱼塘 流量课程</strong>看到了量</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">多个手机+多个手机号+多个号等组成的鱼塘养成计划。也好像韭菜养成一样，割一茬涨一茬<br></code></pre></td></tr></table></figure><hr><p>找<strong>贩卖焦虑</strong>的时候看到一个不错的话</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs">你若不抽出时间来创造自己想要的生活，你最终将不得不花费大量的时间，来应付自己不想要的生活！<br>你现在的任务就是认真学习，努力充实自己，并不是焦虑时光。<br>你在七八月做的事，十二月自有答复<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>学习方法</category>
      
      <category>学会如何学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学习如何学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>学会学习-4   笔记写得好，知识学得牢</title>
    <link href="/2024/07/27/%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A020240727/%E5%AD%A6%E4%BC%9A%E5%AD%A6%E4%B9%A0-4%20%E7%AC%94%E8%AE%B0%E5%86%99%E5%BE%97%E5%A5%BD%EF%BC%8C%E7%9F%A5%E8%AF%86%E5%AD%A6%E5%BE%97%E7%89%A2/"/>
    <url>/2024/07/27/%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A020240727/%E5%AD%A6%E4%BC%9A%E5%AD%A6%E4%B9%A0-4%20%E7%AC%94%E8%AE%B0%E5%86%99%E5%BE%97%E5%A5%BD%EF%BC%8C%E7%9F%A5%E8%AF%86%E5%AD%A6%E5%BE%97%E7%89%A2/</url>
    
    <content type="html"><![CDATA[<h1 id="笔记写得好，知识学得牢"><a href="#笔记写得好，知识学得牢" class="headerlink" title="笔记写得好，知识学得牢"></a>笔记写得好，知识学得牢</h1><h2 id="为什么要记笔记？"><a href="#为什么要记笔记？" class="headerlink" title="为什么要记笔记？"></a>为什么要记笔记？</h2><h3 id="把书读薄，提炼精华"><a href="#把书读薄，提炼精华" class="headerlink" title="把书读薄，提炼精华"></a>把书读薄，提炼精华</h3><ul><li><p>整理笔记不是一蹴而就，而是知识漏斗的过程，多次复习</p></li><li><p>笔记一定要自己记（不要拿别人的笔记直接用，需要自己总结在记一遍）</p></li><li><p>整体步骤</p><ul><li>学习内容 → 标记重难点 → 整理笔记（形成正式笔记，不能copy，要总结精简）→ 整理知识树（初级，中级学习）</li><li>看书学习：<ul><li>学习内容 → 划重难点、补充想法（用铅笔）→ 整理笔记（纸质版：建议纸质版&#x2F;电子版：太容易CV了） → 整理知识树</li></ul></li><li>看网页的等电子资料学习<ul><li>学习内容 → 划重难点、补充想法（参考：网页打印为文本pdf，然后标记高亮）→ 整理笔记（纸质版：建议纸质版&#x2F;电子版：太容易CV了） → 整理知识树</li></ul></li><li>听课、学视频<ul><li>学习内容 → 记随堂笔记（康奈尔笔记法） → 整理笔记本 → 整理知识树</li></ul></li></ul></li><li><p>知识树</p><ul><li>思维导图：把零散知识点连接到<strong>知识</strong>中，符合大脑认知规律</li><li>思维导图的参考：课程目录、大纲</li><li>思维导图的误区：记录太细节以及无价值知识（举例）<ul><li>一次性制作：应该是<strong>一边学习，一边完善（增加、修改、删除）</strong></li></ul></li><li>思维导图什么时候用？<ul><li><strong>经常拿出来复习</strong></li></ul></li><li>只需要总结写上去，细节的内容都在笔记上</li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240727/%E7%AC%94%E8%AE%B0.7p6yzstm3.webp" alt="笔记"></p></li></ul><h2 id="作业"><a href="#作业" class="headerlink" title="作业"></a>作业</h2><ul><li>1、找《康奈尔笔记法》的资料，看是否有借鉴的意义</li><li>2、找《学习如果学习》目前的内容的笔记做二次整理，并且构建思维导图</li><li>3、把最近学完的一门课整理思维导图</li></ul><h3 id="康奈尔笔记法"><a href="#康奈尔笔记法" class="headerlink" title="康奈尔笔记法"></a>康奈尔笔记法</h3><ul><li>Step1 根据课程内容做笔记，要求快速、精简、易辩识，避免大纲</li><li>Step2 在休息间隙或当天晚些时候，花时间通读你的笔记</li><li>Step3 找出课堂&#x2F;演讲中的主要观点，并在左栏列出对应问题</li><li>Step4 盖住笔记，看着左侧的问题，尝试复述要点</li><li>Step5 在底部边栏为整个课堂&#x2F;演讲内容写下最精简准确的总结。</li><li>Step6 重新回溯要点，注意全局而非片面的事实或观点。</li><li>Step7 进入反思过程，做一个更好的思考者。<ul><li>问自己一些更有价值的问题，如这些知识和观点的意义是什么？他们的依据是什么？我们怎么把它们应用到我已经知道的事物中？还有什么是我可能没想到、别人没涉及的？</li></ul></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">总结：好像不适合我，因为我习惯了一边记录，一边看视频。<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>学习方法</category>
      
      <category>学会如何学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学习如何学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>学会学习-3  选择恐惧症与收集控</title>
    <link href="/2024/07/26/%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A020240727/%E5%AD%A6%E4%BC%9A%E5%AD%A6%E4%B9%A0-3%20%E9%80%89%E6%8B%A9%E6%81%90%E6%83%A7%E7%97%87%E4%B8%8E%E6%94%B6%E9%9B%86%E6%8E%A7/"/>
    <url>/2024/07/26/%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A020240727/%E5%AD%A6%E4%BC%9A%E5%AD%A6%E4%B9%A0-3%20%E9%80%89%E6%8B%A9%E6%81%90%E6%83%A7%E7%97%87%E4%B8%8E%E6%94%B6%E9%9B%86%E6%8E%A7/</url>
    
    <content type="html"><![CDATA[<h1 id="选择恐惧症与收集控"><a href="#选择恐惧症与收集控" class="headerlink" title="选择恐惧症与收集控"></a>选择恐惧症与收集控</h1><h2 id="选择恐惧症-变成语言学Java还是C"><a href="#选择恐惧症-变成语言学Java还是C" class="headerlink" title="选择恐惧症 变成语言学Java还是C#"></a>选择恐惧症 变成语言学Java还是C#</h2><p>1.原因</p><ul><li>害怕失去，害怕缺点</li><li>心理学：布里丹之驴</li></ul><p>2.分析</p><ul><li>万事万物都是优缺点共存的，需要trade off（折中）</li><li>解决方法：排除明显不靠谱的选项外，列出待选项的优缺点，然后打分。</li><li>如果还无法决定？toss a coin（抛硬币）<figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs 1c">大多数失败不是由于决策错误，而是由于<span class="hljs-string">&quot;优柔寡断，四面出击&quot;</span><br>  <span class="hljs-punctuation">-</span> 杨中科老师的例子：上大学时，各种语言都学个遍，最后钻透Delphi语言，但没想到毕业时，Delphi已经没落，最后有编程语言的底子，直接转到了Java<br></code></pre></td></tr></table></figure>3.总结</li><li><strong>一旦选择决定了，就坚定执行下去</strong></li><li><strong>路是走出来的，不是选出来的</strong></li><li><strong>行动  &gt; 选择</strong></li></ul><h2 id="收集控"><a href="#收集控" class="headerlink" title="收集控"></a>收集控</h2><p>1.原因</p><ul><li>完美心态</li><li>害怕失去</li></ul><p>2.分析</p><ul><li>存到硬盘中的不是知识，存到脑子中的才是知识</li><li>存到脑子中的是知识，把知识实践起来才是<strong>学习</strong>，要知行合一</li><li>搜集资料设定目标（一套视频资料或一本书）<ul><li>书的学习效率要比视频教程高</li><li>一本书就够了，只要不是烂到渣，学下去没有错</li><li>及时刹车</li><li>不要<strong>过度学习</strong></li></ul></li></ul><h2 id="作业"><a href="#作业" class="headerlink" title="作业"></a>作业</h2><ul><li>记笔记（结合直接的情况），写到评论区</li><li>完成第二课《大战拖延症》的作业</li><li>清理收藏夹，清理硬盘。把剩下的开始学习，记笔记。<ul><li>收藏夹，硬盘。只留最重要的，然后开始学习</li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>学习方法</category>
      
      <category>学会如何学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学习如何学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P1-1  学习第一课</title>
    <link href="/2024/07/25/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part1-%E7%AC%94%E8%AE%B0/P1-1%20%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%B8%80%E8%AF%BE/"/>
    <url>/2024/07/25/SE101-%E9%9B%B6%E5%9F%BA%E7%A1%80%E7%8E%A9Java/Part1-%E7%AC%94%E8%AE%B0/P1-1%20%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%B8%80%E8%AF%BE/</url>
    
    <content type="html"><![CDATA[<h1 id="学习第一课"><a href="#学习第一课" class="headerlink" title="学习第一课"></a>学习第一课</h1><hr><h2 id="学习资料"><a href="#学习资料" class="headerlink" title="学习资料"></a>学习资料</h2><ul><li>尽量记笔记，自己写，尽量不要去拷贝其他人的课件，代码等。</li><li>有输入，才有输出。</li></ul><hr><h2 id="什么是编程？"><a href="#什么是编程？" class="headerlink" title="什么是编程？"></a>什么是编程？</h2><p>编程：编写能够<strong>控制计算机</strong>来执行<strong>特定任务</strong>的<strong>代码</strong></p><hr><h2 id="什么是编程语言？"><a href="#什么是编程语言？" class="headerlink" title="什么是编程语言？"></a>什么是编程语言？</h2><ul><li>编程语言是程序员和计算机沟通的语言，用编程语言编写的就是代码。</li><li>自然语言：下班买几个苹果回来，如果看到西瓜，就买一个。<ul><li>脑子正常的人会理解上面的意思，但如果让机器来理解呢？</li><li>针对上面不同的意图，编程语言应该怎么写？有歧义吗？</li><li>机器很笨，只懂0，1，与或非。所以让机器运行起来，不出现问题，那么写出的编程语言应该逻辑性合理，不能有多种意思让机器自己去猜，是什么情况。毕竟机器不是人。</li></ul></li></ul><hr><h2 id="编程语言有哪些？学哪个？"><a href="#编程语言有哪些？学哪个？" class="headerlink" title="编程语言有哪些？学哪个？"></a>编程语言有哪些？学哪个？</h2><p> 编程语言有很多种，但只需要学会主流中任意一种，其他的就会很快学会</p><hr><h2 id="学编程究竟学的是什么？"><a href="#学编程究竟学的是什么？" class="headerlink" title="学编程究竟学的是什么？"></a>学编程究竟学的是什么？</h2><ul><li>语法？<ul><li>精通一门编程语言后，在去学习其他的编程语言会很快</li></ul></li><li>开发工具？<ul><li>java</li><li>ida等</li></ul></li><li>框架？<ul><li>ssh</li><li>ssm</li><li>java boot<blockquote><p> 所以我们要学会思维方式，而并非是语法，开发工具，框架而已。你会站在计算机的角色去思考问题，那么你换任何一个编程语言都可以行的通。</p></blockquote></li></ul></li></ul><hr><h2 id="学习心态"><a href="#学习心态" class="headerlink" title="学习心态"></a>学习心态</h2><ul><li>不要小看</li><li>不要吓Niao</li></ul><hr><h2 id="编程的学习方法是什么？"><a href="#编程的学习方法是什么？" class="headerlink" title="编程的学习方法是什么？"></a>编程的学习方法是什么？</h2><ul><li>不要题海战术</li><li>不要背代码，代码背不完。</li><li>要：理解，记笔记，根据笔记去写（神似即可），脱稿流利写……<ul><li>理解这个程序1.先读取文件中的内容 2.存储到数据库中。</li><li>去靠这个思路去写，不会了就参考前辈的。会了之后删除，继续按照这个思路去写，直到可以脱稿流利的写出来，代码不需要完全一样。就好似张三丰对张无忌的武功传授，你只需要记住这个武功的精髓，而并非是一招一式。</li><li>要有自己的思想</li></ul></li></ul><hr><h2 id="除了编程语言还有什么要学？"><a href="#除了编程语言还有什么要学？" class="headerlink" title="除了编程语言还有什么要学？"></a>除了编程语言还有什么要学？</h2><ul><li>编程语言只是框架，只学语法，几乎什么都做不了。因为领域知识才是肉，就想学人类语言。语法只是骨架，用来连接和支撑人类的各种器官而已。</li><li>APP：网络通讯，界面，设备API……  </li><li>后端开发：数据库、网络通讯、文件…..</li><li>最主要的还是：领域知识（技术领域知识+业务领域知识），就好比做项目，你只会技术，但是不知道业务流程怎么实现，那你怎么去写呢~ 对吧</li><li>下面这个例子，查询数据库&gt;5 是语法，但写入文件是业务领域知识。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">if</span>(查询数据库 &gt;<span class="hljs-number">5</span>)<br>&#123;<br>  写入文件<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><hr><h2 id="这门课的目的"><a href="#这门课的目的" class="headerlink" title="这门课的目的"></a>这门课的目的</h2><ul><li>掌握核心Java语法（用玩的方式去学习）</li><li>先用最简单的代码掌握最核心的语法，尽快做东西。事无巨细、追求完美的讲课是违反认知规律的偷懒行为。掌握解决问题的能力。</li><li>问：会用你封装的库有什么意思？<ul><li>会安排库源码分析环节。</li></ul></li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240731/%E8%AF%BE%E7%A8%8B%E8%AE%A1%E5%88%92.6m3t05b6x7.webp" alt="课程计划"></p>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
      <category>零基础玩Java-Part1</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>创建知识库</title>
    <link href="/2024/07/25/%E6%90%AD%E5%BB%BA%E7%9F%A5%E8%AF%86%E5%BA%93/"/>
    <url>/2024/07/25/%E6%90%AD%E5%BB%BA%E7%9F%A5%E8%AF%86%E5%BA%93/</url>
    
    <content type="html"><![CDATA[<h1 id="创建知识库"><a href="#创建知识库" class="headerlink" title="创建知识库"></a>创建知识库</h1><blockquote><p> 知识库搭建好，然后部署到github上面所需要的工具：</p><ul><li><p><strong>npm</strong></p></li><li><p><strong>docsify框架</strong></p></li></ul></blockquote><h4 id="1-查看npm安装了没？-没有安装，需要安装一下"><a href="#1-查看npm安装了没？-没有安装，需要安装一下" class="headerlink" title="1.查看npm安装了没？ 没有安装，需要安装一下~"></a>1.查看npm安装了没？ 没有安装，需要安装一下~</h4><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs coffeescript"><span class="hljs-built_in">npm</span> -v  <br></code></pre></td></tr></table></figure><h4 id="2-安装docsify并查看安装版本"><a href="#2-安装docsify并查看安装版本" class="headerlink" title="2.安装docsify并查看安装版本"></a>2.安装docsify并查看安装版本</h4><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm">npm install -g docsify-<span class="hljs-keyword">cli</span><br></code></pre></td></tr></table></figure><p>如果cmd运行不动，就需要翻墙去运行</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">docsify</span> -v  查看安装版本<br></code></pre></td></tr></table></figure><h4 id="3-创建一个文件夹（repository）"><a href="#3-创建一个文件夹（repository）" class="headerlink" title="3.创建一个文件夹（repository）"></a>3.创建一个文件夹（repository）</h4><h4 id="4-进入文件夹目录"><a href="#4-进入文件夹目录" class="headerlink" title="4.进入文件夹目录"></a>4.进入文件夹目录</h4><h4 id="5-初始化文件夹"><a href="#5-初始化文件夹" class="headerlink" title="5.初始化文件夹"></a>5.初始化文件夹</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp">docsify <span class="hljs-keyword">init</span>   然后y确认<br></code></pre></td></tr></table></figure><h4 id="6-启动网站"><a href="#6-启动网站" class="headerlink" title="6.启动网站"></a>6.启动网站</h4><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">docsify serve</span><br></code></pre></td></tr></table></figure><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240725/%E7%9F%A5%E8%AF%86%E5%BA%931.54xnq0cauw.webp" alt="知识库1"></p><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><h4 id="1-README-md代表网站里面的内容，只需要修改这个就可以改动网站。"><a href="#1-README-md代表网站里面的内容，只需要修改这个就可以改动网站。" class="headerlink" title="1.README.md代表网站里面的内容，只需要修改这个就可以改动网站。"></a>1.README.md代表网站里面的内容，只需要修改这个就可以改动网站。</h4><p>docsify是不用重启的，实时同步新的改变</p><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240725/%E7%9F%A5%E8%AF%86%E5%BA%933.1lbq079l4e.webp" alt="知识库3"></p><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240725/%E7%9F%A5%E8%AF%86%E5%BA%934.7w6py2yezl.webp" alt="知识库4"></p><p>内容代码分析</p><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240725/%E4%B8%80%E7%BA%A7%E6%A0%87%E9%A2%98.9rjaqpauib.webp" alt="一级标题"></p><h4 id="2-src是一个图片链接，这些图片的存放方式全部是放在了第三方存储里面，然后Markdown里面只放了图片的链接。"><a href="#2-src是一个图片链接，这些图片的存放方式全部是放在了第三方存储里面，然后Markdown里面只放了图片的链接。" class="headerlink" title="2.src是一个图片链接，这些图片的存放方式全部是放在了第三方存储里面，然后Markdown里面只放了图片的链接。"></a>2.src是一个图片链接，这些图片的存放方式全部是放在了第三方存储里面，然后Markdown里面只放了图片的链接。</h4><p>这个地方，很明显就是放在了Github的cdn加速上</p><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240725/%E5%9B%BE%E7%89%87%E9%93%BE%E6%8E%A5.7w6py2yevk.webp" alt="图片链接"></p><h4 id="3-修改主题"><a href="#3-修改主题" class="headerlink" title="3.修改主题"></a>3.修改主题</h4><p>index.html的文件里面可以修改主题，主题一共有5种，修改配置文件，即可变化网站主题</p><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240725/%E4%B8%BB%E9%A2%98%E4%BF%AE%E6%94%B9.175a9c1abn.webp" alt="主题修改"></p><h4 id="4-网站封面（开启封面功能）"><a href="#4-网站封面（开启封面功能）" class="headerlink" title="4.网站封面（开启封面功能）"></a>4.网站封面（开启封面功能）</h4><p>coverpage:true  添加这个代码，就可以打开封面功能，文件：_coverpage.md</p><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240725/%E5%B0%81%E9%9D%A2.86tjr8dmyg.webp" alt="封面"></p><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240725/%E5%B0%81%E9%9D%A21.5c0vlfyg8b.webp" alt="封面1"></p><h4 id="5-导航栏"><a href="#5-导航栏" class="headerlink" title="5.导航栏"></a>5.导航栏</h4><p>loadNavbar:true 添加这个代码，就可以打开导航栏功能  文件：_navbar.md</p><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240725/%E5%AF%BC%E8%88%AA%E6%A0%8F.ic0pcfe0s.webp" alt="导航栏"></p><h2 id="上传github的静态网站"><a href="#上传github的静态网站" class="headerlink" title="上传github的静态网站"></a>上传github的静态网站</h2><blockquote><p>一个github只能运行一个静态网站</p></blockquote><h4 id="遇到的报错问题"><a href="#遇到的报错问题" class="headerlink" title="遇到的报错问题"></a>遇到的报错问题</h4><h5 id="error-remote-origin-already-exists"><a href="#error-remote-origin-already-exists" class="headerlink" title="error: remote origin already exists."></a>error: remote origin already exists.</h5><h6 id="原因："><a href="#原因：" class="headerlink" title="原因："></a>原因：</h6><p>当你在git push到GitHub的时候报错 出现error: remote origin already exists. 翻译过来呢就是 错误:远程源已经存在。</p><h6 id="解决方案："><a href="#解决方案：" class="headerlink" title="解决方案："></a>解决方案：</h6><p>第一: 查看远程库的信息: git remote -v<br>第二: 删除现有的远程仓库: git remote rm origin<br>第三: 建立新的远程仓库地址: git remote add origin + 远程仓库地址</p>]]></content>
    
    
    <categories>
      
      <category>搭建环境</category>
      
    </categories>
    
    
    <tags>
      
      <tag>搭建知识库</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>学会学习-2 大战拖延症</title>
    <link href="/2024/07/25/%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A020240727/%E5%AD%A6%E4%BC%9A%E5%AD%A6%E4%B9%A0-2%20%E5%A4%A7%E6%88%98%E6%8B%96%E5%BB%B6%E7%97%87/"/>
    <url>/2024/07/25/%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A020240727/%E5%AD%A6%E4%BC%9A%E5%AD%A6%E4%B9%A0-2%20%E5%A4%A7%E6%88%98%E6%8B%96%E5%BB%B6%E7%97%87/</url>
    
    <content type="html"><![CDATA[<h1 id="大战拖延症"><a href="#大战拖延症" class="headerlink" title="大战拖延症"></a>大战拖延症</h1><h2 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h2><ul><li>三流的人+<strong>一流的执行力</strong> &gt; 一流的人+<strong>三流的执行力</strong></li></ul><hr><h2 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h2><ul><li>例子：《海绵宝宝 第二季：拖延症》，可以对照这视频看看自己有没有这些问题</li></ul><hr><h2 id="拖延的原因"><a href="#拖延的原因" class="headerlink" title="拖延的原因"></a>拖延的原因</h2><ul><li>干扰太多（手机，朋友等）</li><li>借口太多，所谓完美</li><li>没有目标，计划没有可操作性</li></ul><h3 id="对抗拖延症"><a href="#对抗拖延症" class="headerlink" title="对抗拖延症"></a>对抗拖延症</h3><ul><li>第一招：手机静音放进包里，告知亲友自己什么时间点到什么时间点在学校或在做运动~</li><li>第二招：允许不完美，够用就行，让<strong>借口</strong>住嘴</li><li>第三招：定计划，设截止日期，任务分解到半天<ul><li>比如：英语学习三个月，第一个月背单词，第二个月学语法，第三个月刷题等，<ul><li>然后再细化到每周，每天，哪个时间点来完成对应的部分</li></ul></li></ul></li></ul><hr><h2 id="工具：to-do-list"><a href="#工具：to-do-list" class="headerlink" title="工具：to do list"></a>工具：to do list</h2><ul><li><p>每天需要做的事情（待办事宜）</p><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240726/%E5%BE%85%E5%8A%9E%E4%BA%8B%E5%AE%9C.7p3i4c3uc3.webp" alt="待办事宜"></p></li><li><p>机动时间</p><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240726/%E6%9C%BA%E5%8A%A8%E6%97%B6%E9%97%B4.77dgfr2gr8.webp" alt="机动时间"></p></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs">计划不能改，留出适当“机动时间”<br>“更好的一个计划”不如“马上去做”<br></code></pre></td></tr></table></figure><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240726/%E5%B9%B2%E5%B0%B1%E5%AE%8C%E4%BA%86.7i0a8wll9u.webp" alt="干就完了"></p><p><strong>just do it 干就完了</strong></p><hr><h3 id="定计划注意"><a href="#定计划注意" class="headerlink" title="定计划注意"></a>定计划注意</h3><ul><li>1.新的想法加入《待办事宜》，不影响本周计划</li><li>2.做计划的时候：先做最重要的事情，不要用<strong>不重要但是简单</strong>的事情麻痹自己，假装很忙</li></ul><hr><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><ul><li>执行力为王！</li><li>排除干扰，定下可执行的计划，并坚持执行</li></ul><hr><h2 id="作业"><a href="#作业" class="headerlink" title="作业"></a>作业</h2><ul><li>1.看<strong>海绵宝宝 拖延症</strong>的视频，对照自己，总结自己有哪些相似的地方</li><li>2.戒了吧<ul><li>第一周：把手机放起来并静音，自己定下可以看手机的时间，其他时间不能碰</li><li>第二周：把手机放起来并静音或关机，一天不碰<ul><li>之后平时手机静音，自己定时来检查手机的时间段，每天看手机对自己有没有影响</li></ul></li></ul></li><li>3.定未来七天的计划，评论区回复。持续执行下去，每天回复自己的评论来打卡进度</li></ul><hr><h2 id="自己的分析"><a href="#自己的分析" class="headerlink" title="自己的分析"></a>自己的分析</h2><ul><li>1.之前的跑步，学习英语等计划都慢慢<strong>搁浅</strong>了，为什么呢？拖延症？王者荣耀？<ul><li>也许是睡懒觉没精力，没有冥想等</li><li>要慢慢捡起来了</li></ul></li><li>2.just do it</li><li>3.早中晚都要利用到，把之前拉下的在补回来。</li><li>早上早起学习英语，然后冥想；上班中午看历史&#x2F;学习；晚上跑步，回来后继续学习，睡前看书。</li></ul>]]></content>
    
    
    <categories>
      
      <category>学习方法</category>
      
      <category>学会如何学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学习如何学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>博客更换主题</title>
    <link href="/2024/07/24/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0/"/>
    <url>/2024/07/24/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0/</url>
    
    <content type="html"><![CDATA[<h2 id="博客更换主题"><a href="#博客更换主题" class="headerlink" title="博客更换主题"></a>博客更换主题</h2><p>1.这个地址是github上你想更换主题的地址，然后文件夹命名为fluid<br><img src="https://s2.loli.net/2024/07/24/TzA4FewlNPOkaZp.png" alt="更换主题.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/fluid-dev/hexo-theme-fluid.git themes/fluid<br></code></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2024/07/24/hDJ3BX85MmsAr4H.png" alt="命令运行.png"><br>2.修改配置文件成新主题的文件夹名称</p><p><img src="https://s2.loli.net/2024/07/24/RhficMNg6lJwx2Y.png" alt="修改主题.png"></p><p>3.清理缓存</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo clean</span><br></code></pre></td></tr></table></figure><p>4.重新生成</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">hexo <span class="hljs-selector-tag">g</span><br></code></pre></td></tr></table></figure><p>5.开启去预览测试</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo s</span><br></code></pre></td></tr></table></figure><p>6.没有问题后更新到github上面去</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo d</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>搭建环境</category>
      
    </categories>
    
    
    <tags>
      
      <tag>搭建博客</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>学会学习-1 学习的秘密</title>
    <link href="/2024/07/24/%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A020240727/%E5%AD%A6%E4%BC%9A%E5%AD%A6%E4%B9%A0-1%20%E5%AD%A6%E4%B9%A0%E7%9A%84%E5%AF%86%E7%A0%81/"/>
    <url>/2024/07/24/%E5%AD%A6%E4%B9%A0%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A020240727/%E5%AD%A6%E4%BC%9A%E5%AD%A6%E4%B9%A0-1%20%E5%AD%A6%E4%B9%A0%E7%9A%84%E5%AF%86%E7%A0%81/</url>
    
    <content type="html"><![CDATA[<h1 id="学习的秘密"><a href="#学习的秘密" class="headerlink" title="学习的秘密"></a>学习的秘密</h1><p>为什么老师讲的都能懂，自己确做不出来？</p><hr><p>课程大纲<br><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240726/%E8%AF%BE%E7%A8%8B%E5%A4%A7%E7%BA%B2.4n7m2psbob.webp" alt="课程大纲"></p><hr><h2 id="什么是学习"><a href="#什么是学习" class="headerlink" title="什么是学习"></a>什么是学习</h2><ul><li>学习  &#x3D; 学+习</li><li>学    &#x3D; 预习+听课+扩展学习</li><li>习    &#x3D; 练习+测试+笔记+创造</li></ul><hr><h2 id="学习的真相"><a href="#学习的真相" class="headerlink" title="学习的真相"></a>学习的真相</h2><ul><li>动机都很美好，过程很痛苦，坚持下来的人很少</li><li>为什么看老师的作品（代码）能看懂？为啥自己写不出来？<br>看懂了≠ 学会了<br>最主要的是：形成肌肉记忆，比如打字、用筷子吃饭等</li><li>为什么离开鼓谱就不会打了？为什么照着老师的能做出来？为啥自己搞不出来？<br>模仿是“学”，创造是“习”：习得武功</li></ul><hr><h1 id="怎样成为一个高手（罗辑思维-183）"><a href="#怎样成为一个高手（罗辑思维-183）" class="headerlink" title="怎样成为一个高手（罗辑思维-183）"></a>怎样成为一个高手（罗辑思维-183）</h1><h2 id="核心：探究学习的真相"><a href="#核心：探究学习的真相" class="headerlink" title="核心：探究学习的真相"></a>核心：<strong>探究学习的真相</strong></h2><h2 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h2><p>1.理论</p><ul><li>异类：一万小时理论，但只靠时间来评价，并不可靠。</li><li><strong>刻意练习才是真实的对应着一万小时理论</strong></li><li>工程学的见解<ul><li>面对一个具体的目标，我们能不能拆解为具体的行为，一张一张的图纸，一颗一颗的钉子，我钉上去，就能够把这个工程建造出来（比如万维钢的课）</li></ul></li></ul><p>2.套路</p><ul><li>把前辈的经验封装在一个小的概念当中，然后后人拿来就用，而不是至于临场重新去思考。</li><li>第一种套路<ul><li>就是在教科书上找不着，但是一定是这行的前辈给你总结出的最值钱的经验</li></ul></li><li>第二种套路<ul><li>概念<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs">所有的教科书本质上一个学期就跟你讲几个概念，不论学科，其实那么多章的内容，每一章就讲一个概念<br>只要知道这个概念本身是什么？就够了<br></code></pre></td></tr></table></figure></li></ul></li><li>顶级高手的成才之路<ul><li>就是学别人成型的套路。把整座大厦拆成一个一个的砖头去训练，这样精度更高。</li><li>比如，健美，每一天针对不同的肌肉群去训练，然后劳逸结合的去恢复。</li></ul></li><li><strong>重复</strong>（非常关键）<ul><li>重复，反复重复。必须靠大量地重复训练</li><li><strong>针对性重复练习，这就是练习的本质</strong></li></ul></li></ul><p><img src="https://github.com/cool19980208/picx-images-hosting/raw/master/20240726/%E5%A5%97%E8%B7%AF.2obfcf3aq5.webp" alt="套路"></p><hr><h1 id="有效的学习方法"><a href="#有效的学习方法" class="headerlink" title="有效的学习方法"></a>有效的学习方法</h1><p>原理：甩脂机：被动减肥。只需要你站上去就会瘦，就好比<strong>莫扎特效应</strong>一样的假哦</p><h2 id="刻意"><a href="#刻意" class="headerlink" title="刻意"></a>刻意</h2><p>1.所谓的刻意就是<strong>持续地做你不会做的事</strong></p><ul><li>心理学的区域：舒适区→<strong>学习区（脱离舒适区）</strong>→恐慌区<ul><li><p>好比学习英语的理论（学习N+1难度的知识）</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs markdown">例子1：<br><span class="hljs-bullet">-</span> 泰格 伍兹（打高尔夫的老虎）<br><span class="hljs-bullet">  -</span> 特点是他在挥杆的半途当中，如果球场上出现了意外情况（比如有人乱跑，有人乱喊），他觉得这个动作打不好了，他能中途停下来，生生地停住，然后调整一下重新开始。<br><span class="hljs-bullet">  -</span> 为什么这个操作能让他在球场上成为<span class="hljs-strong">**神**</span>一般的存在呢<br><span class="hljs-bullet">-</span> 因为专业的运动员早就把挥杆练成了肌肉记忆，下意识的行为，当你脑子想停就停不住了。因为处于失控。<br><br>例子2：<br><span class="hljs-bullet">  -</span> 扎克伯格：不断挑战非舒适区。每年一个小目标（比如学中文等）<br></code></pre></td></tr></table></figure></li><li><p>永远不能让自己失控</p></li><li><p>那些高考状元不一定毕业之后就比其他人混的好，毕竟那是应试教育的锅。高分低能的来由</p></li><li><p>普通人的方便法门：进入好的学习环境，就会被动地被拖离舒适区，进入学习区</p><ul><li>好的学习环境特指<strong>能够提供即时反馈的环境</strong></li><li>贝尔实验室有一个不成文的规定：就是你在这里面，不管多牛。都有一项义务：这个实验室的所有年轻人问你问题，你不能回避，你必须给予回答。这就是在一个非常小的范围内，去建立一个即时的反馈系统。</li></ul></li><li><p><strong>想学习没有舒服的事，学习的本质就是脱离舒服</strong></p></li></ul></li></ul><hr><h1 id="互联网的发展让学习变的更好了吗？"><a href="#互联网的发展让学习变的更好了吗？" class="headerlink" title="互联网的发展让学习变的更好了吗？"></a>互联网的发展让学习变的更好了吗？</h1><h2 id="好处"><a href="#好处" class="headerlink" title="好处"></a>好处</h2><ul><li>互联网的发展让知识和信息变得越来越丰富</li><li>对于高手来讲，能够更快地去和新技术或新知识去融合，和旧知识去融合成新的知识。这个记忆库是不断长出来的活体结构，新知识也需要经过相互融合关联，然后带着各自的结构去融合到对应的树枝上面去</li></ul><h2 id="坏处"><a href="#坏处" class="headerlink" title="坏处"></a>坏处</h2><ul><li>可是对于学习者、阅读者来说，它带来另外一种负担，就是你不断地要做选择，不断地要做选什么的决策。<ul><li>你想一想知识的底层概念经过一代一代人的演化，在经过一层一层的超链接文本，你还能那么简单地找到某个知识的底层概念的来源吗？</li></ul></li><li>但是选择这件事情，你真以为是你在选吗？那你觉得聪明人在做什么呢？<ul><li>他们做的大量的工作就是取影响你的选择。</li><li>比如：微信上的文章标题带有一个（深度干货），和你工作还有关系，你会不会点呢？</li><li>比如：抖音短视频的核心是什么？ 快进快出被，多巴胺快速分泌让你快乐。</li><li>比如：谷歌公司的核心收入就是广告。核心战略就是一件事，就是不断地让你快进快出。出自于谷歌的用户体验设计师：<strong>让用户快进快出</strong>是他们的核心战略，他们的广告才会卖得出去。</li></ul></li></ul><hr><h2 id="记笔记，做成笔记本"><a href="#记笔记，做成笔记本" class="headerlink" title="记笔记，做成笔记本"></a>记笔记，做成笔记本</h2><ul><li>高手也许家中不会有太多的藏书，但会有很多很多的学习笔记。好比：钱钟书<blockquote><p>人类不仅创造了工具，工具反过来也在塑造人类，比如互联网<br>每个时代出现的新工具都会带来两个方面<br>1.工具的便利性<br>2.把现有的人类分成两拨人<br>  一拨人躺在工具的便利性上去享受，从而自己慢慢<strong>浅薄</strong>堕落（停止和退后）<br>  另外一拨人在研究这个工具的原理，利用这个工具去研发开拓其他的工具或地盘，去开拓新边疆，去寻找新文明的发展道路（前进）<br>例子：互联网的发展，大公司的工作模式<br>1.大部分人躺在那个越来越开阔的舒适区里面去享受（好比微信支付和支付宝的便利性，但花呗呢，借呗呢<del>）<br>2.可是总有一部分人带着满身的伤痛，呲牙咧嘴，痛苦不堪地想那个非舒适区（学习区）进发<br>大公司发展的越好，那么加班熬夜的情况也就越多。看看北上广深</del></p></blockquote></li></ul><hr><h1 id="阅读作业"><a href="#阅读作业" class="headerlink" title="阅读作业"></a>阅读作业</h1><h2 id="时间管理、拖延症"><a href="#时间管理、拖延症" class="headerlink" title="时间管理、拖延症"></a>时间管理、拖延症</h2><ul><li>GTD管理法则配合番茄钟</li><li>拖延症只是身体的一种表现或<strong>浅薄</strong>的堕落而已，毕竟实在舒适区内</li></ul><h2 id="如果记笔记"><a href="#如果记笔记" class="headerlink" title="如果记笔记"></a>如果记笔记</h2><ul><li>通过学习新知识，变成一片树叶与脑中的记忆库的旧知识进行结合，变成新的知识结构和记忆库进行相互关联的作用。</li><li>记笔记就是在加深这个融合的过程。</li></ul>]]></content>
    
    
    <categories>
      
      <category>学习方法</category>
      
      <category>学会如何学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>学习如何学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
